{"version":3,"sources":["../src/utilities/cities/index.ts","../src/helpers/is-last-char/index.ts","../src/helpers/only-numbers/index.ts","../src/helpers/generate-checksum/index.ts","../src/helpers/generate-random-number/index.ts","../src/common/states.ts","../src/utilities/inscricao-estadual/validators/validator.ts","../src/utilities/inscricao-estadual/validators/ac.ts","../src/utilities/inscricao-estadual/validators/al.ts","../src/utilities/inscricao-estadual/validators/ap.ts","../src/utilities/inscricao-estadual/validators/am.ts","../src/utilities/inscricao-estadual/validators/ba.ts","../src/utilities/inscricao-estadual/validators/ce.ts","../src/utilities/inscricao-estadual/validators/df.ts","../src/utilities/inscricao-estadual/validators/es.ts","../src/utilities/inscricao-estadual/validators/go.ts","../src/utilities/inscricao-estadual/validators/ma.ts","../src/utilities/inscricao-estadual/validators/mt.ts","../src/utilities/inscricao-estadual/validators/ms.ts","../src/utilities/inscricao-estadual/validators/mg.ts","../src/utilities/inscricao-estadual/validators/pa.ts","../src/utilities/inscricao-estadual/validators/pb.ts","../src/utilities/inscricao-estadual/validators/pr.ts","../src/utilities/inscricao-estadual/validators/pe.ts","../src/utilities/inscricao-estadual/validators/pi.ts","../src/utilities/inscricao-estadual/validators/rj.ts","../src/utilities/inscricao-estadual/validators/rn.ts","../src/utilities/inscricao-estadual/validators/rs.ts","../src/utilities/inscricao-estadual/validators/ro.ts","../src/utilities/inscricao-estadual/validators/rr.ts","../src/utilities/inscricao-estadual/validators/sc.ts","../src/utilities/inscricao-estadual/validators/sp.ts","../src/utilities/inscricao-estadual/validators/se.ts","../src/utilities/inscricao-estadual/validators/to.ts","../src/utilities/inscricao-estadual/index.ts","../src/utilities/pis/index.ts","../src/utilities/phone/index.ts","../src/utilities/email/index.ts","../src/utilities/licensePlate/index.ts","../src/utilities/processo-juridico/index.ts","../src/utilities/cep/index.ts","../src/utilities/boleto/index.ts","../src/utilities/currency/index.ts","../src/utilities/cpf/index.ts","../src/utilities/cnpj/index.ts","../src/utilities/capitalize/index.ts","../src/utilities/states/index.ts","../src/common/cities.ts","node_modules/faker/lib/fake.js","node_modules/faker/vendor/unique.js","node_modules/faker/lib/unique.js","node_modules/faker/vendor/mersenne.js","node_modules/faker/lib/random.js","node_modules/faker/lib/helpers.js","node_modules/faker/lib/name.js","node_modules/faker/lib/address.js","node_modules/faker/lib/company.js","node_modules/faker/lib/iban.js","node_modules/faker/lib/finance.js","node_modules/faker/lib/image_providers/lorempixel.js","node_modules/faker/lib/image_providers/unsplash.js","node_modules/faker/lib/image_providers/lorempicsum.js","node_modules/faker/lib/image.js","node_modules/faker/lib/lorem.js","node_modules/faker/lib/hacker.js","node_modules/faker/vendor/user-agent.js","node_modules/faker/lib/internet.js","node_modules/faker/lib/database.js","node_modules/faker/lib/phone_number.js","node_modules/faker/lib/date.js","node_modules/faker/lib/time.js","node_modules/faker/lib/commerce.js","node_modules/faker/lib/system.js","node_modules/faker/lib/git.js","node_modules/faker/lib/vehicle.js","node_modules/faker/lib/music.js","node_modules/faker/lib/index.js","node_modules/faker/lib/locales/pt_BR/address/city_prefix.js","node_modules/faker/lib/locales/pt_BR/address/city_suffix.js","node_modules/faker/lib/locales/pt_BR/address/country.js","node_modules/faker/lib/locales/pt_BR/address/building_number.js","node_modules/faker/lib/locales/pt_BR/address/street_suffix.js","node_modules/faker/lib/locales/pt_BR/address/secondary_address.js","node_modules/faker/lib/locales/pt_BR/address/postcode.js","node_modules/faker/lib/locales/pt_BR/address/state.js","node_modules/faker/lib/locales/pt_BR/address/state_abbr.js","node_modules/faker/lib/locales/pt_BR/address/default_country.js","node_modules/faker/lib/locales/pt_BR/address/index.js","node_modules/faker/lib/locales/pt_BR/company/suffix.js","node_modules/faker/lib/locales/pt_BR/company/name.js","node_modules/faker/lib/locales/pt_BR/company/index.js","node_modules/faker/lib/locales/pt_BR/commerce/color.js","node_modules/faker/lib/locales/pt_BR/commerce/department.js","node_modules/faker/lib/locales/pt_BR/commerce/product_name.js","node_modules/faker/lib/locales/pt_BR/commerce/index.js","node_modules/faker/lib/locales/pt_BR/internet/free_email.js","node_modules/faker/lib/locales/pt_BR/internet/domain_suffix.js","node_modules/faker/lib/locales/pt_BR/internet/index.js","node_modules/faker/lib/locales/pt_BR/lorem/words.js","node_modules/faker/lib/locales/pt_BR/lorem/index.js","node_modules/faker/lib/locales/pt_BR/name/male_first_name.js","node_modules/faker/lib/locales/pt_BR/name/female_first_name.js","node_modules/faker/lib/locales/pt_BR/name/first_name.js","node_modules/faker/lib/locales/pt_BR/name/last_name.js","node_modules/faker/lib/locales/pt_BR/name/prefix.js","node_modules/faker/lib/locales/pt_BR/name/suffix.js","node_modules/faker/lib/locales/pt_BR/name/index.js","node_modules/faker/lib/locales/pt_BR/phone_number/formats.js","node_modules/faker/lib/locales/pt_BR/phone_number/index.js","node_modules/faker/lib/locales/pt_BR/date/month.js","node_modules/faker/lib/locales/pt_BR/date/weekday.js","node_modules/faker/lib/locales/pt_BR/date/index.js","node_modules/faker/lib/locales/pt_BR/index.js","node_modules/faker/lib/locales/en/address/city_prefix.js","node_modules/faker/lib/locales/en/address/city_suffix.js","node_modules/faker/lib/locales/en/address/county.js","node_modules/faker/lib/locales/en/address/country.js","node_modules/faker/lib/locales/en/address/country_code.js","node_modules/faker/lib/locales/en/address/country_code_alpha_3.js","node_modules/faker/lib/locales/en/address/building_number.js","node_modules/faker/lib/locales/en/address/street_suffix.js","node_modules/faker/lib/locales/en/address/secondary_address.js","node_modules/faker/lib/locales/en/address/postcode.js","node_modules/faker/lib/locales/en/address/postcode_by_state.js","node_modules/faker/lib/locales/en/address/state.js","node_modules/faker/lib/locales/en/address/state_abbr.js","node_modules/faker/lib/locales/en/address/time_zone.js","node_modules/faker/lib/locales/en/address/city.js","node_modules/faker/lib/locales/en/address/street_name.js","node_modules/faker/lib/locales/en/address/street_address.js","node_modules/faker/lib/locales/en/address/default_country.js","node_modules/faker/lib/locales/en/address/direction.js","node_modules/faker/lib/locales/en/address/direction_abbr.js","node_modules/faker/lib/locales/en/address/index.js","node_modules/faker/lib/locales/en/company/suffix.js","node_modules/faker/lib/locales/en/company/adjective.js","node_modules/faker/lib/locales/en/company/descriptor.js","node_modules/faker/lib/locales/en/company/noun.js","node_modules/faker/lib/locales/en/company/bs_verb.js","node_modules/faker/lib/locales/en/company/bs_adjective.js","node_modules/faker/lib/locales/en/company/bs_noun.js","node_modules/faker/lib/locales/en/company/name.js","node_modules/faker/lib/locales/en/company/index.js","node_modules/faker/lib/locales/en/internet/free_email.js","node_modules/faker/lib/locales/en/internet/example_email.js","node_modules/faker/lib/locales/en/internet/domain_suffix.js","node_modules/faker/lib/locales/en/internet/avatar_uri.js","node_modules/faker/lib/locales/en/internet/index.js","node_modules/faker/lib/locales/en/database/collation.js","node_modules/faker/lib/locales/en/database/column.js","node_modules/faker/lib/locales/en/database/engine.js","node_modules/faker/lib/locales/en/database/type.js","node_modules/faker/lib/locales/en/database/index.js","node_modules/faker/lib/locales/en/lorem/words.js","node_modules/faker/lib/locales/en/lorem/supplemental.js","node_modules/faker/lib/locales/en/lorem/index.js","node_modules/faker/lib/locales/en/name/male_first_name.js","node_modules/faker/lib/locales/en/name/female_first_name.js","node_modules/faker/lib/locales/en/name/first_name.js","node_modules/faker/lib/locales/en/name/last_name.js","node_modules/faker/lib/locales/en/name/gender.js","node_modules/faker/lib/locales/en/name/prefix.js","node_modules/faker/lib/locales/en/name/suffix.js","node_modules/faker/lib/locales/en/name/title.js","node_modules/faker/lib/locales/en/name/name.js","node_modules/faker/lib/locales/en/name/index.js","node_modules/faker/lib/locales/en/phone_number/formats.js","node_modules/faker/lib/locales/en/phone_number/index.js","node_modules/faker/lib/locales/en/cell_phone/formats.js","node_modules/faker/lib/locales/en/cell_phone/index.js","node_modules/faker/lib/locales/en/business/credit_card_numbers.js","node_modules/faker/lib/locales/en/business/credit_card_expiry_dates.js","node_modules/faker/lib/locales/en/business/credit_card_types.js","node_modules/faker/lib/locales/en/business/index.js","node_modules/faker/lib/locales/en/commerce/color.js","node_modules/faker/lib/locales/en/commerce/department.js","node_modules/faker/lib/locales/en/commerce/product_name.js","node_modules/faker/lib/locales/en/commerce/product_description.js","node_modules/faker/lib/locales/en/commerce/index.js","node_modules/faker/lib/locales/en/team/creature.js","node_modules/faker/lib/locales/en/team/name.js","node_modules/faker/lib/locales/en/team/index.js","node_modules/faker/lib/locales/en/hacker/abbreviation.js","node_modules/faker/lib/locales/en/hacker/adjective.js","node_modules/faker/lib/locales/en/hacker/noun.js","node_modules/faker/lib/locales/en/hacker/verb.js","node_modules/faker/lib/locales/en/hacker/ingverb.js","node_modules/faker/lib/locales/en/hacker/phrase.js","node_modules/faker/lib/locales/en/hacker/index.js","node_modules/faker/lib/locales/en/app/name.js","node_modules/faker/lib/locales/en/app/version.js","node_modules/faker/lib/locales/en/app/author.js","node_modules/faker/lib/locales/en/app/index.js","node_modules/faker/lib/locales/en/finance/account_type.js","node_modules/faker/lib/locales/en/finance/transaction_type.js","node_modules/faker/lib/locales/en/finance/currency.js","node_modules/faker/lib/locales/en/finance/credit_card/visa.js","node_modules/faker/lib/locales/en/finance/credit_card/mastercard.js","node_modules/faker/lib/locales/en/finance/credit_card/discover.js","node_modules/faker/lib/locales/en/finance/credit_card/american_express.js","node_modules/faker/lib/locales/en/finance/credit_card/diners_club.js","node_modules/faker/lib/locales/en/finance/credit_card/jcb.js","node_modules/faker/lib/locales/en/finance/credit_card/switch.js","node_modules/faker/lib/locales/en/finance/credit_card/solo.js","node_modules/faker/lib/locales/en/finance/credit_card/maestro.js","node_modules/faker/lib/locales/en/finance/credit_card/laser.js","node_modules/faker/lib/locales/en/finance/credit_card/instapayment.js","node_modules/faker/lib/locales/en/finance/credit_card/index.js","node_modules/faker/lib/locales/en/finance/index.js","node_modules/faker/lib/locales/en/date/month.js","node_modules/faker/lib/locales/en/date/weekday.js","node_modules/faker/lib/locales/en/date/index.js","node_modules/faker/lib/locales/en/system/directoryPaths.js","node_modules/faker/lib/locales/en/system/mimeTypes.js","node_modules/faker/lib/locales/en/system/index.js","node_modules/faker/lib/locales/en/vehicle/manufacturer.js","node_modules/faker/lib/locales/en/vehicle/model.js","node_modules/faker/lib/locales/en/vehicle/vehicle_type.js","node_modules/faker/lib/locales/en/vehicle/fuel.js","node_modules/faker/lib/locales/en/vehicle/index.js","node_modules/faker/lib/locales/en/music/genre.js","node_modules/faker/lib/locales/en/music/index.js","node_modules/faker/lib/locales/en/index.js","node_modules/faker/locale/pt_BR.js","js/main.js"],"names":["isLastChar","index","input","length","onlyNumbers","String","replace","generateChecksum","base","weight","digits","weights","Array","fill","map","_","i","split","reduce","acc","digit","parseInt","generateRandomNumber","number","Math","random","toString","substr","STATES_DATA","AC","code","areaCodes","ieLength","name","AL","AP","AM","BA","CE","DF","ES","GO","MA","MG","MT","MS","PA","PB","PE","PI","PR","RJ","RN","RO","RS","RR","SC","SE","SP","TO","STATES","Object","keys","Validator","isValid","ie","checkLength","itStartsWith","calcIe","calcDigits","inscricaoEstadual","body","fDig","calcDigit","sDig","pos2dig","pos1dig","sum","forEach","mod","dig","digitCalc","charAt","product","floor","position","bodyInt","p","d","Boolean","includes","getModule","secondDig","firstDig","posSecondDig","posFirstDig","ieAtFirstPos","ieAtSecondPos","pos","arr","indexOf","rest","beginWith","begin","posFirstDigit","posSecondDigit","substring","firstDigit","calcFirstDigit","secondDigit","calcSecondDigit","digitAtFirstDigit","digitAtSecondDigit","slice","concat","item","sumString","lastChar","lastCharInt","positionFirstDigit","positionSecondDigit","checkOld","checkNew","oldStartsWith","calcOld","calcNew","STATE","uf","state","LENGTH","WEIGHTS","RESERVED_NUMBERS","isValidLength","pis","isReservedNumber","hasOnlyNumbers","match","removeSeparators","numeric","weightedChecksum","verifyingDigit","calculatedDigit","VALID_AREA_CODES","PHONE_MIN_LENGTH","PHONE_MAX_LENGTH","MOBILE_VALID_FIRST_NUMBERS","LANDLINE_VALID_FIRST_NUMBERS","isValidDDD","phone","Number","isValidMobilePhoneLength","isValidLandlinePhoneLength","isValidMobilePhoneFirstNumber","isValidLandlinePhoneFirstNumber","isValidFirstNumber","parsePhoneDigits","isValidDigits","isValidMobilePhone","isValidLandlinePhone","MAX_RECIPIENT_LENGTH","MAX_DOMAIN_LENGTH","MAX_EMAIL_LENGTH","validEmailRegex","stringIsBiggerThan","len","strs","s","email","matchedEmail","exec","recipient","domain","topLevelDomain","validMercosulLicensePlateRegex","validBrazilianLicensePlateRegex","licensePlate","test","DOT_INDEXES","HYPHEN_INDEXES","format","processoJuridico","result","cep","PARTIALS","end","start","SPACE_INDEXES","CHECK_DIGIT_POSITION","MOD_11_WEIGHTS","initial","MOD_10_WEIGHTS","DIGITABLE_LINE_TO_BOLETO_CONVERT_POSITIONS","digitableLine","mod10","partial","reverse","mod11","value","isValidPartials","every","parse","isValidCheckDigit","parsedDigitableLine","boleto","options","precision","toFixed","CHECK_DIGITS_INDEXES","cpf","pad","padStart","generate","stateCode","baseCPF","firstCheckDigitMod","firstCheckDigit","secondCheckDigitMod","secondCheckDigit","isValidFormat","isValidChecksum","SLASH_INDEXES","FIRST_CHECK_DIGIT_WEIGHTS","SECOND_CHECK_DIGIT_WEIGHTS","cnpj","baseCNPJ","unshift","numbers","ACRONYMS","PREPOSITIONS","capitalize","lowerCaseWords","upperCaseWords","filter","word","lowerCaseWord","toLocaleLowerCase","upperCaseWord","toLocaleUpperCase","join","stateNameComparer","nameA","nameB","localeCompare","sortByStateName","states","sort","getStates","CITIES_DATA","sortAlphabetically","cityA","cityB","getCities","foundState","find","values","city","fullName","firstName","lastName","internet","mobilePhone","phoneNumber","bankAccount","finance","account","bankAgency","mask","vehicle","vrm","inputs","agency","license","fillInputs","entries","id","document","getElementById"],"mappings":"AuHAA,AIAA,A8BAA,A3EAA,OyCAA,AIAA,A8BAA,A3EAA,QyCAA,AIAA,A8BAA,A3EAA,CyCCA,AIAA,A8BAA,QlCCA,AIAA,A8BAA,OlCCA,OkCAA,MACA,cACA,MACA,aACA,cACA,aACA,UACA,QACA,OACA,OACA,KACA,OACA,YACA,YACA,KACA,QACA,aACA,SACA,QACA,QACA,OACA,YACA,aACA,MACA,OACA,MACA,QACA,MACA,OACA,eACA,QACA,UACA,MACA,MACA,UACA,aACA,QACA,WACA,QACA,UACA,QACA,OACA,QACA,MACA,OACA,cACA,WACA,QACA,MACA,OACA,MACA,UACA,OACA,OACA,UACA,WACA,KACA,SACA,KACA,SACA,SACA,UACA,UACA,aACA,KACA,OACA,KACA,SACA,SACA,OACA,UACA,iBACA,QACA,WACA,OACA,OACA,QACA,aACA,OACA,WACA,MACA,WACA,aACA,OACA,KACA,UACA,KACA,KACA,UACA,cACA,OACA,QACA,MACA,MACA,OACA,gBACA,MACA,KACA,KACA,YACA,QACA,OACA,OACA,QACA,YACA,KACA,QACA,OACA,cACA,UACA,MACA,aACA,cACA,aACA,QACA,MACA,aACA,WACA,QACA,WACA,OACA,UACA,KACA,OACA,YACA,YACA,OACA,YACA,aACA,MACA,YACA,MACA,KACA,eACA,OACA,QACA,OACA,QACA,QACA,YACA,OACA,KACA,QACA,MACA,UACA,WACA,WACA,QACA,KACA,MACA,UACA,KACA,UACA,OACA,KACA,QACA,SACA,QACA,UACA,MACA,KACA,WACA,aACA,MACA,SACA,UACA,MACA,SACA,QACA,MACA,WACA,QACA,SACA,QACA,UACA,MACA,QACA,WACA,MACA,MACA,QACA,KACA,OACA,SACA,UACA,SACA,WACA,QACA,WACA,YACA,MACA,QACA,QACA,cACA,aACA,QACA,YACA,KACA,MACA,cACA,MACA,QACA,MACA,UACA,MACA,SACA,MACA,WACA,QACA,WACA,KACA,OACA,MACA,KACA,YACA,WACA,UAC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A,UACA,WACA,uBACA,wBACA,QACA,YACA,aACA,YACA,QACA,aACA,SACA,aACA,eACA,SACA,aACA,sBACA,sBACA,qBACA,eACA,YACA,eACA,WACA,gBACA,kBACA,gBACA,aACA,iBACA,oBACA,qBACA,YACA,eACA,aACA,qBACA,YACA,aACA,wBACA,uBACA,eACA,gBACA,qBACA,cACA,UACA,UACA,aACA,OACA,QACA,WACA,kBACA,mBACA,sBACA,iBACA,aACA,mBACA,aACA,iBACA,SACA,WACA,SACA,kBACA,eACA,aACA,cACA,UACA,uBACA,cACA,WACA,QACA,mBACA,QACA,eACA,eACA,kBACA,UACA,UACA,qBACA,YACA,WACA,cACA,YACA,WACA,QACA,UACA,cACA,QACA,mBACA,WACA,WACA,WACA,YACA,cACA,UACA,eACA,UACA,UACA,UACA,oBACA,QACA,cACA,WACA,WACA,WACA,QACA,UACA,aACA,aACA,UACA,SACA,YACA,YACA,UACA,UACA,QACA,UACA,YACA,WACA,UACA,cACA,sBACA,WACA,cACA,SACA,YACA,WACA,YACA,cACA,kBACA,SACA,WACA,UACA,wBACA,yBACA,aACA,sBACA,YACA,uBACA,aACA,cACA,aACA,cACA,UACA,YACA,cACA,eACA,cACA,cACA,cACA,uBACA,YACA,cACA,cACA,YACA,gBACA,UACA,sBACA,UACA,iBACA,qBACA,qBACA,UACA,eACA,SACA,eACA,UACA,aACA,qBACA,iBACA,cACA,WACA,cACA,eACA,aACA,YACA,YACA,YACA,cACA,QACA,kBACA,eACA,SACA,aACA,aACA,YACA,YACA,gBACA,yBACA,sBACA,oBACA,wBACA,eACA,yBACA,6BACA,sBACA,wBACA,2BACA,yBACA,yBACA,8BACA,iBACA,eACA,WACA,aACA,eACA,yBACA,qBACA,sBACA,oBACA,2BACA,yBACA,6BACA,eACA,YACA,iBACA,oBACA,oBACA,uBACA,WACA,UACA,eACA,cACA,WACA,WACA,SACA,SACA,SACA,sBACA,SACA,aACA,iBACA,WACA,gBACA,qBACA,aACA,yBAEFE,GAAI,CACF,sBACA,SACA,aACA,UACA,UACA,UACA,WACA,SACA,YACA,UACA,sBACA,WACA,YACA,cACA,WACA,eACA,iBACA,gBACA,YACA,cACA,oBACA,eACA,kBACA,WACA,cACA,aACA,iBACA,eACA,yBACA,YACA,WACA,WACA,WACA,UACA,SACA,QACA,SACA,UACA,UACA,YACA,QACA,SACA,WACA,aACA,SACA,gBACA,UACA,kBACA,UACA,WACA,SACA,SACA,WACA,kBACA,YACA,cACA,UACA,kBACA,sBACA,sBACA,gBACA,iBACA,eACA,YACA,SACA,UACA,aACA,QACA,cACA,QACA,YACA,gBACA,mBACA,WACA,eACA,sBACA,qBACA,sBACA,qBACA,cACA,cACA,SACA,wBACA,kBACA,gBACA,WACA,YACA,uBACA,oBACA,aACA,UACA,aACA,aACA,gBACA,aACA,QACA,UACA,cACA,mBACA,aACA,oBACA,qBACA,qBACA,qBACA,eACA,QACA,SACA,SACA,SACA,UACA,cACA,aACA,SACA,WACA,aACA,YACA,gBACA,aACA,aACA,gBACA,gBACA,eACA,gBACA,aACA,QACA,WACA,YACA,YACA,UACA,cACA,YACA,YACA,eACA,cACA,kBACA,gBACA,YACA,WACA,YACA,WACA,YACA,YACA,QACA,YACA,UACA,gBACA,qBACA,gBACA,iBACA,kBACA,qBACA,qBACA,WACA,sBACA,cACA,YACA,YACA,gBACA,cACA,gBACA,aACA,cACA,yBACA,SACA,SACA,UACA,kBACA,mBACA,aACA,QACA,iBACA,mBACA,UACA,UACA,YACA,WACA,mBACA,UACA,UACA,SACA,mBACA,aACA,yBACA,8BACA,wBACA,uBACA,uBACA,2BACA,oBACA,yBACA,sBACA,UACA,YACA,YACA,qBACA,YACA,uBACA,mBACA,aACA,WACA,YACA,mBACA,cACA,eACA,UACA,UACA,aACA,qBACA,gBACA,kBACA,wBACA,8BACA,WACA,kBACA,WACA,YACA,YACA,cACA,wBACA,WACA,YACA,mBACA,UACA,SACA,gBACA,gBACA,eACA,uBACA,iBACA,QACA,iBACA,eACA,QACA,aACA,yBACA,mBACA,aACA,uBACA,WACA,SACA,yBACA,wBACA,YACA,cACA,gBACA,cACA,cACA,YACA,aACA,cACA,eACA,aACA,eACA,kBACA,oBACA,kBACA,iBACA,cACA,eACA,UACA,cACA,oBACA,qBACA,eACA,sBACA,UACA,aACA,eACA,WACA,4BACA,SACA,gBACA,oBACA,iBACA,cACA,mBACA,UACA,OACA,cACA,aACA,cACA,qBACA,qBACA,SACA,aACA,YACA,UACA,UACA,qBACA,mBACA,mBACA,mBACA,eACA,iBACA,cACA,iBACA,iBACA,YACA,sBACA,iBACA,SACA,aACA,WACA,aACA,eACA,YACA,SACA,UACA,YACA,UACA,uBACA,WACA,aACA,WACA,QACA,aACA,aACA,UACA,aACA,UACA,aACA,UACA,WACA,aACA,YACA,YACA,YACA,OACA,YACA,QACA,YACA,UACA,UACA,oBACA,YACA,OACA,kBACA,UACA,aACA,WACA,QACA,WACA,gBACA,gBACA,aACA,eACA,QACA,UACA,UACA,YACA,QACA,UACA,WACA,SACA,UACA,gBACA,UACA,aACA,YACA,aACA,aACA,WACA,SACA,UACA,eACA,qBACA,aACA,wBACA,UACA,WACA,YACA,WACA,UACA,YACA,cACA,UACA,aACA,YACA,gBACA,SACA,SACA,SACA,YACA,WACA,UACA,WACA,gBACA,UACA,YACA,QACA,YACA,WACA,UACA,WACA,YACA,WACA,QACA,UACA,oBACA,UACA,WACA,YACA,gBACA,WACA,WACA,kBACA,SACA,WACA,cACA,0BACA,cACA,iBACA,gBACA,UACA,eACA,YACA,UACA,YACA,WACA,UACA,gBACA,gBACA,eACA,cACA,iBACA,kBACA,UACA,UACA,QACA,WACA,WACA,SACA,mBACA,gBACA,aACA,YACA,cACA,mBACA,SACA,YACA,aACA,aACA,MACA,aACA,UACA,yBACA,cACA,UACA,QACA,WACA,aACA,UACA,iBACA,aACA,cACA,UACA,UACA,kBACA,YACA,eACA,kBACA,iBACA,aACA,cACA,cACA,iBACA,iBACA,iBACA,SACA,aACA,aACA,WACA,WACA,SACA,kBACA,SACA,WACA,cACA,UACA,WACA,YACA,YACA,QACA,QACA,QACA,WACA,kBACA,cACA,wBACA,aACA,aACA,gBACA,gBACA,uBACA,aACA,gBACA,YACA,uBACA,iBACA,iBACA,SACA,SACA,QACA,aACA,eACA,eACA,UACA,QACA,aACA,WACA,WACA,aACA,WACA,aACA,WACA,YACA,cACA,aACA,mBACA,eACA,eACA,aACA,gBACA,wBACA,cACA,SACA,eACA,WACA,kBACA,kBACA,mBACA,YACA,WACA,cACA,YACA,aACA,sBACA,iBACA,gBACA,YACA,YACA,QACA,QACA,QACA,aACA,YACA,WACA,YACA,eACA,YACA,gBACA,eACA,cACA,cACA,WACA,SACA,QACA,iBACA,aACA,uBACA,gBACA,YACA,QACA,aACA,eACA,gBACA,gBACA,kBACA,WACA,0BACA,eACA,iBACA,iBACA,UACA,QACA,WACA,WACA,UACA,YACA,WACA,UACA,OACA,uBACA,wBACA,wBACA,qBACA,UACA,eACA,aACA,WACA,WACA,UACA,cACA,YACA,cACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,aACA,eACA,qBACA,cACA,cACA,OACA,eACA,aACA,aACA,kBACA,SACA,QACA,WACA,aACA,uBACA,uBACA,wBACA,sBACA,qBACA,gBACA,YACA,UACA,cACA,UACA,SACA,gBACA,aACA,cACA,YACA,sBACA,oBACA,qBACA,YACA,YACA,WACA,aACA,YACA,WACA,gBACA,qBACA,iBACA,YACA,YACA,eACA,eACA,YACA,mBACA,UACA,UACA,qBACA,WACA,QACA,SACA,cACA,aACA,UACA,kBACA,gBACA,yBACA,+BACA,2BACA,sBACA,wBACA,0BACA,0BACA,oBACA,wBACA,gBACA,cACA,kBACA,yBACA,uBACA,wBACA,uBACA,0BACA,0BACA,sBACA,uBACA,wBACA,sBACA,gBACA,oBACA,wBACA,sBACA,qBACA,sBACA,oBACA,sBACA,qBACA,oBACA,qBACA,0BACA,+BACA,yBACA,0BACA,2BACA,yBACA,0BACA,8BACA,iBACA,gBACA,gBACA,SACA,UACA,YACA,iBACA,iBACA,kBACA,qBACA,8BACA,sBACA,mBACA,uBACA,WACA,YACA,sBACA,mBACA,mBACA,oBACA,WACA,WACA,wBACA,QACA,cACA,YACA,cACA,gBACA,YACA,gBACA,WACA,oBACA,kBACA,qBACA,yBACA,wBACA,gBACA,yBACA,yBACA,0BACA,qBACA,cACA,yBACA,wBACA,wBACA,sBACA,4BACA,2BACA,yBACA,cACA,uBACA,oBACA,mBACA,qBACA,uBACA,qBACA,qBACA,sBACA,qBACA,yBACA,6BACA,uBACA,sBACA,oBACA,mBACA,oBACA,uBACA,mBACA,uBACA,yBACA,sBACA,oBACA,sBACA,eACA,qBACA,qBACA,sBACA,uBACA,YACA,qBACA,8BACA,iCACA,wBACA,4BACA,yBACA,2BACA,6BACA,6BACA,YACA,sBACA,sBACA,uBACA,YACA,aACA,WACA,SACA,UACA,qBACA,YACA,YACA,gBACA,UACA,aACA,QACA,YACA,gBACA,SACA,SACA,gBACA,cACA,cACA,cACA,cACA,YACA,cACA,aACA,OACA,UACA,aACA,MACA,aACA,OACA,iBACA,kBACA,UACA,WACA,gBACA,gBACA,6BACA,WACA,kBACA,cACA,UACA,cACA,YACA,gBACA,YACA,aACA,UACA,iBACA,eACA,cACA,WACA,yBACA,SACA,eACA,kBACA,iBACA,WACA,gBACA,iBACA,mBAEFG,GAAI,CACF,aACA,kBACA,QACA,OACA,WACA,WACA,WACA,SACA,aACA,QACA,iBACA,iBACA,SACA,QACA,QACA,UACA,YACA,WACA,QACA,YACA,yBACA,SACA,WACA,cACA,2BACA,cACA,SACA,SACA,qBACA,qBACA,SACA,oBACA,WACA,eACA,YACA,SACA,UACA,wBACA,oBACA,kBACA,eACA,aACA,QACA,SACA,aACA,sBACA,OACA,uBACA,oBACA,oBACA,SACA,cACA,eACA,YACA,kBACA,UACA,WACA,aACA,eACA,UACA,SACA,oBACA,mBACA,SACA,WACA,YACA,WACA,eACA,UACA,WACA,OACA,mBACA,eACA,QACA,aACA,0BACA,eACA,iBACA,iBACA,oBACA,iBACA,YACA,sBACA,QACA,SACA,oBACA,cACA,cACA,aACA,YACA,UACA,SACA,kBACA,SACA,eACA,UACA,YACA,YACA,WACA,YACA,iBACA,YACA,cACA,aACA,wBACA,sBACA,uBACA,sBACA,4BACA,sBACA,sBACA,WACA,gBACA,wBACA,WACA,wBACA,QACA,0BACA,2BACA,wBACA,wBACA,qBACA,0BACA,oBACA,sBACA,uBACA,sBACA,6BACA,YACA,aACA,cACA,WACA,aACA,UACA,SACA,UACA,cACA,SACA,QACA,QACA,mBACA,WACA,qBACA,UAEFR,GAAI,CACF,UACA,UACA,SACA,WACA,SACA,aACA,YACA,aACA,WACA,oBACA,WACA,UACA,UACA,YACA,WACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,cACA,WACA,WACA,YACA,aACA,cACA,UACA,eACA,UACA,aACA,WACA,YACA,SACA,SACA,YACA,WACA,WACA,UACA,UACA,QACA,SACA,aACA,QACA,SACA,UACA,QACA,SACA,OACA,4BACA,QACA,UACA,eACA,YACA,YACA,SACA,eACA,kBACA,SACA,YACA,QACA,WACA,UACA,sBACA,eACA,cACA,YACA,YACA,WACA,cACA,SACA,MACA,SACA,gBACA,aACA,YACA,MACA,WACA,UACA,WACA,YACA,WACA,UACA,YACA,WACA,UACA,UACA,cACA,cACA,YACA,aACA,SACA,OACA,yBACA,oBACA,QACA,uBACA,oBACA,WACA,YACA,aACA,QACA,cACA,UACA,UACA,UACA,WACA,QACA,UACA,eACA,UACA,mBACA,cACA,UACA,YACA,UACA,UACA,cACA,cACA,eACA,QACA,OACA,UACA,WACA,SACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,eACA,YACA,aACA,UACA,cACA,kBACA,iBACA,UACA,YACA,UACA,aACA,kBACA,UACA,UACA,eACA,UACA,WACA,YACA,SACA,WACA,UACA,iBACA,oBACA,oBACA,iBACA,aACA,SACA,aACA,eACA,0BACA,wBACA,mBACA,qBACA,WACA,WACA,OACA,YACA,UACA,SACA,SACA,UACA,QACA,SACA,cACA,SACA,UACA,kBACA,iBAEFD,GAAI,CACF,QACA,SACA,YACA,WACA,UACA,aACA,WACA,WACA,WACA,mBACA,kBACA,QACA,UACA,YACA,UACA,UACA,QACA,kBACA,oBACA,QACA,WACA,UACA,QACA,UACA,UACA,WACA,SACA,gBACA,cACA,eACA,SACA,QACA,kBACA,iBACA,kBACA,iBACA,YACA,aACA,cACA,WACA,WACA,aACA,YACA,WACA,qBACA,oBACA,qBACA,UACA,SACA,UACA,WACA,cACA,UACA,qBACA,UACA,YACA,aACA,UACA,0BACA,YACA,SACA,WACA,UACA,YACA,QACA,mBACA,UACA,SACA,WACA,0BACA,gBACA,WACA,cACA,UACA,WACA,UACA,YACA,UACA,YACA,wBACA,eACA,YACA,WACA,mBACA,aACA,YACA,eACA,aACA,OACA,WACA,OACA,UACA,YACA,OACA,UACA,QACA,qBACA,uBACA,qBACA,uBACA,QACA,WACA,uBACA,mBACA,YACA,SACA,kBACA,aACA,WACA,cACA,cACA,aACA,iBACA,SACA,gBACA,gBACA,eACA,cACA,mBACA,cACA,iBACA,eACA,aACA,YACA,oBACA,YACA,gBACA,mBACA,aACA,gBACA,gBACA,uBACA,SACA,QACA,SACA,iBACA,SACA,UACA,wBACA,UACA,WACA,aACA,aACA,OACA,YACA,WACA,WACA,SACA,UACA,aACA,WACA,eACA,WACA,YACA,WACA,UACA,YACA,OACA,UACA,YACA,QACA,SACA,YACA,WACA,QACA,QACA,WACA,UACA,UACA,WACA,QACA,QACA,UACA,YACA,UACA,UACA,SACA,QACA,UACA,aACA,oBACA,mBACA,WACA,YACA,UACA,SACA,WACA,UACA,YACA,UACA,aACA,YACA,aACA,QACA,WACA,YACA,SACA,UACA,SACA,UACA,SACA,UACA,OACA,YACA,WACA,WACA,aACA,YACA,YACA,WACA,SACA,YACA,YACA,UACA,eACA,WACA,WACA,UACA,UACA,WACA,oBACA,aACA,OACA,YACA,oBACA,UACA,UACA,QACA,mBACA,UACA,qBACA,8BACA,yBACA,WACA,WACA,WACA,WACA,gBACA,WACA,cACA,QACA,UACA,oBACA,kBACA,WACA,UACA,aACA,QACA,oBACA,UACA,mBACA,SACA,gBACA,gBACA,WACA,YACA,UACA,cACA,UACA,kBACA,YACA,SACA,SACA,mBACA,aACA,iBACA,0BACA,WACA,UACA,SACA,eACA,aACA,aACA,cACA,YACA,eACA,gBACA,aACA,cACA,iBACA,eACA,WACA,yBACA,aACA,aACA,uBACA,YACA,YACA,YACA,cACA,aACA,eACA,kBACA,SACA,QACA,eACA,SACA,YACA,WACA,iBACA,SACA,WACA,aACA,WACA,SACA,aACA,eACA,YACA,SACA,QACA,mBACA,2BACA,4BACA,cACA,YACA,YACA,aACA,kBACA,UACA,eACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,WACA,gBACA,iBACA,eACA,UACA,cACA,uBACA,WACA,gBACA,gBACA,sBACA,wBACA,aACA,cACA,yBACA,uBACA,kBACA,WACA,UACA,eACA,cACA,yBACA,gBACA,UACA,UACA,QACA,SACA,wBACA,mBACA,WACA,gBACA,cACA,mBACA,WACA,cACA,eACA,aACA,eACA,cACA,gBACA,eACA,aACA,yBACA,YACA,sBACA,cACA,yBACA,sBACA,sBACA,uBACA,yBACA,gBACA,kBACA,yBACA,UACA,cACA,YACA,UACA,aACA,sBACA,kBACA,cACA,YACA,aACA,WACA,SACA,OACA,WACA,QACA,SACA,QACA,YACA,MACA,SACA,UACA,SACA,UACA,UACA,UACA,YACA,SACA,uBACA,cACA,iBACA,iBACA,SACA,YACA,sBACA,cACA,YACA,iBAEFa,GAAI,CACF,SACA,eACA,gBACA,sBACA,qBACA,cACA,eACA,eACA,UACA,kBACA,UACA,SACA,QACA,SACA,WACA,iBACA,YACA,YACA,UACA,SACA,UACA,YACA,mBACA,QACA,sBACA,UACA,UACA,aACA,eACA,iBACA,kBACA,WACA,uBACA,wBACA,WACA,gBACA,0BACA,2BACA,yBACA,kBACA,mBACA,cACA,qBACA,eACA,WACA,qBACA,UACA,aACA,iBACA,aACA,UACA,UACA,QACA,wBACA,mBACA,mBACA,eACA,cACA,cACA,eACA,mBACA,SACA,YACA,WACA,2BACA,WACA,aACA,WACA,SACA,aACA,oBACA,aACA,cACA,WACA,gBACA,cACA,UACA,WACA,eACA,uBACA,WACA,WACA,oBACA,0BACA,iBACA,oBACA,eACA,qBACA,oBACA,kBACA,cACA,WACA,UACA,mBACA,WACA,mBACA,oBACA,kBACA,gBACA,YACA,iBACA,iBACA,qBACA,sBACA,gBACA,iBACA,yBACA,QACA,UACA,qBACA,qBACA,WACA,uBACA,SACA,WACA,gBACA,UACA,mBACA,gBACA,gBACA,kBACA,oBACA,QACA,mBACA,gBACA,UACA,UACA,eACA,WACA,aACA,YACA,YACA,UACA,aACA,aACA,eACA,YACA,SACA,gBACA,SACA,QACA,UACA,WACA,WACA,SACA,QACA,WACA,QACA,eACA,iBACA,WACA,QACA,mBACA,QACA,UACA,WACA,eACA,aACA,SACA,oBACA,YACA,gBACA,WACA,UACA,QACA,OACA,SACA,cACA,YACA,cACA,iBACA,aACA,SACA,SACA,gBACA,gBACA,aACA,WACA,iBACA,iBACA,UACA,UACA,SACA,OACA,WACA,qBACA,WACA,eACA,YACA,SACA,SACA,WACA,WACA,aACA,eACA,SACA,UACA,aACA,aACA,cACA,gBACA,eACA,eACA,0BACA,eACA,WACA,WACA,UACA,oBACA,UACA,SACA,aACA,aACA,YACA,UACA,aACA,WACA,YACA,gBACA,aACA,WACA,UACA,YACA,SACA,gBACA,WACA,iBACA,2BACA,uBACA,yBACA,cACA,aACA,iBACA,6BACA,cACA,mBACA,gBACA,eACA,uBACA,qBACA,kBACA,aACA,iBACA,aACA,WACA,sBACA,WACA,SACA,WACA,WACA,WACA,aACA,YACA,cACA,YACA,mBACA,eACA,cACA,gBACA,gBACA,UACA,UACA,UACA,sBACA,WACA,SACA,YACA,eACA,UACA,eACA,OACA,uBACA,WACA,eACA,mBACA,WACA,iBACA,iBACA,aACA,gBACA,iBACA,YACA,4BACA,mBACA,gBACA,SACA,iBACA,oBACA,WACA,gBACA,gBACA,mBACA,qBACA,gBACA,cACA,aACA,gBACA,wBACA,UACA,WACA,aACA,UACA,oBACA,iBACA,qBACA,WACA,UACA,uBACA,qBACA,oBACA,YACA,WACA,WACA,SACA,kBACA,WACA,gBACA,mBACA,kBACA,eACA,yBACA,8BACA,WACA,eACA,aACA,uBACA,wBACA,cACA,uBACA,gBACA,eACA,wBACA,4BACA,qBACA,2BACA,yBACA,2BACA,4BACA,eACA,WACA,UACA,oBACA,SACA,yBACA,YACA,eACA,kBACA,SACA,qBACA,wBACA,oBACA,oBACA,0BACA,wBACA,yBACA,uBACA,WACA,oBACA,mBACA,sBACA,uBACA,oBACA,uBACA,sBACA,oBACA,sBACA,4BACA,WACA,WACA,WACA,WACA,SACA,kBACA,iBACA,YACA,aACA,aACA,SACA,iBACA,SACA,WACA,wBACA,kBACA,oBACA,UACA,QACA,UACA,WACA,UACA,mBACA,OACA,WACA,qBACA,OACA,UACA,WACA,iBACA,SACA,UAEFM,GAAI,CACF,gBACA,eACA,aACA,aACA,iBACA,kBACA,WACA,WACA,kBACA,aACA,iBACA,SACA,UACA,WACA,YACA,UACA,gBACA,WACA,UACA,WACA,SACA,4BACA,yBACA,qBACA,oBACA,qBACA,mBACA,cACA,eACA,cACA,sBACA,WACA,gBACA,UACA,WACA,iBACA,sBACA,YACA,qBACA,aACA,YACA,WACA,iBACA,oBACA,aACA,UACA,QACA,SACA,WACA,eACA,oBACA,YACA,eACA,YACA,YACA,WACA,oBACA,aACA,aACA,iBACA,UACA,cACA,cACA,sBACA,UACA,eACA,YACA,mBACA,kBACA,kBACA,gBACA,SACA,WACA,aACA,WACA,cACA,WACA,qBACA,YACA,kBACA,aACA,OACA,cACA,qBACA,iBACA,gBACA,iBACA,eACA,YACA,eACA,SACA,WACA,SACA,SACA,yBACA,WACA,YACA,YACA,aACA,aACA,iBACA,WACA,iBACA,QACA,UACA,UACA,SACA,SACA,WACA,SACA,UACA,SACA,QACA,iBACA,SACA,WACA,aACA,QACA,QACA,cACA,aACA,SACA,UACA,aACA,SACA,aACA,MACA,QACA,SACA,kBACA,YACA,iBACA,eACA,UACA,YACA,eACA,QACA,eACA,QACA,SACA,iBACA,aACA,eACA,cACA,gBACA,iBACA,UACA,aACA,UACA,WACA,QACA,gBACA,eACA,WACA,YACA,SACA,eACA,cACA,UACA,aACA,SACA,SACA,cACA,gBACA,eACA,kBACA,aACA,eACA,iBACA,cACA,cACA,iBACA,UACA,iBACA,OACA,aACA,QACA,SACA,UACA,aACA,WACA,WACA,YACA,UACA,kBACA,cACA,cACA,iBACA,QACA,WACA,iBACA,cACA,cACA,iBACA,WACA,kBACA,WACA,aACA,sBACA,gBACA,aACA,cACA,gBACA,eACA,6BACA,qBACA,mBACA,WACA,WACA,kBACA,cACA,eACA,aACA,gBACA,eACA,eACA,aACA,iBACA,UACA,SACA,aACA,SACA,WACA,eACA,SACA,gBACA,eACA,qBACA,oBACA,kBACA,+BACA,kBACA,4BACA,WACA,YACA,QACA,aACA,cACA,UACA,aACA,mBACA,iBACA,gBACA,aACA,uBACA,eACA,uBACA,cACA,WACA,oBACA,sBACA,mBACA,uBACA,oBACA,kBACA,wBACA,cACA,eACA,0BACA,sBACA,yBACA,OACA,UACA,YACA,UACA,eACA,QACA,eACA,UACA,eACA,gBACA,mBACA,cACA,UACA,YACA,QACA,iBACA,UACA,UACA,YACA,SACA,gBACA,UACA,cACA,UACA,iBACA,YACA,UACA,YACA,QACA,SACA,YACA,cACA,eACA,oBAEFR,GAAI,CACF,eACA,wBACA,UACA,YACA,YACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,qBACA,YACA,cACA,iBACA,yBACA,UACA,WACA,SACA,eACA,aACA,SACA,WACA,yBACA,SACA,eACA,SACA,0BACA,UACA,eACA,SACA,UACA,UACA,aACA,uBACA,YACA,aACA,YACA,uBACA,WACA,UACA,UACA,WACA,UACA,QACA,aACA,iBACA,UACA,YACA,SACA,SACA,SACA,WACA,YACA,SACA,MACA,aACA,sBACA,YACA,SACA,WACA,kBACA,YACA,YACA,kBACA,SACA,UACA,UACA,OACA,WACA,YACA,WACA,WACA,oBACA,QACA,YACA,UACA,QACA,YACA,SACA,WACA,aACA,cACA,SACA,0BACA,WACA,UACA,SACA,iBACA,eACA,SACA,OACA,SACA,eACA,mBACA,iBACA,gBACA,kBACA,SACA,WACA,aACA,WACA,SACA,UACA,YACA,cACA,SACA,iBACA,SACA,QACA,QACA,WACA,WACA,aACA,UACA,aACA,aACA,UACA,WACA,WACA,QACA,YACA,YACA,cACA,SACA,QACA,YACA,UACA,UACA,SACA,mBACA,WACA,cACA,QACA,aACA,YACA,QACA,UACA,aACA,4BACA,2BACA,iBACA,2BACA,yBACA,kBACA,gBACA,UACA,WACA,YACA,UACA,UACA,sBACA,mBACA,cACA,uBACA,2BACA,uBACA,oBACA,WACA,uBACA,qBACA,SACA,WACA,WACA,YACA,wBACA,YACA,aACA,WACA,WACA,aACA,WACA,UACA,cACA,aACA,YACA,aACA,oBACA,YACA,WACA,yBACA,QACA,aACA,eAEFW,GAAI,CACF,cACA,gBACA,uBACA,QACA,WACA,SACA,SACA,yBACA,aACA,aACA,WACA,aACA,WACA,YACA,WACA,UACA,iBACA,sBACA,qBACA,eACA,4BACA,gBACA,cACA,iBACA,yBACA,2BACA,qBACA,sBACA,eACA,gBACA,sBACA,cACA,kBACA,UACA,aACA,wBACA,mBACA,uBACA,UACA,YACA,yBACA,kBACA,eACA,sBACA,eACA,aACA,2BACA,2BACA,QACA,cACA,gBACA,aACA,sBACA,SACA,YACA,WACA,SACA,SACA,WACA,UACA,aACA,cACA,uBACA,mBACA,UACA,oBACA,qBACA,UACA,aACA,UACA,cACA,4BACA,WACA,2BACA,wBACA,YACA,2BACA,iBACA,eACA,aACA,SACA,cACA,kBACA,cACA,cACA,cACA,qBACA,SACA,cACA,yBACA,gBACA,SACA,uBACA,aACA,eACA,QACA,aACA,yBACA,UACA,OACA,0BACA,0BACA,4BACA,iBACA,cACA,qBACA,SACA,gBACA,YACA,WACA,mBACA,eACA,UACA,cACA,uBACA,2BACA,0BACA,0BACA,4BACA,+BACA,eACA,WACA,yBACA,yBACA,0BACA,4BACA,6BACA,cACA,0BACA,UACA,aACA,sBACA,UACA,iBACA,aACA,WACA,aACA,eACA,WAEFP,GAAI,CACF,QACA,iBACA,aACA,gBACA,oBACA,UACA,kBACA,QACA,eACA,OACA,MACA,UACA,YACA,eACA,kBACA,OACA,YACA,WACA,QACA,mBACA,0BACA,eACA,gBACA,eACA,WACA,aACA,sBACA,cACA,aACA,mBACA,sBACA,UACA,gBACA,mBACA,UACA,UACA,iBACA,WACA,gBACA,mBACA,WACA,mBACA,iBACA,WACA,YACA,6BACA,UACA,UACA,gBACA,YACA,UACA,QACA,OACA,WACA,UACA,iBACA,OACA,oBACA,qBACA,mBACA,SACA,gBACA,cACA,YACA,WACA,SACA,aACA,gBACA,eACA,kBACA,kBACA,QACA,iBACA,WACA,aACA,QACA,UACA,cACA,mBACA,UACA,eACA,kBACA,YACA,eACA,uBACA,UACA,QACA,YACA,iBACA,wBACA,cACA,SACA,YACA,QACA,WACA,aACA,eACA,WACA,OACA,iBACA,eACA,cACA,gBACA,cACA,aACA,SACA,aACA,kBACA,cACA,SACA,mBACA,iBACA,iBACA,oBACA,YACA,cACA,oBACA,cACA,aACA,cACA,mBACA,oBACA,gBACA,wBACA,2BACA,eACA,uBACA,qBACA,eACA,WACA,sBACA,iBACA,qBACA,sBACA,eACA,yBACA,0BACA,qBACA,wBACA,qBACA,qBACA,aACA,wBACA,uBACA,YACA,aACA,WACA,cACA,aACA,mBACA,QACA,UACA,kBACA,0BACA,QACA,eACA,wBACA,SACA,mBACA,WACA,UACA,YACA,YACA,YACA,SACA,SACA,aAEFH,GAAI,CACF,QACA,eACA,qBACA,oBACA,aACA,QACA,uBACA,WACA,mBACA,kBACA,kBACA,UACA,oBACA,UACA,oBACA,gBACA,0BACA,oBACA,SACA,qBACA,aACA,UACA,sBACA,iBACA,cACA,aACA,mBACA,WACA,UACA,YACA,yBACA,kBACA,qBACA,aACA,iBACA,mBACA,oBACA,sBACA,sBACA,oBACA,4BACA,oBACA,0BACA,wBACA,uBACA,cACA,aACA,kBACA,4BACA,oBACA,UACA,oBACA,oBACA,mBACA,UACA,QACA,iBACA,kBACA,WACA,sBACA,mBACA,uBACA,oBACA,WACA,wBACA,kBACA,WACA,UACA,uBACA,cACA,iBACA,mBACA,qBACA,gBACA,kBACA,iBACA,iBACA,cACA,mBACA,kBACA,oBACA,WACA,gBACA,kBACA,mBACA,mBACA,aACA,YACA,UACA,YACA,WACA,gBACA,cACA,SACA,oBACA,gBACA,cACA,WACA,oBACA,SACA,mBACA,kBACA,YACA,gBACA,eACA,kBACA,aACA,oBACA,SACA,eACA,eACA,yBACA,0BACA,iBACA,iBACA,oBACA,eACA,aACA,eACA,UACA,gBACA,cACA,iBACA,mBACA,iBACA,eACA,cACA,iBACA,gBACA,qBACA,wBACA,wBACA,2BACA,sBACA,kBACA,UACA,0BACA,6BACA,kBACA,wBACA,qBACA,SACA,uBACA,eACA,cACA,iBACA,oBACA,aACA,UACA,WACA,WACA,2BACA,iBACA,sBACA,aACA,UACA,WACA,mBACA,QACA,cACA,SACA,aACA,WACA,QACA,wBACA,iBACA,gBACA,uBACA,cACA,cACA,mBACA,oBACA,sBACA,sBACA,0BACA,iBACA,YACA,sBACA,mBACA,0BACA,6BACA,wBACA,mBACA,iBACA,oBACA,mBACA,SACA,mBACA,aACA,oBACA,kCACA,yBACA,qBACA,0BACA,uBACA,qBACA,oBACA,oBACA,wBACA,wBACA,oBACA,sBACA,sBACA,oBACA,aACA,wBACA,oBACA,6BACA,wBACA,uBACA,qBACA,sBACA,oBACA,kBACA,WACA,QACA,SACA,mBACA,cACA,qBACA,gBACA,gBACA,cACA,eAEFK,GAAI,CACF,SACA,QACA,YACA,UACA,WACA,UACA,6BACA,WACA,cACA,aACA,WACA,kBACA,kBACA,iBACA,aACA,gBACA,WACA,UACA,UACA,gBACA,iBACA,kBACA,gBACA,kBACA,mBACA,cACA,kBACA,OACA,mBACA,cACA,mBACA,kBACA,mBACA,oBACA,WACA,gBACA,QACA,oBACA,mBACA,2BACA,kBACA,wBACA,sBACA,uBACA,qBACA,mBACA,YACA,gBACA,gBACA,oBACA,oBACA,YACA,SACA,QACA,WACA,QACA,UACA,mBACA,eACA,gBACA,UACA,UACA,UACA,UACA,iBACA,qBACA,sBACA,kBACA,YACA,aACA,gBACA,aACA,WACA,SACA,UACA,SACA,kBACA,oBACA,UACA,kBACA,sBACA,iBACA,gBACA,gBACA,YACA,QACA,iBACA,eACA,QACA,WACA,UACA,gBACA,kBACA,aACA,UACA,eACA,eACA,sBACA,cACA,UACA,cACA,UACA,YACA,WACA,OACA,WACA,UACA,UACA,WACA,SACA,cACA,iBACA,mBACA,iBACA,iBACA,gBACA,WACA,UACA,aACA,UACA,iBACA,YACA,cACA,kBACA,gBACA,kBACA,aACA,wBACA,uBACA,cACA,0BACA,gBACA,gBACA,cACA,yBACA,iBACA,0BACA,iBACA,kBACA,YACA,sBACA,gBACA,oBACA,cACA,WACA,UACA,YACA,eACA,aACA,YACA,mBACA,WACA,UACA,SACA,UACA,gBACA,iBACA,oBACA,kBACA,cACA,qBACA,eACA,mBACA,QACA,kBACA,mBACA,kBACA,cACA,cACA,sBACA,uBACA,YACA,YACA,UACA,iBACA,SACA,iBACA,QACA,WACA,UACA,iBACA,wBACA,WACA,UACA,UACA,sBACA,SACA,WACA,SACA,YACA,cACA,cACA,UACA,UACA,SACA,aACA,aACA,UACA,YACA,OACA,WACA,OACA,YACA,gBACA,WACA,kBACA,MACA,OACA,SACA,YACA,UACA,SACA,QACA,iBACA,QACA,QACA,aACA,aACA,YACA,UACA,WACA,YACA,OACA,OACA,qBACA,sBACA,iBACA,wBACA,SACA,UACA,mBACA,gBACA,mBACA,kBACA,aACA,aACA,YACA,eACA,UACA,SACA,QACA,kBACA,mBACA,eACA,mBACA,OACA,kBACA,cACA,gBACA,yBACA,YACA,gBACA,WACA,WACA,0BACA,oBACA,aACA,UACA,mBACA,gBACA,eACA,YACA,gBACA,YACA,QACA,oBACA,SACA,gBACA,aACA,eACA,iBACA,eACA,kBACA,wBACA,aACA,aACA,kBACA,aACA,aACA,cACA,mBACA,kBACA,gBACA,eACA,gBACA,eACA,kBACA,aACA,eACA,SACA,aACA,kBACA,uBACA,aACA,UACA,iBACA,QACA,iBACA,cACA,SACA,aACA,cACA,mBACA,cACA,WACA,eACA,eACA,WACA,UACA,cACA,SACA,gBACA,kBACA,sBACA,mBACA,iBACA,SACA,WACA,WACA,cACA,SACA,eACA,eACA,aACA,kBACA,eACA,SACA,aACA,iBACA,oBACA,YACA,iBACA,UACA,SACA,gBACA,WACA,qBACA,YACA,UACA,gBACA,aACA,YACA,iBACA,WACA,aACA,gBACA,UACA,UACA,aACA,WACA,iBACA,iBACA,kBACA,mBACA,iBACA,uBACA,kBACA,YACA,yBACA,uBACA,uBACA,qBACA,oBACA,yBACA,cACA,wBACA,aACA,eACA,0BACA,uBACA,WACA,4BACA,4BACA,yBACA,4BACA,gBACA,eACA,wBACA,eACA,YACA,kBACA,UACA,SACA,YACA,UACA,UACA,wBACA,mBACA,kBACA,SACA,iBACA,mBACA,uBACA,mBACA,UACA,aACA,WACA,YACA,sBACA,yBACA,yBACA,cACA,eACA,YACA,uBACA,qBACA,wBACA,uBACA,oBACA,mBACA,kBACA,wBACA,qBACA,uBACA,eACA,sBACA,mBACA,aACA,eACA,wBACA,yBACA,cACA,wBACA,qBACA,wBACA,qBACA,mBACA,uBACA,WACA,eACA,sBACA,qBACA,gBACA,qBACA,QACA,QACA,WACA,SACA,QACA,UACA,UACA,mBACA,UACA,kBACA,iBACA,WACA,WACA,oBACA,SACA,SACA,YACA,cACA,kBACA,UACA,eACA,kBACA,cACA,kBACA,iBACA,cACA,eACA,YACA,QACA,iBACA,cACA,UACA,YACA,SACA,YACA,YACA,iBACA,aACA,UACA,YACA,aACA,cACA,SACA,iBACA,YACA,cACA,oBACA,WACA,SACA,gBACA,gBACA,cACA,eACA,aACA,mBACA,eACA,wBACA,eACA,sBACA,YACA,YACA,aACA,SAEFV,GAAI,CACF,WACA,gBACA,gBACA,iBACA,cACA,gBACA,eACA,UACA,aACA,aACA,aACA,aACA,WACA,kBACA,kBACA,mBACA,wBACA,YACA,eACA,wBACA,cACA,kBACA,qBACA,WACA,WACA,cACA,wBACA,UACA,YACA,UACA,UACA,WACA,WACA,oBACA,aACA,SACA,cACA,UACA,SACA,aACA,aACA,cACA,wBACA,kBACA,mBACA,iBACA,oBACA,aACA,WACA,oBACA,YACA,SACA,WACA,UACA,UACA,QACA,QACA,UACA,aACA,QACA,kBACA,qBACA,UACA,cACA,SACA,mBACA,SACA,cACA,8BACA,oBACA,mBACA,sBACA,eACA,eACA,kBACA,eACA,mBACA,aACA,cACA,eACA,oBACA,eACA,iBACA,0BACA,aACA,qBACA,mBACA,cACA,YACA,cACA,qBACA,oBACA,SACA,qBACA,eACA,mBACA,wBACA,mBACA,gBACA,oBACA,UACA,qBACA,YACA,qBACA,uBACA,gBACA,aACA,cACA,eACA,gBACA,eACA,eACA,sBACA,0BACA,kBACA,eACA,yBACA,4BACA,UACA,qBACA,QACA,UACA,wBACA,mBACA,wBACA,oBACA,6BACA,oBACA,WACA,mBACA,UACA,sBACA,UACA,YACA,eACA,uBACA,OACA,mCACA,YACA,gBACA,YAEFf,GAAI,CACF,aACA,eACA,YACA,SACA,WACA,kBACA,iBACA,QACA,SACA,gBACA,uBACA,cACA,oBACA,aACA,eACA,aACA,kBACA,sBACA,iBACA,mBACA,WACA,UAEF6B,GAAI,CACF,aACA,SACA,QACA,SACA,WACA,oBACA,SACA,cACA,cACA,WACA,cACA,YACA,SACA,sBACA,oBACA,YACA,YACA,WACA,UACA,UACA,YACA,oBACA,QACA,UACA,SACA,SACA,aACA,SACA,eACA,YACA,qBACA,YACA,UACA,SACA,aACA,WACA,iBACA,QACA,UACA,QACA,UACA,YACA,cACA,QACA,OACA,eACA,WACA,UACA,UACA,SACA,eACA,kBACA,iBACA,WACA,WACA,UACA,oBACA,SACA,WACA,QACA,YACA,iBACA,uBACA,WACA,QACA,UACA,iBACA,uBACA,UACA,SACA,UACA,wBACA,yBACA,WACA,YACA,SACA,OACA,WACA,oBACA,SACA,eACA,YACA,SACA,OACA,WACA,YACA,UACA,WACA,oBACA,qBACA,UACA,aACA,SACA,WACA,QACA,UACA,SACA,SACA,SACA,0BACA,WACA,uBACA,wBACA,mBACA,WACA,QACA,UACA,iBACA,WACA,eACA,gBACA,cACA,UACA,cACA,WACA,YACA,UACA,WACA,SACA,kBACA,YACA,gBACA,aACA,YACA,aACA,SACA,WACA,UACA,UACA,gBACA,WACA,iBACA,aACA,YACA,aACA,QACA,YACA,oBACA,WACA,WACA,UACA,QACA,uBACA,eACA,oBACA,aACA,UACA,aACA,eACA,UACA,gBACA,eACA,UACA,UACA,WACA,SACA,WACA,WACA,eACA,YACA,UACA,iBACA,aACA,gBACA,oBACA,2BACA,0BACA,eACA,kBACA,mBACA,6BACA,UACA,mBACA,gBACA,SACA,wBACA,aACA,UACA,WACA,mBACA,SACA,mBACA,kBACA,mBACA,QACA,iBACA,iBACA,kBACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,kBACA,WACA,aACA,YACA,gBACA,WACA,SACA,UACA,UACA,YACA,QACA,YACA,SACA,aACA,QACA,cACA,WACA,cACA,UACA,QACA,QACA,QACA,YACA,QACA,WACA,SACA,OACA,OACA,YACA,UACA,mBACA,SACA,gBACA,gBACA,WACA,aACA,UACA,YACA,kBACA,UACA,QACA,SACA,SACA,WACA,OACA,eACA,UACA,SACA,UACA,UACA,QACA,WACA,SACA,uBACA,eACA,UACA,UACA,UACA,sBACA,aACA,UACA,SACA,kBACA,UACA,UACA,UACA,WACA,OACA,YACA,WACA,QACA,MACA,UACA,YACA,WACA,YACA,cACA,UACA,OACA,cACA,aACA,QACA,WACA,UACA,eACA,SACA,MACA,YACA,aACA,iBACA,eACA,UACA,UACA,iBACA,YACA,SACA,iBACA,WACA,oBACA,YACA,UACA,OACA,mBACA,UACA,UACA,OACA,SACA,UACA,WACA,eACA,UACA,YACA,WACA,UACA,eACA,WACA,WACA,YACA,QACA,YACA,YACA,UACA,kBACA,UACA,YACA,cACA,aACA,eACA,UACA,QACA,OACA,WACA,YACA,YACA,eACA,oBACA,eACA,WACA,eACA,0BACA,WACA,gBACA,SACA,aACA,aACA,kBACA,UACA,WACA,sBACA,aACA,kBACA,sBACA,gBACA,YACA,kBACA,UACA,cACA,YACA,SACA,mBACA,SACA,YACA,sBACA,kBACA,iBACA,YACA,QACA,eACA,eACA,sBACA,gBACA,cACA,eACA,oBACA,qBACA,iBACA,cACA,SACA,iBACA,YACA,SACA,UACA,aACA,UACA,YACA,WACA,SACA,iBACA,eACA,WACA,aACA,WACA,WACA,YACA,oBACA,mBACA,WACA,WACA,qBACA,YACA,eACA,YACA,UACA,UACA,WACA,gBACA,SACA,sBACA,YACA,cACA,iBACA,WACA,cACA,aACA,eACA,aACA,WACA,qBACA,kBACA,YACA,kBACA,WACA,UACA,UACA,UACA,eACA,kBACA,YACA,cACA,YACA,UACA,WACA,aACA,SACA,UACA,UACA,wBACA,cACA,eACA,cACA,eACA,WACA,UACA,SACA,UACA,SACA,SACA,aACA,gBACA,WACA,YACA,cACA,iBACA,QACA,cACA,MACA,WACA,aACA,eACA,WACA,mBACA,uBACA,sBACA,sBACA,uBACA,YACA,SACA,QACA,UACA,SACA,WACA,SACA,YACA,oBACA,gBACA,cACA,WACA,WACA,UACA,kBACA,kBACA,oBACA,kBACA,iBACA,iBACA,kBACA,sBACA,UACA,SACA,YACA,YACA,sBACA,iBACA,YACA,WACA,SACA,UACA,WACA,WACA,SACA,SACA,QACA,iBACA,cACA,YACA,WACA,QACA,eACA,oBACA,cACA,eACA,kBACA,eACA,wBACA,sBACA,0BACA,0BACA,2BACA,0BACA,kBACA,kBACA,kBACA,eACA,cACA,uBACA,iBACA,qBACA,6BACA,wBACA,eACA,yBACA,sBACA,kBACA,cACA,2BACA,yBACA,6BACA,0BACA,0BACA,iBACA,SACA,wBACA,UACA,WACA,yBACA,aACA,cACA,UACA,cACA,cACA,YACA,YACA,UACA,WACA,eACA,SACA,SACA,cACA,uBACA,wBACA,qBACA,aACA,gBACA,uBACA,yBACA,uBACA,wBACA,wBACA,sBACA,wBACA,2BACA,sBACA,yBACA,wBACA,yBACA,aACA,qBACA,YACA,YACA,qBACA,YACA,gBACA,yBACA,YACA,cACA,UACA,YACA,kBACA,SACA,SACA,SACA,SACA,SACA,SACA,aACA,UACA,WACA,eACA,cACA,aACA,UACA,SACA,QACA,UACA,SACA,kBACA,aACA,QACA,UACA,iBACA,WACA,UACA,WACA,kBACA,SACA,gBACA,OACA,UACA,YACA,UACA,UACA,YACA,QACA,iBACA,MACA,SACA,SACA,kBACA,WACA,aACA,SACA,yBACA,uBACA,YACA,UACA,YACA,uBACA,iBACA,aACA,cACA,kBACA,WACA,iBACA,mBACA,yBACA,qBACA,mBACA,kBACA,qBACA,QAEFlB,GAAI,CACF,iBACA,SACA,iBACA,gBACA,WACA,SACA,UACA,kBACA,eACA,yBACA,gBACA,qBACA,YACA,0BACA,YACA,UACA,WACA,qBACA,uBACA,yBACA,mBACA,qBACA,aACA,SACA,wBACA,YACA,SACA,UACA,UACA,YACA,SACA,QACA,WACA,aACA,UACA,OACA,UACA,oBACA,aACA,mBACA,WACA,eACA,aACA,oBACA,aACA,gBACA,WACA,WACA,eACA,QACA,eACA,SACA,gBACA,YACA,QACA,aACA,qBACA,cACA,kBACA,mBACA,wBACA,eACA,QACA,YACA,wBACA,uBACA,sBACA,aACA,qBACA,cACA,0BACA,QACA,aACA,eACA,aACA,UACA,qBACA,gBAEFE,GAAI,CACF,eACA,YACA,gBACA,uBACA,0BACA,yBACA,gBACA,oBACA,uBACA,YACA,WACA,aACA,WACA,WACA,QACA,QACA,QACA,aACA,UACA,YACA,SACA,aACA,SACA,iBACA,eACA,kBACA,yBACA,UACA,iBACA,WACA,qBACA,sBACA,aACA,uBACA,YACA,QACA,iBACA,SACA,eACA,aACA,aACA,mBACA,UACA,SACA,wBACA,aACA,oBACA,WACA,aACA,SACA,SACA,sBACA,0BACA,sBACA,aACA,aACA,OACA,cACA,UACA,wBACA,UACA,WACA,iBACA,cACA,YACA,gBACA,mBACA,WACA,yBACA,kBACA,yBACA,0BACA,UACA,kBACA,iBACA,oBACA,0BACA,4BACA,wBACA,0BACA,0BACA,SACA,eACA,YACA,qBACA,QACA,iBACA,kBACA,aACA,qBACA,kBACA,qBACA,SACA,uBACA,aACA,cACA,oBACA,aACA,gBACA,gBACA,qBACA,2BACA,gBACA,eACA,cACA,SACA,iBACA,uBACA,aACA,iBACA,gBACA,YACA,UACA,SACA,kBACA,uBACA,UACA,mBACA,WACA,eACA,SACA,SACA,iBACA,eACA,cACA,0BACA,yBACA,0BACA,eACA,YACA,YACA,kBACA,cACA,gBACA,cACA,iBACA,YACA,mBACA,UACA,aACA,WACA,gBACA,WACA,UACA,YACA,eACA,yBACA,kBACA,mBACA,uBACA,oBACA,oBACA,oBACA,gBACA,SACA,UACA,kBACA,UACA,WACA,6BACA,eACA,aACA,cACA,uBACA,6BACA,aACA,sBACA,0BACA,0BACA,YACA,0BACA,oBACA,sBACA,oBACA,sBACA,4BACA,YACA,eACA,0BACA,2BACA,0BACA,4BACA,sBACA,sBACA,wBACA,mBACA,mBACA,sBACA,oBACA,qBACA,WACA,+BACA,yBACA,2BACA,wBACA,+BACA,+BACA,cACA,qBACA,aACA,gBACA,WACA,QACA,oBACA,aACA,SACA,UACA,aACA,SACA,gBACA,gBACA,QACA,0BACA,kBACA,oBACA,UACA,yBAEFK,GAAI,CACF,SACA,gBACA,cACA,YACA,WACA,sBACA,WACA,SACA,YACA,QACA,UACA,UACA,QACA,oBACA,SACA,WACA,WACA,aACA,UACA,sBACA,mBACA,sBACA,SACA,kBACA,QACA,yBACA,qBACA,cACA,YACA,YACA,cACA,qBACA,YACA,YACA,gBACA,mBACA,UACA,aACA,WACA,uBACA,mBACA,oBACA,WACA,UACA,aACA,gBACA,iBACA,UACA,iBACA,QACA,WACA,eACA,cACA,cACA,kBACA,WACA,YACA,UACA,QACA,QACA,UACA,WACA,yBACA,SACA,UACA,QACA,sBACA,eACA,iBACA,SACA,WACA,WACA,YACA,gBACA,OACA,YACA,WACA,gBACA,aACA,YACA,WACA,SACA,SACA,UACA,YACA,OACA,YACA,aACA,cACA,UACA,UACA,SACA,gBACA,cACA,gBACA,cACA,kBACA,cACA,OACA,QACA,aACA,kBACA,SACA,aACA,aACA,SACA,QACA,aACA,UACA,WACA,OACA,cACA,eACA,WACA,WACA,cACA,WACA,UACA,WACA,eACA,WACA,UACA,aACA,SACA,cACA,gBACA,cACA,gBACA,cACA,WACA,aACA,SACA,WACA,QACA,WACA,eACA,gBACA,iBACA,cACA,SACA,QACA,QACA,SACA,cACA,cACA,UACA,WACA,SACA,cACA,wBACA,QACA,kBACA,WACA,YACA,UACA,UACA,0BACA,qBACA,UACA,uBACA,kBACA,YACA,aACA,uBACA,gBACA,aACA,eACA,aACA,cACA,aACA,kBACA,uBACA,uBACA,cACA,OACA,eACA,eACA,gBACA,gBACA,WACA,cACA,UACA,WACA,UACA,UACA,QACA,OACA,eACA,YACA,eACA,yBACA,gBACA,2BACA,qBACA,yBACA,uBACA,uBACA,qBACA,4BACA,qBACA,yBACA,qBACA,qBACA,2BACA,oBACA,aACA,sBACA,iCACA,6BACA,wBACA,SACA,UACA,UACA,WACA,UACA,UACA,UACA,YACA,cACA,gBACA,SACA,SACA,eAEFF,GAAI,CACF,cACA,UACA,YACA,eACA,WACA,eACA,uBACA,aACA,eACA,eACA,aACA,YACA,aACA,YACA,SACA,cACA,UACA,UACA,eACA,UACA,cACA,kBACA,YACA,mBACA,UACA,aACA,QACA,aACA,wBACA,YACA,WACA,WACA,YACA,gBACA,qBACA,uBACA,WACA,YACA,UACA,YACA,WACA,SACA,YACA,SACA,QACA,OACA,UACA,gBACA,WACA,UACA,aACA,UACA,UACA,uBACA,iBACA,wBACA,YACA,WACA,oBACA,cACA,aACA,iBACA,qBACA,gBACA,YACA,2BACA,UACA,sBACA,WACA,cACA,cACA,SACA,uBACA,SACA,aACA,UACA,cACA,YACA,cAEFQ,GAAI,CACF,wBACA,0BACA,eACA,mBACA,YACA,UACA,SACA,cACA,SACA,yBACA,qBACA,eACA,aACA,cACA,oBACA,aACA,gBACA,UACA,kBACA,4BACA,gBACA,kBACA,OACA,YACA,qBACA,qBACA,mBACA,cACA,2BACA,cACA,aACA,0BACA,sBACA,UACA,gBACA,uBACA,cACA,oBACA,wBACA,aACA,iBACA,sBACA,eACA,qBACA,2BACA,wBACA,gBACA,YACA,QACA,gBACA,kBACA,WAEFE,GAAI,CACF,cACA,UACA,YACA,SACA,QACA,YACA,UACA,UACA,UACA,YACA,YACA,eACA,qBACA,WACA,YAEFnB,GAAI,CACF,WACA,UACA,QACA,QACA,OACA,mBACA,UACA,WACA,cACA,oBACA,SACA,qBACA,eACA,QACA,aACA,WACA,WACA,UACA,oBACA,QACA,UACA,WACA,SACA,YACA,UACA,UACA,UACA,WACA,cACA,YACA,aACA,SACA,QACA,QACA,SACA,aACA,YACA,SACA,WACA,QACA,QACA,WACA,uBACA,aACA,gBACA,YACA,SACA,wBACA,mBACA,4BACA,uBACA,SACA,2BACA,wBACA,0BACA,YACA,SACA,OACA,YACA,SACA,UACA,eAEFD,GAAI,CACF,QACA,WACA,SACA,iBACA,UACA,mBACA,SACA,UACA,WACA,0BACA,eACA,WACA,UACA,iBACA,kBACA,mBAEFsB,GAAI,CACF,0BACA,WACA,UACA,QACA,eACA,sBACA,SACA,eACA,iBACA,UACA,2BACA,SACA,SACA,aACA,oBACA,gBACA,QACA,iBACA,WACA,aACA,aACA,SACA,kBACA,iBACA,kBACA,YACA,YACA,eACA,QACA,qBACA,aACA,UACA,UACA,cACA,YACA,mBACA,WACA,SACA,eACA,0BACA,WACA,WACA,0BACA,0BACA,0BACA,2BACA,2BACA,WACA,aACA,YACA,SACA,UACA,iBACA,eACA,aACA,UACA,YACA,oBACA,eACA,oBACA,UACA,wBACA,qBACA,2BACA,yBACA,aACA,SACA,gBACA,eACA,gBACA,uBACA,QACA,iBACA,gBACA,WAEFvB,GAAI,CACF,SACA,YACA,UACA,yBACA,sBACA,UACA,aACA,QACA,eACA,aACA,cACA,WACA,YACA,eACA,eACA,SACA,SACA,YACA,YACA,gBACA,qBACA,gBACA,WACA,UACA,kBACA,eACA,qBACA,eACA,gBACA,YACA,oBACA,aACA,QACA,cACA,SACA,oBACA,UACA,cACA,aACA,kBACA,gBACA,SACA,YACA,iBACA,qBACA,SACA,gBACA,eACA,WACA,YACA,mBACA,YACA,cACA,uBACA,UACA,oBACA,gBACA,SACA,YACA,qBACA,yBACA,wBACA,WACA,cACA,YACA,sBACA,YACA,aACA,sBACA,gBACA,SACA,YACA,QACA,UACA,WACA,cACA,wBACA,kBACA,uBACA,gBACA,cACA,YACA,UACA,uBACA,qBACA,oBACA,SACA,uBACA,WACA,mBACA,qBACA,uBACA,wBACA,0BACA,gBACA,gBACA,YACA,kBACA,SACA,qBACA,SACA,eAEFiB,GAAI,CACF,iBACA,UACA,WACA,QACA,qBACA,kBACA,cACA,iBACA,eACA,aACA,0BACA,YACA,uBACA,UACA,wBACA,YACA,YACA,kBACA,QACA,oBACA,4BACA,sBACA,WACA,cACA,kBACA,8BACA,aACA,gBACA,WACA,UACA,SACA,WACA,YACA,WACA,SACA,iBACA,QACA,SACA,OACA,cACA,SACA,SACA,WACA,iBACA,WACA,aACA,YACA,UACA,gBACA,cACA,YACA,SACA,iBACA,kBACA,aACA,YACA,QACA,cACA,aACA,SACA,YACA,WACA,UACA,aACA,YACA,iBACA,iBACA,iBACA,uBACA,yBACA,WACA,YACA,aACA,eACA,YACA,cACA,8BACA,cACA,kBACA,gCACA,oBACA,qB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A,CAAA,YAAA,SAAA,SAAA,QACA,OAAA,CAAA,YAAA,kBACA,KAAA,CAAA,QAAA,WACA,QAAA,CAAA,UAAA,eAAA,QAAA,OAAA,OAAA,MAAA,SACA,MAAA,CAAA,SACA,MAAA,GACA,UAAA,IAIA,OAAA,KAAA,GAAA,QAAA,SAAA,QACA,IAAA,EAAA,YAAA,KACA,EAAA,YAAA,GAAA,IAGA,iBAAA,EAAA,GAKA,EAAA,GAAA,QAAA,SAAA,GACA,OAAA,eAAA,EAAA,YAAA,GAAA,EAAA,CACA,IAAA,WACA,YAAA,IAAA,EAAA,QAAA,EAAA,QAAA,SAAA,IAAA,EAAA,QAAA,EAAA,QAAA,GAAA,GAIA,EAAA,QAAA,GAAA,GAAA,GAGA,EAAA,QAAA,EAAA,QAAA,GAAA,QAdA,EAAA,YAAA,GAAA,EAAA,KAuBA,EAAA,UAAA,UAAA,SAAA,GACA,KAAA,OAAA,GAGA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,QAAA,YACA,KAAA,UAAA,EACA,KAAA,OAAA,IAAA,EAAA,KAAA,KAAA,YAEA,OAAA,QAAA;;ACjKA,OAAA,QAAA;;AEAA,OAAA,QAAA,CACA,cACA,UACA,UACA,QACA,UACA,SACA,UACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,QACA,aACA,WACA,UACA,SACA,QACA,UACA,QACA,UACA,SACA,WACA,cACA,SACA,wBACA,gBACA,SACA,WACA,eACA,UACA,UACA,WACA,SACA,aACA,eACA,8BACA,QACA,QACA,QACA,gBACA,cACA,WACA,UACA,QACA,aACA,aACA,kBACA,UACA,OACA,SACA,mBACA,YACA,SACA,WACA,uBACA,UACA,QACA,cACA,mBACA,WACA,UACA,UACA,cACA,WACA,OACA,YACA,SACA,iBACA,qBACA,QACA,SACA,UACA,WACA,OACA,YACA,SACA,aACA,UACA,YACA,YACA,YACA,QACA,eACA,SACA,QACA,yBACA,WACA,WACA,YACA,UACA,WACA,QACA,YACA,MACA,SACA,UACA,cACA,SACA,SACA,UACA,QACA,SACA,WACA,cACA,SACA,YACA,kBACA,gBACA,SACA,cACA,OACA,SACA,SACA,SACA,UACA,QACA,gBACA,WACA,aACA,QACA,YACA,aACA,SACA,UACA,WACA,OACA,QACA,iBACA,YACA,aACA,WACA,SACA,SACA,aACA,WACA,SACA,WACA,aACA,aACA,WACA,aACA,UACA,UACA,QACA,QACA,sBACA,UACA,iBACA,gBACA,YACA,UACA,OACA,eACA,yBACA,UACA,MACA,YACA,QACA,0BACA,SACA,mBACA,WACA,OACA,YACA,UACA,WACA,aACA,QACA,UACA,SACA,SACA,iBACA,eACA,cACA,eACA,uBACA,2BACA,QACA,aACA,sBACA,iBACA,UACA,SACA,YACA,aACA,YACA,aACA,YACA,gBACA,UACA,gBACA,yCACA,UACA,YACA,QACA,WACA,6BACA,cACA,SACA,QACA,QACA,SACA,cACA,WACA,YACA,cACA,OACA,WACA,QACA,oBACA,UACA,UACA,gBACA,kBACA,SACA,SACA,UACA,yBACA,cACA,4BACA,mCACA,UACA,cACA,UACA,YACA,SACA,kBACA,QACA,SACA;;AC1OA,OAAA,QAAA,CACA,QACA,OACA;;ACHA,OAAA,QAAA,CACA,MACA,UACA,WACA,UACA,WACA;;ACNA,OAAA,QAAA,CACA,YACA,aACA,SACA,UACA;;ACLA,OAAA,QAAA,CACA;;ACDA,OAAA,QAAA,CACA,OACA,UACA,QACA,WACA,QACA,QACA,mBACA,iBACA,QACA,WACA,cACA,qBACA,eACA,OACA,UACA,SACA,aACA,QACA,iBACA,sBACA,oBACA,WACA,UACA,iBACA,YACA,UACA;;AC3BA,OAAA,QAAA,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA;;AC3BA,OAAA,QAAA,CACA;;ACDA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,YAAA,QAAA,iBACA,EAAA,YAAA,QAAA,iBACA,EAAA,QAAA,QAAA,aACA,EAAA,gBAAA,QAAA,qBACA,EAAA,cAAA,QAAA,mBACA,EAAA,kBAAA,QAAA,uBACA,EAAA,SAAA,QAAA,cACA,EAAA,MAAA,QAAA,WACA,EAAA,WAAA,QAAA,gBACA,EAAA,gBAAA,QAAA;;ACXA,OAAA,QAAA,CACA,OACA,OACA,SACA,eACA;;ACLA,OAAA,QAAA,CACA,8BACA,sCACA;;ACHA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,OAAA,QAAA,YACA,EAAA,KAAA,QAAA;;ACHA,OAAA,QAAA,CACA,UACA,QACA,WACA,OACA,eACA,eACA,gBACA,UACA,QACA,SACA,WACA,YACA,UACA,QACA,QACA,QACA,UACA,YACA,YACA,WACA,UACA,UACA,QACA,SACA,OACA,UACA,QACA,QACA,UACA,UACA,SACA,OACA,OACA,QACA,QACA,UACA,OACA,OACA,SACA,WACA,QACA,aACA,gBACA,WACA;;AC7CA,OAAA,QAAA,CACA,SACA,SACA,SACA,QACA,cACA,eACA,OACA,SACA,cACA,YACA,QACA,SACA,aACA,WACA,OACA,SACA,UACA,QACA,WACA,UACA,aACA;;ACtBA,OAAA,QAAA,CACA,UAAA,CACA,UACA,aACA,UACA,cACA,QACA,WACA,aACA,UACA,WACA,iBACA,WACA,cACA,aACA,WACA,YACA,WAEA,SAAA,CACA,MACA,UACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,SACA,aAEA,QAAA,CACA,UACA,QACA,aACA,UACA,QACA,YACA,OACA,QACA,SACA,WACA,OACA,UACA,SACA,UACA,WACA,OACA,SACA,QACA,SACA,QACA,QACA,SACA,WACA;;ACxDA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,QAAA,WACA,EAAA,WAAA,QAAA,gBACA,EAAA,aAAA,QAAA;;ACJA,OAAA,QAAA,CACA,YACA,YACA,cACA,WACA;;ACLA,OAAA,QAAA,CACA,KACA,MACA,MACA,OACA,OACA,MACA;;ACPA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,WAAA,QAAA,gBACA,EAAA,cAAA,QAAA;;ACHA,OAAA,QAAA,CACA,QACA,cACA,MACA,cACA,MACA,aACA,cACA,aACA,UACA,QACA,OACA,OACA,KACA,OACA,YACA,YACA,KACA,QACA,aACA,SACA,QACA,QACA,OACA,YACA,aACA,MACA,OACA,MACA,QACA,MACA,OACA,eACA,QACA,UACA,MACA,MACA,UACA,aACA,QACA,WACA,QACA,UACA,QACA,OACA,QACA,MACA,OACA,cACA,WACA,QACA,MACA,OACA,MACA,UACA,OACA,OACA,UACA,WACA,KACA,SACA,KACA,SACA,SACA,UACA,UACA,aACA,KACA,OACA,KACA,SACA,SACA,OACA,UACA,iBACA,QACA,WACA,OACA,OACA,QACA,aACA,OACA,WACA,MACA,WACA,aACA,OACA,KACA,UACA,KACA,KACA,UACA,cACA,OACA,QACA,MACA,MACA,OACA,gBACA,MACA,KACA,KACA,YACA,QACA,OACA,OACA,QACA,YACA,KACA,QACA,OACA,cACA,UACA,MACA,aACA,cACA,aACA,QACA,MACA,aACA,WACA,QACA,WACA,OACA,UACA,KACA,OACA,YACA,YACA,OACA,YACA,aACA,MACA,YACA,MACA,KACA,eACA,OACA,QACA,OACA,QACA,QACA,YACA,OACA,KACA,QACA,MACA,UACA,WACA,WACA,QACA,KACA,MACA,UACA,KACA,UACA,OACA,KACA,QACA,SACA,QACA,UACA,MACA,KACA,WACA,aACA,MACA,SACA,UACA,MACA,SACA,QACA,MACA,WACA,QACA,SACA,QACA,UACA,MACA,QACA,WACA,MACA,MACA,QACA,KACA,OACA,SACA,UACA,SACA,WACA,QACA,WACA,YACA,MACA,QACA,QACA,cACA,aACA,QACA,YACA,KACA,MACA,cACA,MACA,QACA,MACA,UACA,MACA,SACA,MACA,WACA,QACA,WACA,KACA,OACA,MACA,KACA,YACA,WACA,UACA,MACA,QACA,iBACA,QACA,UACA,KACA,KACA,aACA,cACA,OACA,KACA,YACA,MACA,aACA,SACA,QACA,QACA,MACA,UACA,IACA,WACA,WACA,KACA,MACA,aACA,eACA,UACA,YACA,aACA;;ACzPA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,QAAA;;ACFA,OAAA,QAAA,CACA,aACA,YACA,UACA,UACA,SACA,WACA,UACA,WACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,OACA,aACA,UACA,UACA,SACA,UACA,OACA,eACA,UACA,WACA,YACA,SACA,YACA,QACA,QACA,UACA,OACA,YACA,UACA,QACA,SACA,WACA,OACA,QACA,QACA,UACA,OACA,aACA,cACA,aACA,QACA,cACA,SACA,WACA,WACA,UACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,WACA,UACA,OACA,WACA,QACA,QACA,QACA,iBACA,SACA,SACA,OACA,UACA,UACA,WACA,SACA,QACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,aACA,OACA,QACA,OACA;;ACxFA,OAAA,QAAA,CACA,aACA,QACA,QACA,SACA,YACA,YACA,YACA,YACA,YACA,UACA,QACA,QACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,YACA,SACA,WACA,UACA,WACA,SACA,UACA,SACA,UACA,WACA,WACA,OACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,MACA,SACA,WACA,QACA,QACA,QACA,UACA,UACA,YACA,QACA,cACA,gBACA,cACA,gBACA,eACA,cACA,cACA,UACA,SACA,QACA,QACA,UACA,UACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,OACA,QACA,SACA,SACA,SACA,SACA,YACA,UACA;;AChFA,OAAA,QAAA,CACA,aACA,aACA,YACA,QACA,QACA,SACA,YACA,YACA,YACA,YACA,UACA,YACA,UACA,SACA,UACA,WACA,UACA,WACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,OACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,aACA,UACA,UACA,UACA,QACA,OACA,SACA,UACA,YACA,OACA,eACA,SACA,UACA,WACA,WACA,YACA,SACA,UACA,YACA,QACA,QACA,UACA,OACA,WACA,YACA,UACA,QACA,SACA,SACA,UACA,WACA,OACA,QACA,QACA,SACA,UACA,WACA,WACA,UACA,OACA,UACA,QACA,UACA,OACA,aACA,cACA,aACA,QACA,QACA,cACA,QACA,SACA,WACA,OACA,UACA,QACA,UACA,WACA,MACA,SACA,UACA,WACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,SACA,YACA,QACA,cACA,gBACA,cACA,gBACA,eACA,cACA,cACA,UACA,SACA,QACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,WACA,UACA,UACA,OACA,WACA,QACA,SACA,QACA,QACA,QACA,QACA,iBACA,SACA,SACA,UACA,OACA,SACA,UACA,UACA,UACA,WACA,SACA,OACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,aACA,OACA,YACA,UACA,QACA,UACA,SACA,SACA,aACA,OACA,QACA,SACA,OACA;;ACzKA,OAAA,QAAA,CACA,QACA,QACA,WACA,SACA,OACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,QACA,UACA,WACA,OACA,UACA,WACA,WACA,UACA,UACA;;ACtBA,OAAA,QAAA,CACA,MACA,OACA,QACA,MACA;;ACLA,OAAA,QAAA,CACA,MACA,OACA;;ACHA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,gBAAA,QAAA,qBACA,EAAA,kBAAA,QAAA,uBACA,EAAA,WAAA,QAAA,gBACA,EAAA,UAAA,QAAA,eACA,EAAA,OAAA,QAAA,YACA,EAAA,OAAA,QAAA;;ACPA,OAAA,QAAA,CACA,iBACA,qBACA;;ACHA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,QAAA,QAAA;;ACDA,OAAA,QAAA,CACA,KAAA,CACA,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAIA,aAAA,CACA,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEA,KAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAIA,aAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA;;AC3DA,OAAA,QAAA,CACA,KAAA,CACA,UACA,UACA,QACA,SACA,SACA,QACA,UAIA,aAAA,CACA,UACA,UACA,QACA,SACA,SACA,QACA,UAEA,KAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,OAIA,aAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA;;ACxCA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,QAAA,WACA,EAAA,QAAA,QAAA;;ACHA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,sBACA,EAAA,QAAA,QAAA,aACA,EAAA,QAAA,QAAA,aACA,EAAA,SAAA,QAAA,cACA,EAAA,SAAA,QAAA,cACA,EAAA,MAAA,QAAA,WACA,EAAA,KAAA,QAAA,UACA,EAAA,aAAA,QAAA,kBACA,EAAA,KAAA,QAAA;;ACVA,OAAA,QAAA,CACA,QACA,OACA,OACA,QACA,MACA,OACA;;ACPA,OAAA,QAAA,CACA,OACA,MACA,OACA,QACA,OACA,QACA,UACA,OACA,OACA,OACA,QACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA;;ACnBA,OAAA,QAAA,CACA,OACA,eACA,YACA,UACA,kBACA;;ACNA,OAAA,QAAA,CACA,cACA,UACA,UACA,iBACA,UACA,SACA,WACA,+CACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,yBACA,WACA,4BACA,SACA,sDACA,oBACA,WACA,eACA,UACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,0BACA,WACA,UACA,QACA,eACA,aACA,gBACA,UACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,gBACA,8BACA,OACA,UACA,SACA,gBACA,mBACA,8BACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,oCACA,gCACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,wCACA,oBACA,SACA,kBACA,mCACA,SACA,UACA,UACA,UACA,yBACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,aACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,uBACA,cACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,SACA,OACA,WACA,QACA,wBACA,SACA,mBACA,WACA,OACA,cACA,mBACA,SACA,WACA,cACA,QACA,UACA,UACA,qBACA,SACA,mBACA,eACA,wBACA,cACA,eACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,6BACA,WACA,kBACA,UACA,eACA,+CACA,QACA,YACA,QACA,WACA,+BACA,YACA,SACA,cACA,uBACA,SACA,aACA,WACA,WACA,cACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,2BACA,SACA,SACA,UACA,uBACA,iBACA,2BACA,uCACA,UACA,aACA,UACA,YACA,UACA,0BACA,uBACA,oBACA,iBACA,QACA,SACA;;ACpzaACA,YACA,aACA,OACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,SACA,QACA,SACA,OACA,QACA,OACA,UACA,SACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,QACA,UACA,UACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,UACA,OACA,OACA,WACA,YACA,MACA,OACA,QACA,SACA,OACA,QACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,SACA,SACA,UACA,OACA,OACA,QACA,UACA,UACA,WACA,QACA,WACA,WACA,YACA,YACA,OACA,UACA,OACA,WACA,OACA,QACA,UACA,WACA,OACA,UACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,OACA,OACA,QACA,QACA,UACA,UACA,SACA,OACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,MACA,MACA,MACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,OACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,YACA,YACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,aACA,QACA,QACA,aACA,QACA,QACA,SACA,SACA,WACA,WACA,YACA,QACA,SACA,SACA,UACA,MACA,UACA,OACA,QACA,UACA,UACA,WACA,QACA,QACA,QACA,OACA,QACA,OACA,MACA,OACA,OACA;;ACjOA,OAAA,QAAA,CACA,WACA;;ACFA,OAAA,QAAA,CACA,QACA;;AEFA,OAAA,QAAA,CACA,UACA,SACA,UACA,WACA,aACA,WACA,cACA,WACA,UACA,UACA,SACA,QACA,WACA,UACA,OACA,SACA,WACA,YACA,QACA,WACA,gBACA,WACA,YACA,cACA,WACA,UACA,WACA,SACA,gBACA,aACA,aACA,WACA,iBACA,eACA,OACA,WACA,SACA,eACA,eACA,iBACA,eACA,YACA,QACA,OACA,UACA,WACA,aACA,gBACA,YACA;;AClDA,OAAA,QAAA,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA;;AClDA,OAAA,QAAA,CACA,iBACA,oBACA,mBACA,iBACA,sBACA,kBACA,iBACA,kBACA,oBACA,mBACA,kBACA,iBACA,sBACA,sBACA,oBACA,oBACA,mBACA,+BACA,iBACA,eACA,eACA,kBACA,kBACA,iBACA,mBACA,mBACA,oBACA,iCACA,iBACA,kBACA,yBACA,kBACA,sBACA,gBACA,gBACA,gBACA,gBACA,oBACA,kBACA,UACA,kBACA,oBACA,kBACA,mBACA,gBACA,kBACA,gBACA,gBACA,gBACA,kBACA,oBACA,gBACA,eACA,mBACA,gBACA,gBACA,cACA,mBACA,gBACA,iBACA,mBACA,eACA,kBACA,cACA,cACA,eACA,iBACA,iBACA,gBACA,kBACA,eACA,iBACA,gBACA,sBACA,gBACA,gBACA,gBACA,cACA,cACA,iBACA,eACA,cACA,cACA,cACA,YACA,eACA,eACA,aACA,qBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,iBACA,aACA,aACA,eACA,cACA,mBACA,eACA,eACA,eACA,eACA,mBACA,gBACA,iBACA,iBACA,cACA,oBACA,iBACA,cACA,kBACA,eACA,mBACA,aACA,aACA,aACA,aACA,eACA,mBACA,qBACA,sBACA,sBACA,mBACA,qBACA,mBACA,mBACA,eACA,uBACA,eACA,eACA,iBACA,eACA,iBACA,iBACA,mBACA,mBACA,oBACA,kBACA;;AC/IA,OAAA,QAAA,CACA,kDACA,oCACA,mCACA;;ACJA,OAAA,QAAA,CACA,sCACA;;ACFA,OAAA,QAAA,CACA;;ACDA,OAAA,QAAA,CACA;;ACDA,OAAA,QAAA,CACA,QACA,OACA,QACA,OACA,YACA,YACA,YACA;;ACRA,OAAA,QAAA,CACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA;;ACRA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,YAAA,QAAA,iBACA,EAAA,YAAA,QAAA,iBACA,EAAA,OAAA,QAAA,YACA,EAAA,QAAA,QAAA,aACA,EAAA,aAAA,QAAA,kBACA,EAAA,qBAAA,QAAA,0BACA,EAAA,gBAAA,QAAA,qBACA,EAAA,cAAA,QAAA,mBACA,EAAA,kBAAA,QAAA,uBACA,EAAA,SAAA,QAAA,cACA,EAAA,kBAAA,QAAA,uBACA,EAAA,MAAA,QAAA,WACA,EAAA,WAAA,QAAA,gBACA,EAAA,UAAA,QAAA,eACA,EAAA,KAAA,QAAA,UACA,EAAA,YAAA,QAAA,iBACA,EAAA,eAAA,QAAA,oBACA,EAAA,gBAAA,QAAA,qBACA,EAAA,UAAA,QAAA,eACA,EAAA,eAAA,QAAA;;ACrBA,OAAA,QAAA,CACA,MACA,WACA,MACA;;ACJA,OAAA,QAAA,CACA,WACA,WACA,cACA,cACA,YACA,WACA,mBACA,cACA,SACA,aACA,eACA,cACA,iBACA,mBACA,eACA,gBACA,gBACA,WACA,YACA,cACA,UACA,aACA,WACA,kBACA,YACA,YACA,WACA,WACA,eACA,UACA,aACA,qBACA,iBACA,cACA,iBACA,cACA,aACA,cACA,aACA,aACA,YACA,UACA,UACA,YACA,YACA,mBACA,gBACA,gBACA,eACA,YACA,eACA,mBACA,cACA,YACA,YACA,WACA,UACA,YACA,cACA,aACA,SACA,YACA,cACA,YACA,iBACA,WACA,eACA,cACA,aACA,kBACA,WACA,YACA,oBACA,gBACA,UACA,qBACA,cACA,SACA,WACA,UACA,gBACA,WACA,cACA,cACA,aACA,eACA,cACA,aACA,gBACA,QACA,kBACA,YACA,WACA,aACA,eACA,gBACA,YACA,UACA,YACA;;ACpGA,OAAA,QAAA,CACA,UACA,OACA,iBACA,iBACA,iBACA,iBACA,YACA,YACA,aACA,eACA,oBACA,aACA,sBACA,iBACA,aACA,cACA,iBACA,gBACA,gBACA,WACA,WACA,YACA,oBACA,qBACA,gBACA,YACA,gBACA,WACA,cACA,WACA,kBACA,UACA,cACA,aACA,eACA,cACA,YACA,WACA,UACA,iBACA,aACA,iBACA,aACA,SACA,eACA,YACA,aACA,WACA,cACA,iBACA,SACA,YACA,cACA,aACA,cACA,eACA,eACA,QACA,aACA,YACA,aACA,mBACA,SACA,UACA,aACA,aACA,cACA,gBACA,WACA,cACA,UACA,kBACA,eACA,kBACA,UACA,aACA,UACA,YACA,aACA,WACA,aACA,WACA,YACA,oBACA,SACA,SACA,aACA,WACA,gBACA,WACA,WACA,eACA,UACA,kBACA,cACA,cACA,cACA,iBACA,sBACA,cACA;;ACrGA,OAAA,QAAA,CACA,UACA,SACA,UACA,YACA,WACA,WACA,cACA,WACA,eACA,UACA,0BACA,QACA,WACA,YACA,uBACA,aACA,WACA,YACA,UACA,gBACA,aACA,UACA,iBACA,cACA,OACA,mBACA,WACA,iBACA,aACA,YACA,WACA,aACA,WACA,WACA,cACA,cACA,WACA,QACA,YACA,WACA,kBACA,oBACA,YACA,2BACA,WACA,YACA,YACA,MACA,iBACA,iBACA,iBACA,aACA,eACA,kBACA,YACA,oBACA,WACA,iBACA,iBACA,qBACA,WACA,WACA,SACA,cACA,aACA,YACA,QACA,YACA,aACA,aACA,aACA,oBACA,cACA,gBACA,WACA,cACA,SACA,SACA,oBACA,sBACA,UACA,eACA,UACA,aACA,WACA,eACA,eACA,WACA,WACA,kBACA,WACA,YACA,UACA,iBACA,UACA,UACA,gBACA,aACA,aACA,aACA,UACA,cACA,UACA;;ACxGA,OAAA,QAAA,CACA,YACA,UACA,YACA,aACA,WACA,SACA,YACA,UACA,SACA,cACA,WACA,WACA,YACA,YACA,UACA,cACA,QACA,UACA,cACA,WACA,UACA,aACA,QACA,kBACA,YACA,aACA,SACA,QACA,OACA,SACA,YACA,aACA,UACA,OACA,WACA,SACA,WACA,YACA,WACA,iBACA,aACA,YACA,YACA,WACA,QACA,UACA,QACA,SACA,WACA,gBACA,WACA,UACA,aACA,WACA,UACA,YACA,SACA,aACA,WACA;;AC5DA,OAAA,QAAA,CACA,oBACA,cACA,WACA,YACA,SACA,gBACA,WACA,eACA,aACA,YACA,YACA,aACA,mBACA,SACA,aACA,OACA,aACA,SACA,MACA,MACA,WACA,eACA,UACA,QACA,UACA,SACA,gBACA,SACA,WACA,gBACA,cACA,cACA,UACA,OACA,WACA,YACA,YACA,YACA,cACA,WACA,aACA,WACA,cACA,cACA,iBACA,cACA,cACA,oBACA,iBACA,aACA,aACA,YACA,WACA,cACA,kBACA,eACA,eACA,YACA,aACA,aACA,gBACA,gBACA,aACA,WACA;;ACjEA,OAAA,QAAA,CACA,YACA,gBACA,YACA,UACA,eACA,kBACA,YACA,cACA,WACA,WACA,cACA,MACA,YACA,YACA,aACA,eACA,UACA,SACA,eACA,UACA,UACA,gBACA,cACA,gBACA,gBACA,aACA,YACA,aACA,UACA,YACA,gBACA,SACA,YACA,eACA,QACA,UACA,WACA,eACA,UACA,aACA,kBACA,cACA,eACA,gBACA;;AC7CA,OAAA,QAAA,CACA,8BACA,sCACA;;ACHA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,OAAA,QAAA,YACA,EAAA,UAAA,QAAA,eACA,EAAA,WAAA,QAAA,gBACA,EAAA,KAAA,QAAA,UACA,EAAA,QAAA,QAAA,aACA,EAAA,aAAA,QAAA,kBACA,EAAA,QAAA,QAAA,aACA,EAAA,KAAA,QAAA;;ACTA,OAAA,QAAA,CACA,YACA,YACA;;ACHA,OAAA,QAAA,CACA,cACA,cACA;;ACHA,OAAA,QAAA,CACA,MACA,MACA,OACA,OACA,MACA;;ACNA,OAAA,QAAA,CACA,gEACA,gEACA,kEACA,iEACA,oEACA,gEACA,kEACA,iEACA,uEACA,oEACA,mEACA,mEACA,sEACA,kEACA,mEACA,+DACA,mEACA,oEACA,+DACA,oEACA,oEACA,qEACA,sEACA,kEACA,uEACA,uEACA,wEACA,kEACA,+DACA,kEACA,uEACA,yEACA,oEACA,kEACA,gEACA,mEACA,oEACA,wEACA,qEACA,sEACA,gEACA,iEACA,qEACA,wEACA,4DACA,kEACA,iEACA,+DACA,+DACA,mEACA,iEACA,mEACA,gEACA,qEACA,iEACA,oEACA,kEACA,mEACA,qEACA,iEACA,iEACA,mEACA,kEACA,8DACA,qEACA,+DACA,qEACA,sEACA,gEACA,kEACA,iEACA,oEACA,gEACA,iEACA,kEACA,qEACA,oEACA,sEACA,oEACA,+DACA,sEACA,yEACA,mEACA,qEACA,uEACA,qEACA,uEACA,uEACA,wEACA,mEACA,uEACA,oEACA,iEACA,uEACA,uEACA,kEACA,+DACA,mEACA,qEACA,kEACA,gEACA,wEACA,qEACA,8DACA,qEACA,+DACA,kEACA,kEACA,mEACA,qEACA,uEACA,mEACA,kEACA,kEACA,+DACA,kEACA,kEACA,gEACA,6DACA,oEACA,gEACA,gEACA,gEACA,uEACA,oEACA,mEACA,gEACA,gEACA,mEACA,sEACA,gEACA,+DACA,oEACA,qEACA,yEACA,mEACA,mEACA,mEACA,yEACA,kEACA,qEACA,mEACA,qEACA,8DACA,8DACA,wEACA,uEACA,uEACA,iEACA,iEACA,mEACA,oEACA,oEACA,mEACA,oEACA,kEACA,qEACA,iEACA,wEACA,mEACA,qEACA,oEACA,iEACA,sEACA,uEACA,sEACA,gEACA,qEACA,sEACA,+DACA,qEACA,iEACA,mEACA,qEACA,gEACA,iEACA,kEACA,iEACA,qEACA,iEACA,uEACA,sEACA,uEACA,mEACA,qEACA,mEACA,uEACA,mEACA,sEACA,qEACA,6DACA,mEACA,gEACA,mEACA,kEACA,kEACA,kEACA,iEACA,sEACA,iEACA,kEACA,iEACA,qEACA,qEACA,kEACA,8DACA,sEACA,oEACA,iEACA,uEACA,mEACA,wEACA,iEACA,qEACA,sEACA,wEACA,wEACA,mEACA,oEACA,iEACA,qEACA,sEACA,mEACA,qEACA,gEACA,iEACA,uEACA,mEACA,+DACA,kEACA,kEACA,qEACA,+DACA,uEACA,yEACA,kEACA,oEACA,uEACA,kEACA,kEACA,iEACA,iEACA,qEACA,kEACA,iEACA,wEACA,yEACA,yEACA,+DACA,+DACA,gEACA,iEACA,mEACA,sEACA,gEACA,mEACA,uEACA,sEACA,oEACA,qEACA,oEACA,kEACA,yEACA,mEACA,qEACA,kEACA,kEACA,uEACA,+DACA,qEACA,gEACA,oEACA,qEACA,sEACA,gEACA,gEACA,sEACA,yEACA,kEACA,+DACA,wEACA,qEACA,qEACA,mEACA,oEACA,kEACA,sEACA,mEACA,kEACA,gEACA,iEACA,oEACA,wEACA,yEACA,gEACA,mEACA,sEACA,mEACA,qEACA,yEACA,qEACA,kEACA,qEACA,sEACA,qEACA,sEACA,uEACA,qEACA,mEACA,oEACA,qEACA,oEACA,qEACA,gEACA,qEACA,sEACA,qEACA,8DACA,kEACA,gEACA,mEACA,oEACA,oEACA,kEACA,gEACA,sEACA,wEACA,kEACA,qEACA,oEACA,kEACA,iEACA,yEACA,qEACA,uEACA,wEACA,uEACA,wEACA,+DACA,kEACA,qEACA,+DACA,sEACA,oEACA,oEACA,+DACA,qEACA,oEACA,sEACA,kEACA,sEACA,oEACA,iEACA,uEACA,iEACA,+DACA,gEACA,oEACA,gEACA,kEACA,sEACA,iEACA,mEACA,yEACA,wEACA,mEACA,mEACA,kEACA,iEACA,sEACA,yEACA,qEACA,kEACA,wEACA,gEACA,iEACA,uEACA,6DACA,kEACA,mEACA,mEACA,oEACA,gEACA,mEACA,kEACA,mEACA,mEACA,uEACA,iEACA,uEACA,wEACA,mEACA,qEACA,sEACA,+DACA,oEACA,mEACA,kEACA,sEACA,iEACA,qEACA,uEACA,+DACA,uEACA,uEACA,iEACA,iEACA,qEACA,qEACA,uEACA,8DACA,kEACA,sEACA,qEACA,uEACA,uEACA,sEACA,iEACA,oEACA,gEACA,kEACA,oEACA,yEACA,qEACA,kEACA,iEACA,qEACA,iEACA,uEACA,kEACA,qEACA,mEACA,+DACA,oEACA,uEACA,sEACA,oEACA,gEACA,oEACA,oEACA,oEACA,+DACA,iEACA,sEACA,uEACA,gEACA,+DACA,uEACA,yEACA,iEACA,kEACA,qEACA,mEACA,uEACA,sEACA,+DACA,sEACA,wEACA,sEACA,uEACA,+DACA,qEACA,gEACA,kEACA,yEACA,mEACA,gEACA,kEACA,qEACA,kEACA,kEACA,iEACA,sEACA,mEACA,qEACA,wEACA,uEACA,kEACA,iEACA,4DACA,mEACA,iEACA,iEACA,mEACA,iEACA,sEACA,qEACA,iEACA,kEACA,qEACA,uEACA,qEACA,yEACA,gEACA,iEACA,iEACA,mEACA,oEACA,mEACA,gEACA,iEACA,oEACA,oEACA,qEACA,+DACA,qEACA,mEACA,iEACA,+DACA,kEACA,qEACA,kEACA,sEACA,gEACA,wEACA,qEACA,sEACA,sEACA,kEACA,qEACA,gEACA,oEACA,kEACA,iEACA,iEACA,sEACA,mEACA,kEACA,sEACA,qEACA,iEACA,uEACA,qEACA,qEACA,kEACA,sEACA,mEACA,kEACA,+DACA,kEACA,iEACA,wEACA,uEACA,kEACA,kEACA,qEACA,oEACA,gEACA,kEACA,uEACA,gEACA,mEACA,oEACA,gEACA,gEACA,oEACA,mEACA,qEACA,yEACA,mEACA,sEACA,kEACA,iEACA,uEACA,gEACA,iEACA,uEACA,gEACA,yEACA,uEACA,kEACA,oEACA,mEACA,sEACA,gEACA,uEACA,qEACA,gEACA,sEACA,oEACA,uEACA,sEACA,kEACA,wEACA,mEACA,wEACA,mEACA,yEACA,uEACA,8DACA,qEACA,iEACA,kEACA,mEACA,oEACA,qEACA,iEACA,mEACA,yEACA,yEACA,+DACA,kEACA,gEACA,wEACA,uEACA,iEACA,gEACA,oEACA,mEACA,mEACA,gEACA,uEACA,mEACA,oEACA,sEACA,iEACA,sEACA,oEACA,mEACA,iEACA,+DACA,qEACA,iEACA,kEACA,qEACA,qEACA,kEACA,sEACA,iEACA,8DACA,iEACA,wEACA,sEACA,sEACA,kEACA,oEACA,kEACA,mEACA,oEACA,uEACA,kEACA,kEACA,oEACA,qEACA,mEACA,mEACA,mEACA,qEACA,sEACA,qEACA,gEACA,8DACA,mEACA,uEACA,mEACA,wEACA,yEACA,sEACA,qEACA,uEACA,gEACA,uEACA,oEACA,gEACA,qEACA,kEACA,kEACA,sEACA,oEACA,uEACA,mEACA,sEACA,qEACA,oEACA,yEACA,sEACA,uEACA,wEACA,kEACA,iEACA,wEACA,iEACA,oEACA,kEACA,iEACA,sEACA,oEACA,iEACA,mEACA,oEACA,qEACA,+DACA,mEACA,mEACA,kEACA,qEACA,gEACA,oEACA,iEACA,kEACA,wEACA,qEACA,oEACA,iEACA,wEACA,gEACA,qEACA,oEACA,sEACA,+DACA,iEACA,mEACA,wEACA,kEACA,wEACA,kEACA,uEACA,mEACA,qEACA,gEACA,qEACA,yEACA,oEACA,sEACA,qEACA,mEACA,qEACA,uEACA,gEACA,mEACA,mEACA,kEACA,oEACA,kEACA,kEACA,mEACA,sEACA,oEACA,kEACA,oEACA,qEACA,kEACA,sEACA,gEACA,mEACA,iEACA,gEACA,iEACA,uEACA,oEACA,sEACA,sEACA,iEACA,wEACA,uEACA,qEACA,iEACA,mEACA,mEACA,mEACA,iEACA,qEACA,iEACA,qEACA,uEACA,qEACA,kEACA,kEACA,oEACA,gEACA,iEACA,iEACA,kEACA,kEACA,oEACA,kEACA,qEACA,oEACA,oEACA,sEACA,mEACA,kEACA,sEACA,mEACA,oEACA,oEACA,+DACA,mEACA,mEACA,sEACA,mEACA,qEACA,uEACA,gEACA,kEACA,uEACA,oEACA,oEACA,uEACA,kEACA,oEACA,mEACA,+DACA,oEACA,mEACA,oEACA,uEACA,mEACA,sEACA,iEACA,sEACA,uEACA,iEACA,sEACA,qEACA,sEACA,qEACA,kEACA,iEACA,kEACA,yEACA,gEACA,+DACA,qEACA,kEACA,kEACA,+DACA,yEACA,mEACA,gEACA,kEACA,sEACA,kEACA,8DACA,sEACA,+DACA,oEACA,mEACA,iEACA,mEACA,8DACA,oEACA,gEACA,qEACA,sEACA,uEACA,iEACA,uEACA,kEACA,iEACA,+DACA,oEACA,yEACA,qEACA,oEACA,wEACA,qEACA,sEACA,mEACA,mEACA,sEACA,uEACA,oEACA,sEACA,mEACA,kEACA,yEACA,kEACA,kEACA,oEACA,kEACA,wEACA,qEACA,gEACA,oEACA,mEACA,kEACA,wEACA,oEACA,wEACA,mEACA,kEACA,kEACA,oEACA,mEACA,uEACA,qEACA,mEACA,kEACA,sEACA,yEACA,kEACA,qEACA,uEACA,gEACA,mEACA,yEACA,qEACA,oEACA,qEACA,iEACA,sEACA,qEACA,kEACA,sEACA,oEACA,oEACA,mEACA,kEACA,qEACA,sEACA,uEACA,iEACA,sEACA,mEACA,oEACA,uEACA,oEACA,+DACA,uEACA,kEACA,iEACA,sEACA,iEACA,kEACA,mEACA,mEACA,uEACA,wEACA,oEACA,gEACA,uEACA,wEACA,uEACA,sEACA,iEACA,oEACA,oEACA,iEACA,qEACA,yEACA,wEACA,iEACA,wEACA,mEACA,iEACA,iEACA,qEACA,sEACA,iEACA,wEACA,gEACA,kEACA,oEACA,qEACA,uEACA,sEACA,oEACA,kEACA,iEACA,yEACA,uEACA,qEACA,mEACA,kEACA,sEACA,iEACA,sEACA,gEACA,uEACA,iEACA,iEACA,gEACA,kEACA,oEACA,oEACA,mEACA,oEACA,kEACA,kEACA,gEACA,qEACA,qEACA,sEACA,kEACA,mEACA,qEACA,yEACA,gEACA,qEACA,gEACA,qEACA,uEACA,iEACA,mEACA,uEACA,uEACA,mEACA,qEACA,uEACA,iEACA,sEACA,wEACA,mEACA,qEACA,wEACA,mEACA,mEACA,mEACA,wEACA,yEACA,mEACA,kEACA,mEACA,sEACA,mEACA,oEACA,mEACA,uEACA,kEACA,sEACA,iEACA,yEACA,wEACA,wEACA,iEACA,wEACA,iEACA,qEACA,uEACA,yEACA,oEACA,oEACA,sEACA,oEACA,oEACA,+DACA,qEACA,iEACA,gEACA,oEACA,iEACA,oEACA,sEACA,iEACA,wEACA,qEACA,uEACA,iEACA,oEACA,mEACA,mEACA,qEACA,sEACA,oEACA,mEACA,mEACA,iEACA,kEACA,iEACA,sEACA,oEACA,gEACA,gEACA,qEACA,kEACA,sEACA,qEACA,qEACA,yEACA,kEACA,kEACA,oEACA,sEACA,wEACA,kEACA,uEACA,qEACA,uEACA,gEACA,kEACA,kEACA,kEACA,gEACA,iEACA,sEACA,mEACA,oEACA,qEACA,iEACA,oEACA,kEACA,uEACA,uEACA,sEACA,iEACA,mEACA,mEACA,qEACA,sEACA,qEACA,kEACA,wEACA,sEACA,qEACA,yEACA,iEACA,yEACA,sEACA,gEACA,oEACA,sEACA,qEACA,qEACA,mEACA,oEACA,qEACA,iEACA,uEACA,kEACA,kEACA,kEACA,uEACA,oEACA,kEACA,+DACA,oEACA,8DACA,qEACA,wEACA,qEACA,iEACA,mEACA,iEACA,mEACA,yEACA,oEACA,iEACA,qEACA,iEACA,yEACA,sEACA,yEACA,uEACA,iEACA,mEACA,oEACA,qEACA,oEACA,uEACA,oEACA,mEACA,oEACA,uEACA,iEACA,sEACA,gEACA,qEACA,mEACA,iEACA,oEACA,uEACA,sEACA,uEACA,wEACA,gEACA,mEACA,kEACA,kEACA,uEACA,mEACA,wEACA,wEACA,wEACA,uEACA,mEACA,qEACA,sEACA,gEACA,gEACA,sEACA,qEACA,yEACA,qEACA,mEACA,uEACA,uEACA,uEACA,yEACA,kEACA,sEACA,gEACA,uEACA,sEACA,mEACA,wEACA,mEACA,oEACA,uEACA,qEACA,qEACA,oEACA,qEACA,gEACA,mEACA,uEACA,8DACA,uEACA,qEACA,kEACA,iEACA,iEACA,qEACA,kEACA,oEACA,mEACA,sEACA,oEACA,sEACA,uEACA,iEACA,gEACA,uEACA,8DACA,uEACA,sEACA,kEACA,mEACA,qEACA,sEACA,sEACA,qEACA,qEACA,mEACA,yEACA,uEACA,mEACA,kEACA,gEACA,mEACA,qEACA,mEACA,oEACA,gEACA,uEACA,uEACA,sEACA,uEACA,qEACA,iEACA,oEACA,wEACA,qEACA;;ACtuCA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,WAAA,QAAA,gBACA,EAAA,cAAA,QAAA,mBACA,EAAA,cAAA,QAAA,mBACA,EAAA,WAAA,QAAA;;ACLA,OAAA,QAAA,CACA,kBACA,kBACA,WACA,YACA,mBACA,aACA;;ACPA,OAAA,QAAA,CACA,KACA,QACA,OACA,QACA,QACA,QACA,QACA,WACA,WACA,UACA,SACA,SACA,YACA;;ACdA,OAAA,QAAA,CACA,SACA,SACA,SACA,MACA,YACA;;ACNA,OAAA,QAAA,CACA,MACA,UACA,OACA,OACA,WACA,UACA,OACA,YACA,WACA,YACA,SACA,UACA,QACA,SACA,OACA,MACA,UACA,SACA,OACA,SACA,OACA,MACA,WACA;;ACxBA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,UAAA,QAAA,eACA,EAAA,OAAA,QAAA,YACA,EAAA,OAAA,QAAA,YACA,EAAA,KAAA,QAAA;;AELA,OAAA,QAAA,CACA,QACA,SACA,OACA,UACA,cACA,SACA,WACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,WACA,UACA,YACA,YACA,OACA,YACA,UACA,SACA,QACA,UACA,OACA,QACA,UACA,OACA,SACA,WACA,OACA,UACA,WACA,SACA,UACA,WACA,UACA,QACA,SACA,WACA,gBACA,YACA,SACA,gBACA,YACA,UACA,UACA,UACA,QACA,SACA,UACA,YACA,WACA,QACA,WACA,aACA,UACA,QACA,UACA,WACA,SACA,aACA,QACA,QACA,aACA,SACA,SACA,WACA,SACA,MACA,SACA,WACA,SACA,QACA,WACA,OACA,SACA,YACA,UACA,UACA,MACA,MACA,QACA,UACA,OACA,UACA,SACA,QACA,UACA,MACA,QACA,QACA,SACA,YACA,UACA,SACA,WACA,WACA,UACA,QACA,SACA,MACA,OACA,SACA,WACA,YACA,SACA,UACA,UACA,UACA,WACA,cACA,QACA,SACA,QACA,QACA,OACA,QACA,WACA,WACA,SACA,SACA,YACA,YACA,UACA,SACA,YACA,UACA,OACA,QACA,OACA,OACA,MACA,SACA,UACA,QACA,WACA,OACA,QACA,UACA,QACA,WACA,aACA,QACA,OACA,WACA,OACA,MACA,MACA,YACA,cACA,OACA,MACA,UACA,QACA,QACA,UACA,UACA,aACA,SACA,SACA,OACA,QACA,YACA,QACA,SACA,UACA,aACA,SACA,SACA,UACA,QACA,WACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,MACA,QACA,QACA,WACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,SACA,SACA,WACA,SACA,OACA,aACA,eACA,UACA,SACA,OACA,MACA,WACA,QACA,MACA,SACA,OACA,SACA,YACA,SACA,YACA,SACA,QACA,WACA,UACA,UACA,WACA,QACA,YACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,SACA,QACA,SACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,OACA,WACA,QACA,OACA,OACA,YACA,OACA,UACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,eACA,OACA,QACA,SACA,WACA,cACA,YACA,QACA,cACA,OACA,QACA,UACA,OACA,QACA,QACA,SACA,UACA,YACA,YACA,WACA,aACA,aACA,QACA,UACA,SACA,WACA,WACA,OACA,UACA,UACA,SACA,UACA,UACA,SACA,OACA,QACA,OACA,UACA,UACA,SACA,QACA,UACA,QACA,YACA,YACA,WACA,UACA,WACA,UACA,WACA,aACA,UACA,cACA,UACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,cACA,UACA,WACA,UACA,aACA,QACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,aACA,UACA,UACA,SACA,WACA,YACA,UACA,QACA,UACA,QACA,SACA,SACA,aACA,UACA,YACA,WACA,WACA,UACA,UACA,OACA,YACA,UACA,SACA,SACA,QACA,OACA,UACA,cACA,SACA,QACA,SACA,SACA,eACA,WACA,WACA,OACA,YACA,OACA,cACA,UACA,OACA,MACA,QACA,QACA,QACA,YACA,UACA,MACA,WACA,QACA,YACA,YACA,QACA,WACA,YACA,MACA,OACA,UACA,QACA,aACA,QACA,OACA,aACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,WACA,WACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,QACA,WACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,aACA,UACA,SACA,SACA,SACA,UACA,WACA,SACA,UACA,SACA,aACA,SACA,QACA,WACA,WACA,WACA,SACA,SACA,UACA,UACA,OACA,YACA,UACA,WACA,QACA,SACA,UACA,OACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,YACA,aACA,UACA,UACA,UACA,SACA,aACA,UACA,UACA,WACA,SACA,UACA,SACA,aACA,WACA,cACA,QACA,cACA,QACA,SACA,SACA,aACA,UACA,QACA,WACA,SACA,MACA,WACA,QACA,QACA,SACA,UACA,QACA,QACA,MACA,OACA,SACA,YACA,MACA,QACA,QACA,WACA,SACA,UACA,YACA,QACA,QACA,UACA,QACA,eACA,SACA,UACA,OACA,aACA,QACA,SACA,WACA,SACA,YACA,cACA,WACA,SACA,QACA,OACA,WACA,WACA,YACA,SACA,WACA,SACA,SACA,SACA,eACA,SACA,QACA,MACA,WACA,SACA,SACA,UACA,SACA,WACA,MACA,SACA,WACA,UACA,WACA,UACA,aACA,WACA,UACA,WACA,WACA,UACA,aACA,UACA,MACA,QACA,MACA,QACA,WACA,YACA,OACA,UACA,WACA,QACA,YACA,YACA,UACA,QACA,WACA,QACA,SACA,WACA,WACA,WACA,OACA,WACA,UACA,WACA,UACA,QACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,MACA,SACA,QACA,UACA,WACA,UACA,SACA,YACA,SACA,SACA,OACA,YACA,cACA,UACA,YACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,UACA,MACA,UACA,QACA,QACA,SACA,gBACA,QACA,SACA,SACA,aACA,OACA,QACA,SACA,UACA,SACA,SACA,UACA,cACA,OACA,WACA,SACA,SACA,cACA,WACA,QACA,QACA,YACA,UACA,YACA,SACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,SACA,QACA,SACA,SACA,UACA,UACA,MACA,UACA,SACA,QACA,SACA,QACA,QACA,QACA,WACA,QACA,UACA,OACA,SACA,aACA,WACA,WACA,WACA,UACA,YACA,UACA,cACA,WACA,MACA,MACA,WACA,OACA,QACA,QACA,QACA,SACA,UACA,QACA,WACA,WACA,MACA,WACA,QACA,WACA,QACA,QACA,QACA,SACA,SACA,MACA,OACA,UACA,WACA,OACA,UACA,OACA,QACA,SACA,QACA,SACA,SACA,OACA,OACA,UACA,SACA,SACA,OACA,SACA,WACA,UACA,QACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,WACA,UACA,SACA,UACA,WACA,SACA,WACA,MACA,YACA,QACA,QACA,QACA,QACA,UACA,WACA,SACA,WACA,MACA,UACA,SACA,OACA,aACA,SACA,QACA,UACA,OACA,SACA,QACA,aACA,QACA,QACA,SACA,SACA,WACA,SACA,YACA,UACA,QACA,MACA,UACA,cACA,WACA,SACA,YACA,QACA,UACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,QACA,WACA,UACA,UACA,QACA,MACA,QACA,QACA,UACA,YACA,SACA,MACA,SACA,OACA,WACA,SACA,OACA,OACA,MACA,QACA,YACA,OACA,YACA,OACA,YACA,cACA,QACA,aACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,MACA,QACA,QACA,MACA,YACA,WACA,aACA,QACA,SACA,UACA,SACA,SACA,aACA,YACA;;ACx0BA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,QAAA,WACA,EAAA,aAAA,QAAA;;ACHA,OAAA,QAAA,CACA,QACA,OACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,cACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,UACA,OACA,UACA,OACA,QACA,UACA,QACA,QACA,OACA,UACA,SACA,UACA,UACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,QACA,MACA,OACA,OACA,SACA,WACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,WACA,WACA,MACA,WACA,QACA,UACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,QACA,OACA,QACA,WACA,OACA,SACA,QACA,SACA,OACA,QACA,UACA,QACA,QACA,OACA,OACA,OACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,QACA,UACA,SACA,OACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,UACA,QACA,UACA,YACA,MACA,OACA,QACA,MACA,QACA,QACA,OACA,UACA,QACA,YACA,UACA,QACA,QACA,YACA,SACA,UACA,WACA,WACA,SACA,QACA,MACA,MACA,MACA,SACA,OACA,MACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,UACA,SACA,QACA,MACA,QACA,MACA,SACA,SACA,OACA,OACA,QACA,SACA,QACA,UACA,MACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,QACA,OACA,SACA,QACA,UACA,MACA,OACA,SACA,QACA,QACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,QACA,YACA,SACA,SACA,QACA,SACA,OACA,MACA,UACA,QACA,QACA,WACA,QACA,QACA,OACA,UACA,MACA,WACA,SACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,SACA,YACA,SACA,WACA,UACA,MACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,MACA,UACA,OACA,MACA,SACA,SACA,UACA,QACA,SACA,UACA,SACA,MACA,UACA,MACA,MACA,QACA,QACA,UACA,UACA,OACA,OACA,UACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,OACA,SACA,OACA,WACA,WACA,QACA,OACA,SACA,SACA,QACA,OACA,OACA,WACA,OACA,UACA,WACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,YACA,SACA,OACA,OACA,SACA,UACA,WACA,OACA,SACA,OACA,SACA,OACA,UACA,SACA,SACA,OACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,OACA,UACA,UACA,MACA,UACA,UACA,UACA,OACA,QACA,UACA,OACA,SACA,QACA,QACA,SACA,WACA,QACA,UACA,SACA,SACA,OACA,MACA,SACA,QACA,YACA,UACA,UACA,QACA,SACA,OACA,UACA,QACA,SACA,QACA,KACA,OACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,KACA,UACA,QACA,QACA,UACA,QACA,YACA,UACA,QACA,QACA,OACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,SACA,QACA,YACA,MACA,YACA,SACA,WACA,UACA,UACA,SACA,QACA,YACA,QACA,SACA,UACA,SACA,OACA,QACA,UACA,QACA,aACA,OACA,OACA,SACA,UACA,OACA,SACA,QACA,SACA,QACA,SACA,WACA,QACA,UACA,WACA,SACA,UACA,OACA,OACA,QACA,QACA,KACA,UACA,OACA,OACA,UACA,QACA,QACA,UACA,QACA,UACA,UACA,QACA,SACA,UACA,UACA,WACA,SACA,QACA,OACA,SACA,SACA,SACA,MACA,OACA,QACA,OACA,YACA,QACA,UACA,OACA,QACA,SACA,WACA,QACA,QACA,OACA,UACA,QACA,QACA,OACA,QACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,WACA,MACA,SACA,SACA,OACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA;;ACpfA,OAAA,QAAA,CACA,OACA,WACA,QACA,UACA,YACA,WACA,QACA,QACA,WACA,UACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,WACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,MACA,OACA,UACA,WACA,WACA,SACA,SACA,QACA,SACA,YACA,UACA,YACA,QACA,QACA,YACA,UACA,MACA,QACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,SACA,OACA,SACA,UACA,YACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,OACA,YACA,QACA,UACA,UACA,SACA,QACA,QACA,OACA,OACA,SACA,UACA,SACA,UACA,SACA,OACA,OACA,aACA,QACA,SACA,QACA,OACA,OACA,OACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,SACA,WACA,QACA,OACA,UACA,SACA,OACA,QACA,QACA,QACA,WACA,QACA,MACA,SACA,SACA,YACA,SACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,SACA,UACA,OACA,UACA,QACA,SACA,QACA,QACA,MACA,SACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,OACA,SACA,UACA,WACA,OACA,OACA,YACA,SACA,QACA,QACA,WACA,OACA,QACA,SACA,QACA,WACA,UACA,UACA,SACA,SACA,UACA,OACA,WACA,SACA,OACA,QACA,MACA,QACA,MACA,SACA,UACA,QACA,WACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,OACA,MACA,QACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,WACA,OACA,QACA,OACA,SACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,SACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,MACA,UACA,YACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,WACA,OACA,KACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,OACA,UACA,SACA,QACA,QACA,YACA,SACA,OACA,SACA,OACA,YACA,OACA,QACA,MACA,YACA,QACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,SACA,SACA,WACA,OACA,QACA,MACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,YACA,UACA,YACA,SACA,OACA,OACA,MACA,UACA,UACA,SACA,aACA,SACA,UACA,QACA,UACA,SACA,SACA,UACA,QACA,QACA,SACA,OACA,SACA,QACA,OACA,QACA,WACA,SACA,UACA,YACA,UACA,OACA,QACA,SACA,QACA,QACA,MACA,MACA,WACA,UACA,SACA,UACA,OACA,SACA,SACA,SACA,MACA,QACA,SACA,QACA,UACA,SACA,QACA,OACA,OACA,QACA,SACA,aACA,UACA,QACA,YACA,MACA,QACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,OACA,YACA,OACA,SACA,OACA,UACA,MACA,SACA,UACA,WACA,UACA,QACA,UACA,WACA,UACA,YACA,SACA,UACA,QACA,aACA,QACA,OACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,OACA,UACA,SACA,WACA,OACA,OACA,SACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,QACA,WACA,QACA,WACA,WACA,UACA,OACA,WACA,OACA,QACA,SACA,SACA,SACA,WACA,WACA,UACA,SACA,YACA,SACA,OACA,SACA,OACA,QACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,QACA,MACA,QACA,QACA,QACA,SACA,OACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,SACA,QACA,QACA,QACA,MACA,SACA,UACA,QACA,QACA,WACA;;ACpfA,OAAA,QAAA,CACA,UACA,QACA,UACA,QACA,QACA,WACA,OACA,SACA,QACA,WACA,MACA,OACA,WACA,UACA,UACA,WACA,QACA,UACA,MACA,OACA,YACA,UACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,SACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,WACA,SACA,SACA,SACA,UACA,WACA,SACA,SACA,WACA,QACA,QACA,QACA,UACA,WACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,KACA,SACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,UACA,WACA,UACA,QACA,SACA,OACA,QACA,OACA,QACA,YACA,aACA,OACA,QACA,QACA,aACA,aACA,UACA,SACA,OACA,QACA,YACA,YACA,YACA,aACA,aACA,cACA,YACA,UACA,WACA,SACA,SACA,SACA,aACA,MACA,UACA,UACA,SACA,SACA,UACA,UACA,MACA,OACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,OACA,WACA,OACA,SACA,OACA,QACA,SACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,UACA,UACA,OACA,QACA,OACA,QACA,QACA,OACA,SACA,MACA,OACA,MACA,SACA,WACA,QACA,QACA,YACA,YACA,WACA,QACA,WACA,YACA,SACA,SACA,OACA,QACA,SACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,UACA,WACA,YACA,WACA,UACA,YACA,OACA,UACA,UACA,QACA,QACA,SACA,UACA,aACA,SACA,YACA,YACA,UACA,aACA,WACA,UACA,SACA,SACA,OACA,QACA,MACA,UACA,UACA,OACA,YACA,UACA,QACA,SACA,QACA,MACA,SACA,UACA,OACA,QACA,UACA,QACA,SACA,QACA,OACA,SACA,UACA,SACA,UACA,OACA,OACA,SACA,UACA,UACA,OACA,MACA,SACA,SACA,QACA,QACA,UACA,UACA,MACA,OACA,SACA,WACA,SACA,QACA,UACA,SACA,SACA,OACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,YACA,SACA,SACA,UACA,YACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,UACA,SACA,QACA,UACA,QACA,OACA,aACA,SACA,SACA,WACA,OACA,UACA,OACA,QACA,QACA,MACA,WACA,WACA,UACA,SACA,QACA,SACA,WACA,aACA,YACA,UACA,WACA,WACA,WACA,UACA,SACA,WACA,UACA,QACA,OACA,QACA,SACA,UACA,WACA,QACA,SACA,OACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,UACA,QACA,KACA,SACA,QACA,SACA,SACA,QACA,OACA,OACA,SACA,WACA,UACA,SACA,QACA,UACA,QACA,SACA,SACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,QACA,OACA,QACA,OACA,QACA,SACA,UACA,QACA,UACA,YACA,SACA,UACA,WACA,UACA,QACA,UACA,WACA,QACA,YACA,QACA,QACA,SACA,WACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,MACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,OACA,QACA,SACA,UACA,OACA,QACA,UACA,OACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,aACA,UACA,UACA,UACA,OACA,QACA,UACA,SACA,WACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,WACA,UACA,SACA,UACA,QACA,YACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,SACA,OACA,WACA,QACA,UACA,UACA,SACA,YACA,YACA,UACA,SACA,WACA,WACA,YACA,YACA,WACA,UACA,QACA,QACA,SACA,UACA,QACA,SACA,UACA,UACA,YACA,YACA,QACA,SACA,QACA,OACA,QACA,WACA,QACA,SACA,WACA,SACA,WACA,UACA,WACA,UACA,UACA,UACA,YACA,QACA,UACA,WACA,QACA,OACA,UACA,UACA,UACA,UACA,UACA,OACA,WACA,WACA,QACA,QACA,SACA,UACA,aACA,YACA,aACA,YACA,YACA,WACA,aACA,cACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,WACA,QACA,SACA,QACA,aACA,QACA,WACA,QACA,QACA,SACA,UACA,UACA,WACA,OACA,UACA,UACA,aACA,aACA,UACA,OACA,SACA,QACA,SACA,QACA,YACA,WACA,UACA,QACA,UACA,WACA,SACA,QACA,QACA,OACA,OACA,QACA,OACA,UACA,QACA,UACA,SACA,OACA,SACA,SACA,WACA,aACA,SACA,SACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,OACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,SACA,YACA,UACA,UACA,SACA,UACA,OACA,OACA,WACA,MACA,QACA,WACA,SACA,UACA,WACA,WACA,YACA,aACA,OACA,UACA,UACA,SACA,OACA,SACA,SACA,UACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,MACA,OACA,SACA,OACA,WACA,UACA,SACA,UACA,WACA,WACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,QACA,SACA,UACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,OACA,QACA,QACA,SACA,QACA,UACA,OACA,SACA,MACA,SACA,QACA,QACA,SACA,OACA,WACA,SACA,UACA,SACA,SACA,UACA,MACA,QACA,OACA,QACA,QACA,SACA,UACA,UACA,UACA,QACA,UACA,OACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,YACA,SACA,OACA,QACA,SACA,OACA,UACA,UACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,UACA,QACA,UACA,QACA,QACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,OACA,OACA,OACA,QACA,OACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,YACA,MACA,SACA,SACA,UACA,QACA,UACA,SACA,QACA,OACA,SACA,SACA,QACA,WACA,UACA,SACA,SACA,SACA,OACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,QACA,OACA,UACA,UACA,UACA,aACA,SACA,SACA,OACA,QACA,KACA,MACA,MACA,QACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,WACA,WACA,WACA,UACA,SACA,QACA,SACA,UACA,WACA,WACA,MACA,QACA,SACA,QACA,UACA,SACA,SACA,UACA,QACA,YACA,QACA,SACA,SACA,SACA,QACA,YACA,OACA,QACA,QACA,SACA,UACA,QACA,YACA,QACA,SACA,OACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,OACA,UACA,SACA,SACA,QACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,OACA,UACA,WACA,aACA,QACA,SACA,QACA,SACA,OACA,QACA,MACA,OACA,QACA,QACA,OACA,SACA,UACA,UACA,MACA,WACA,OACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,SACA,OACA,SACA,YACA,YACA,UACA,QACA,QACA,QACA,OACA,YACA,YACA,OACA,UACA,YACA,QACA,SACA,UACA,UACA,UACA,SACA,WACA,OACA,QACA,QACA,UACA,QACA,QACA,SACA,SACA,UACA,OACA,QACA,UACA,OACA,SACA,UACA,MACA,SACA,OACA,aACA,QACA,MACA,UACA,SACA,WACA,UACA,WACA,QACA,OACA,QACA,QACA,UACA,WACA,OACA,SACA,UACA,MACA,SACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,WACA,UACA,WACA,WACA,SACA,SACA,QACA,SACA,SACA,OACA,WACA,QACA,QACA,YACA,WACA,OACA,QACA,SACA,SACA,QACA,WACA,MACA,WACA,YACA,UACA,UACA,UACA,UACA,OACA,QACA,OACA,SACA,UACA,SACA,UACA,YACA,YACA,UACA,YACA,YACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,WACA,YACA,WACA,aACA,WACA,QACA,SACA,UACA,SACA,QACA,SACA,YACA,QACA,SACA,OACA,UACA,YACA,YACA,UACA,OACA,OACA,UACA,SACA,WACA,UACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,QACA,SACA,QACA,MACA,QACA,UACA,OACA,UACA,UACA,YACA,UACA,WACA,MACA,WACA,SACA,YACA,YACA,aACA,WACA,WACA,UACA,SACA,YACA,SACA,UACA,QACA,UACA,WACA,SACA,QACA,SACA,WACA,MACA,SACA,SACA,UACA,WACA,QACA,QACA,UACA,OACA,OACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,OACA,SACA,SACA,UACA,SACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,WACA,QACA,SACA,QACA,YACA,SACA,UACA,QACA,OACA,QACA,WACA,WACA,UACA,QACA,WACA,UACA,UACA,SACA,YACA,SACA,QACA,YACA,WACA,SACA,SACA,MACA,SACA,OACA,UACA,MACA,OACA,YACA,SACA,SACA,SACA,SACA,MACA,UACA,QACA,QACA,QACA,SACA,OACA,QACA,SACA,OACA,QACA,SACA,SACA,UACA,SACA,WACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,UACA,YACA,QACA,YACA,QACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,QACA,YACA,UACA,UACA,QACA,SACA,WACA,QACA,SACA,SACA,SACA,SACA,QACA,OACA,SACA,UACA,WACA,QACA,UACA,SACA,SACA,OACA,SACA,SACA,OACA,QACA,WACA,SACA,QACA,MACA,UACA,OACA,MACA,QACA,SACA,UACA,WACA,MACA,MACA,QACA,SACA,MACA,QACA,SACA,WACA,UACA,OACA,OACA,SACA,QACA,QACA,SACA,UACA,WACA,WACA,OACA,UACA,OACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,WACA,SACA,SACA,OACA,QACA,WACA,UACA,OACA,YACA,SACA,UACA,UACA,QACA,SACA,YACA,UACA,WACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,WACA,QACA,UACA,QACA,QACA,QACA,QACA,UACA,SACA,MACA,OACA,QACA,OACA,UACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,WACA,YACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,SACA,QACA,UACA,MACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,OACA,WACA,SACA,SACA,MACA,WACA,WACA,OACA,WACA,UACA,UACA,SACA,OACA,UACA,SACA,WACA,WACA,WACA,SACA,QACA,SACA,UACA,SACA,QACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,UACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,KACA,OACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,OACA,MACA,OACA,SACA,SACA,OACA,QACA,SACA,UACA,WACA,OACA,YACA,YACA,UACA,SACA,WACA,UACA,QACA,MACA,QACA,UACA,WACA,WACA,SACA,UACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,WACA,SACA,YACA,OACA,SACA,UACA,SACA,UACA,WACA,QACA,QACA,QACA,SACA,UACA,SACA,MACA,QACA,QACA,UACA,QACA,OACA,OACA,QACA,SACA,OACA,QACA,QACA,SACA,UACA,WACA,QACA,SACA,SACA,QACA,SACA,OACA,SACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,UACA,UACA,OACA,QACA,UACA,QACA,OACA,SACA,UACA,UACA,SACA,SACA,SACA,OACA,OACA,SACA,UACA,QACA,OACA,UACA,WACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,WACA,SACA,WACA,QACA,YACA,WACA,UACA,UACA,WACA,YACA,YACA,WACA,WACA,UACA,UACA,WACA,SACA,UACA,UACA,UACA,SACA,QACA,MACA,OACA,SACA,SACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,MACA,UACA,SACA,WACA,QACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,WACA,SACA,OACA,UACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,OACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,QACA,MACA,WACA,OACA,MACA,OACA,OACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,SACA,WACA,UACA,WACA,YACA,aACA,aACA,SACA,UACA,UACA,WACA,OACA,SACA,OACA,OACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,WACA,YACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,OACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,WACA,WACA,WACA,YACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,UACA,WACA,SACA,QACA,QACA,SACA,MACA,QACA,SACA,SACA,SACA,OACA,MACA,OACA,QACA,UACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,MACA,QACA,OACA,UACA,WACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,MACA,OACA,QACA,SACA,QACA,OACA,SACA,UACA,UACA,QACA,UACA,WACA,SACA,QACA,OACA,SACA,OACA,UACA,QACA,UACA,UACA,SACA,SACA,UACA,SACA,OACA,WACA,UACA,QACA,OACA,SACA,SACA,YACA,QACA,QACA,OACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,UACA,UACA,OACA,SACA,QACA,SACA,MACA,QACA,SACA,UACA,WACA,SACA,MACA,QACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,SACA,OACA,QACA,SACA,MACA,SACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,UACA,SACA,MACA,OACA,QACA,OACA,OACA,QACA,UACA,QACA,UACA,QACA,MACA,QACA,OACA,QACA,OACA,YACA,OACA,WACA,UACA,WACA,WACA,UACA,WACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,MACA,SACA,QACA,UACA,SACA,WACA,YACA,SACA,WACA,SACA,OACA,QACA,QACA,QACA,UACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,OACA,OACA,SACA,YACA,YACA,WACA,WACA,YACA,UACA,SACA,QACA,SACA,SACA,WACA,YACA,YACA,aACA,aACA,YACA,QACA,SACA,SACA,UACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,UACA,UACA,QACA,UACA,WACA,WACA,UACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,UACA,aACA,WACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,QACA,SACA,UACA,UACA,QACA,SACA,OACA,SACA,WACA,SACA,QACA,QACA,SACA,UACA,WACA,UACA,UACA,OACA,SACA,SACA,OACA,QACA,SACA,UACA,UACA,WACA,UACA,WACA,QACA,MACA,QACA,SACA,aACA,aACA,cACA,SACA,UACA,SACA,UACA,MACA,OACA,UACA,WACA,OACA,SACA,UACA,QACA,QACA,UACA,UACA,WACA,SACA,UACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,WACA,WACA,OACA,QACA,SACA,UACA,SACA,SACA,OACA,MACA,UACA,QACA,UACA,WACA,UACA,UACA,SACA,UACA,WACA,SACA,UACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,OACA,SACA,OACA,UACA,SACA,UACA,WACA,SACA,SACA,WACA,QACA,UACA,WACA,SACA,UACA,UACA,UACA,WACA,WACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,YACA,aACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,SACA,OACA,QACA,QACA,SACA,SACA,UACA,WACA,SACA,OACA,SACA,SACA,UACA,MACA,OACA,SACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,SACA,QACA,SACA,WACA,UACA,OACA,QACA,MACA,UACA,UACA,UACA,SACA,YACA,YACA,YACA,SACA,SACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,MACA,WACA,YACA,UACA,OACA,WACA,WACA,OACA,SACA,UACA,SACA,YACA,QACA,SACA,QACA,QACA,OACA,UACA,OACA,OACA,OACA,QACA,MACA,OACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,OACA,UACA,MACA,OACA,SACA,OACA,SACA,OACA,UACA,MACA,QACA,SACA,OACA,SACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,OACA,MACA,OACA,OACA,UACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,UACA,OACA,QACA,QACA,QACA,UACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,SACA,OACA,UACA,QACA,OACA,MACA,OACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,UACA,WACA,MACA,WACA,WACA,UACA,QACA,SACA,OACA,QACA,UACA,SACA,SACA,QACA,UACA,WACA,QACA,SACA,WACA,WACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,SACA,WACA,UACA,UACA,QACA,SACA,WACA,YACA,aACA,WACA,QACA,UACA,UACA,SACA,QACA,UACA,UACA,UACA,SACA,WACA,MACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,QACA,QACA,SACA,QACA,UACA,YACA,SACA,SACA,UACA,UACA,OACA,QACA,MACA,UACA,WACA,SACA,SACA,OACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,QACA,SACA,WACA,OACA,SACA,QACA,WACA,YACA,OACA,QACA,SACA,OACA,QACA,QACA,SACA,OACA,MACA,MACA,QACA,WACA,QACA,UACA,OACA,QACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,QACA,OACA,YACA,QACA,OACA,QACA,OACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,QACA,MACA,WACA,SACA,UACA,UACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,MACA,UACA,QACA,YACA,OACA,OACA,UACA,UACA,WACA,YACA,UACA,WACA,UACA,UACA,SACA,OACA,UACA,UACA,YACA,WACA,UACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,SACA,UACA,SACA,UACA,MACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,UACA,OACA,SACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,WACA,YACA,MACA,UACA,WACA,SACA,QACA,SACA,QACA,SACA,SACA,WACA,QACA,UACA,QACA,WACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,UACA,WACA,SACA,WACA,WACA,OACA,UACA,SACA,SACA,OACA,YACA,UACA,SACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,UACA,QACA,QACA,SACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,UACA,SACA,SACA,OACA,SACA,UACA,SACA,WACA,UACA,WACA,UACA,SACA,UACA,QACA,MACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,MACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,UACA,SACA,QACA,OACA,WACA,UACA,UACA,SACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,UACA,QACA,UACA,OACA,QACA,SACA,SACA,QACA,SACA,SACA,YACA,SACA,UACA,MACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,UACA,UACA,UACA,OACA,SACA,SACA,MACA,QACA,UACA,SACA,WACA,UACA,WACA,UACA,QACA,OACA,SACA,QACA,OACA,WACA,SACA,OACA,SACA,OACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,QACA,UACA,MACA,QACA,SACA,QACA,SACA,UACA,UACA,WACA,QACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,MACA,QACA,SACA,SACA,QACA,OACA,OACA,QACA,WACA,SACA,MACA,QACA,SACA,QACA,SACA,SACA,MACA,WACA,WACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,SACA,OACA,UACA,SACA,WACA,UACA,UACA,OACA,SACA,SACA,UACA,SACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,SACA,SACA,MACA,SACA,QACA,QACA,QACA,SACA,OACA,WACA,YACA,YACA,UACA,SACA,MACA,QACA,UACA,SACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,UACA,SACA,SACA,SACA,WACA,QACA,UACA,UACA,SACA,QACA,SACA,WACA,OACA,QACA,QACA,QACA,UACA,WACA,WACA,SACA,QACA,SACA,WACA,SACA,SACA,WACA,WACA,OACA,OACA,OACA,SACA,UACA,WACA,SACA,WACA,WACA,OACA,QACA,QACA,SACA,UACA,SACA,SACA,QACA,OACA,SACA,SACA,OACA,SACA,QACA,UACA,SACA,aACA,UACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,aACA,OACA,QACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,WACA,WACA,YACA,SACA,UACA,UACA,QACA,QACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,SACA,YACA,UACA,UACA,OACA,UACA,UACA,SACA,SACA,OACA,QACA,YACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA;;AC/7FA,OAAA,QAAA,CACA,SACA,YACA,UACA,QACA,aACA,WACA,YACA,YACA,OACA,YACA,YACA,SACA,aACA,UACA,UACA,aACA,SACA,YACA,OACA,QACA,WACA,QACA,SACA,SACA,YACA,SACA,SACA,OACA,QACA,QACA,WACA,YACA,WACA,UACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,WACA,QACA,QACA,WACA,QACA,QACA,UACA,SACA,QACA,cACA,SACA,QACA,QACA,YACA,UACA,SACA,aACA,SACA,SACA,WACA,eACA,OACA,UACA,UACA,OACA,WACA,SACA,YACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,cACA,YACA,WACA,OACA,UACA,SACA,OACA,YACA,QACA,SACA,UACA,UACA,UACA,QACA,YACA,WACA,WACA,SACA,UACA,QACA,UACA,SACA,QACA,UACA,QACA,WACA,SACA,SACA,QACA,QACA,UACA,MACA,SACA,QACA,OACA,QACA,SACA,UACA,QACA,WACA,UACA,UACA,OACA,UACA,UACA,UACA,SACA,WACA,UACA,YACA,SACA,UACA,UACA,WACA,WACA,UACA,QACA,SACA,QACA,QACA,cACA,YACA,SACA,YACA,aACA,YACA,UACA,OACA,UACA,UACA,OACA,QACA,YACA,SACA,SACA,OACA,OACA,SACA,SACA,SACA,WACA,SACA,QACA,QACA,SACA,YACA,UACA,cACA,SACA,SACA,UACA,YACA,SACA,SACA,YACA,SACA,QACA,QACA,UACA,QACA,SACA,aACA,SACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,SACA,SACA,WACA,aACA,YACA,OACA,UACA,QACA,QACA,UACA,WACA,QACA,WACA,UACA,UACA,UACA,SACA,UACA,YACA,UACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,SACA,OACA,UACA,QACA,SACA,aACA,OACA,UACA,QACA,UACA,UACA,OACA,WACA,MACA,QACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,UACA,UACA,QACA,OACA,UACA,YACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,QACA,QACA,WACA,OACA,WACA,SACA,SACA,UACA,OACA,WACA,YACA,WACA,QACA,aACA,WACA,SACA,OACA,QACA,QACA,YACA,SACA,QACA,SACA,UACA,aACA,YACA,UACA,WACA,aACA,WACA,QACA,OACA,SACA,QACA,WACA,OACA,OACA,UACA,QACA,QACA,aACA,WACA,OACA,UACA,SACA,UACA,SACA,SACA,QACA,UACA,SACA,WACA,WACA,QACA,cACA,YACA,WACA,SACA,UACA,QACA,UACA,QACA,WACA,WACA,MACA,QACA,UACA,UACA,UACA,QACA,WACA,SACA,SACA,eACA,UACA,UACA,SACA,YACA,WACA,QACA,WACA,WACA,QACA,UACA,UACA,OACA,QACA,MACA,SACA,UACA,WACA,SACA,UACA,SACA,SACA,WACA,OACA,SACA,UACA,QACA,UACA,YACA,SACA,QACA,UACA,YACA,OACA,YACA,OACA,UACA,gBACA,aACA,QACA,SACA,aACA,OACA,UACA,cACA,QACA,SACA,UACA,WACA,cACA,WACA,WACA,WACA,WACA,UACA,UACA,YACA,SACA,aACA,YACA,WACA,UACA,SACA,UACA,WACA,SACA,WACA,UACA,UACA,QACA,SACA,QACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,QACA,UACA,aACA,SACA,cACA,UACA,UACA,UACA,UACA,aACA,QACA,QACA,QACA,WACA,UACA,OACA,SACA,QACA,MACA,UACA,WACA,UACA,QACA,WACA,SACA,UACA,QACA,aACA,OACA,UACA,MACA,YACA,UACA,SACA,QACA,SACA,OACA,SACA,UACA,QACA,SACA,UACA,WACA,QACA,OACA,QACA,UACA,YACA,YACA,OACA,aACA,SACA,UACA,aACA,SACA,SACA,UACA,OACA,OACA,QACA,UACA,SACA,QACA,OACA,QACA,UACA,SACA,UACA,QACA;;ACzdA,OAAA,QAAA,CACA,UACA,2BACA,iCACA,iCACA,MACA,iBACA,gBACA,eACA,kBACA,iBACA,6BACA,mCACA,mCACA,MACA,MACA,aACA,SACA,WACA,cACA,oBACA,QACA,UACA,YACA,aACA,cACA,WACA,MACA,aACA,WACA,UACA,YACA,YACA,mBACA,iBACA,gBACA,kBACA,iBACA,MACA,eACA,uBACA,qBACA,iBACA,cACA,WACA,iBACA,MACA,UACA,WACA,aACA,QACA,YACA,QACA,eACA,aACA,YACA,eACA,eACA,aACA,YACA,eACA,cACA,aACA,oBACA,kBACA,iBACA,oBACA,mBACA,qBACA,qBACA,iBACA;;ACvEA,OAAA,QAAA,CACA,MACA,OACA,MACA,OACA;;ACLA,OAAA,QAAA,CACA,MACA,MACA,IACA,KACA,MACA,KACA,IACA,KACA,MACA,MACA;;ACXA,OAAA,QAAA,CACA,WAAA,CACA,OACA,SACA,SACA,YACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,UACA,gBACA,SACA,UACA,WACA,QACA,QACA,aAEA,MAAA,CACA,YACA,UACA,QACA,WACA,WACA,YACA,aACA,iBACA,cACA,gBACA,WACA,WACA,UACA,WACA,UACA,QACA,WACA,eACA,eACA,aACA,iBACA,WACA,iBACA,MACA,WACA,UACA,YACA,WACA,WACA,OACA,WACA,gBACA,iBACA,eACA,UACA,YACA,WAEA,IAAA,CACA,aACA,YACA,YACA,UACA,UACA,UACA,WACA,aACA,WACA,cACA,gBACA,YACA,UACA,WACA,UACA,eACA,aACA,YACA,WACA,aACA,YACA,cACA,QACA,iBACA;;ACzFA,OAAA,QAAA,CACA,uCACA,uCACA,6BACA,6BACA,kCACA;;ACNA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,gBAAA,QAAA,qBACA,EAAA,kBAAA,QAAA,uBACA,EAAA,WAAA,QAAA,gBACA,EAAA,UAAA,QAAA,eACA,EAAA,OAAA,QAAA,YACA,EAAA,OAAA,QAAA,YACA,EAAA,OAAA,QAAA,YACA,EAAA,MAAA,QAAA,WACA,EAAA,KAAA,QAAA;;ACVA,OAAA,QAAA,CACA,eACA,iBACA,iBACA,eACA,eACA,iBACA,iBACA,eACA,oBACA,sBACA,sBACA,oBACA,qBACA,uBACA,uBACA,qBACA,sBACA,wBACA,wBACA;;ACpBA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,QAAA,QAAA;;ACFA,OAAA,QAAA,CACA,eACA,iBACA,iBACA;;ACJA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,QAAA,QAAA;;ACFA,OAAA,QAAA,CACA,sBACA,sBACA,sBACA;;ACJA,OAAA,QAAA,CACA,aACA,aACA,aACA;;ACJA,OAAA,QAAA,CACA,OACA,aACA,kBACA;;ACJA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,oBAAA,QAAA,yBACA,EAAA,yBAAA,QAAA,8BACA,EAAA,kBAAA,QAAA;;ACJA,OAAA,QAAA,CACA,MACA,QACA,OACA,SACA,SACA,aACA,OACA,QACA,QACA,SACA,OACA,OACA,SACA,SACA,YACA,MACA,WACA,SACA,OACA,SACA,QACA,UACA,OACA,QACA,SACA,OACA,UACA,OACA,QACA,WACA;;AC/BA,OAAA,QAAA,CACA,QACA,SACA,QACA,QACA,cACA,YACA,OACA,SACA,QACA,UACA,SACA,SACA,OACA,OACA,OACA,WACA,QACA,WACA,SACA,WACA,aACA;;ACtBA,OAAA,QAAA,CACA,UAAA,CACA,QACA,YACA,SACA,cACA,WACA,aACA,YACA,YACA,QACA,UACA,UACA,cACA,WACA,WACA,UACA,YACA,SAEA,SAAA,CACA,QACA,SACA,WACA,UACA,SACA,UACA,SACA,QACA,OACA,QACA,UAEA,QAAA,CACA,QACA,MACA,WACA,WACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,MACA,SACA,OACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,WACA;;ACzDA,OAAA,QAAA,CACA,6HACA,oJACA,wHACA,2IACA,2HACA,4HACA,8DACA,8EACA,6GACA,oHACA,uIACA;;ACZA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,QAAA,WACA,EAAA,WAAA,QAAA,gBACA,EAAA,aAAA,QAAA,kBACA,EAAA,oBAAA,QAAA;;ACLA,OAAA,QAAA,CACA,OACA,OACA,QACA,OACA,QACA,UACA,OACA,WACA,SACA,OACA,WACA,QACA,YACA,SACA,QACA,QACA,QACA,QACA,SACA,YACA,QACA,UACA,OACA,OACA,WACA,SACA,OACA,UACA,QACA,SACA,SACA,SACA,SACA,WACA,QACA,aACA,WACA,SACA,eACA,UACA,UACA,QACA,aACA,YACA,OACA,OACA,SACA,SACA,UACA,SACA,WACA,eACA,UACA,QACA,UACA,WACA,YACA,UACA,UACA,WACA,WACA,SACA,aACA,UACA,aACA,UACA;;ACnEA,OAAA,QAAA,CACA;;ACDA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,SAAA,QAAA,cACA,EAAA,KAAA,QAAA;;ACHA,OAAA,QAAA,CACA,MACA,OACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,KACA,OACA,OACA,MACA;;AC7BA,OAAA,QAAA,CACA,YACA,UACA,WACA,UACA,cACA,UACA,iBACA,YACA,SACA,SACA,aACA,YACA,WACA,QACA,SACA,UACA,cACA;;AClBA,OAAA,QAAA,CACA,SACA,WACA,YACA,QACA,YACA,UACA,OACA,OACA,QACA,YACA,SACA,SACA,WACA,aACA,QACA,QACA,OACA,UACA,cACA,cACA,MACA,UACA,YACA;;ACxBA,OAAA,QAAA,CACA,UACA,SACA,OACA,WACA,WACA,OACA,WACA,QACA,UACA,WACA,WACA,YACA,aACA,QACA,WACA,UACA,SACA;;AClBA,OAAA,QAAA,CACA,aACA,YACA,UACA,aACA,cACA,UACA,aACA,WACA,aACA,aACA,cACA,cACA,eACA,eACA,cACA;;AChBA,OAAA,QAAA,CACA,gIACA,mEACA,oGACA,mGACA,qGACA,+HACA,+GACA;;ACRA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,aAAA,QAAA,kBACA,EAAA,UAAA,QAAA,eACA,EAAA,KAAA,QAAA,UACA,EAAA,KAAA,QAAA,UACA,EAAA,QAAA,QAAA,aACA,EAAA,OAAA,QAAA;;ACPA,OAAA,QAAA,CACA,UACA,WACA,aACA,SACA,SACA,YACA,cACA,cACA,QACA,WACA,aACA,SACA,aACA,SACA,WACA,OACA,UACA,OACA,SACA,QACA,OACA,MACA,cACA,MACA,KACA,WACA,QACA,UACA,UACA,QACA,SACA,YACA,WACA,YACA,WACA,SACA,UACA,SACA,cACA,YACA,SACA,WACA,WACA,UACA,UACA,UACA,WACA,OACA,SACA,WACA,OACA,UACA,SACA,aACA,UACA,SACA,QACA,SACA,YACA,SACA,SACA;;AC9DA,OAAA,QAAA,CACA,QACA,OACA,OACA,MACA;;ACLA,OAAA,QAAA,CACA,eACA;;ACFA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,KAAA,QAAA,UACA,EAAA,QAAA,QAAA,aACA,EAAA,OAAA,QAAA;;ACJA,OAAA,QAAA,CACA,WACA,UACA,eACA,aACA,YACA,cACA,YACA;;ACRA,OAAA,QAAA,CACA,UACA,aACA,UACA;;ACJA,OAAA,QAAA,CACA,aAAA,CACA,KAAA,MACA,OAAA,IAEA,QAAA,CACA,KAAA,MACA,OAAA,KAEA,IAAA,CACA,KAAA,MACA,OAAA,OAEA,gBAAA,CACA,KAAA,MACA,OAAA,IAEA,gCAAA,CACA,KAAA,MACA,OAAA,KAEA,OAAA,CACA,KAAA,MACA,OAAA,IAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,oBAAA,CACA,KAAA,MACA,OAAA,KAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,sBAAA,CACA,KAAA,MACA,OAAA,OAEA,oBAAA,CACA,KAAA,MACA,OAAA,MAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,gBAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,gBAAA,CACA,KAAA,MACA,OAAA,IAEA,yDAAA,CACA,KAAA,MACA,OAAA,KAEA,gBAAA,CACA,KAAA,MACA,OAAA,KAEA,sBAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,MAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,KAAA,CACA,KAAA,MACA,OAAA,KAEA,oBAAA,CACA,KAAA,MACA,OAAA,MAEA,gBAAA,CACA,KAAA,MACA,OAAA,OAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,kBAAA,CACA,KAAA,MACA,OAAA,IAEA,cAAA,CACA,KAAA,MACA,OAAA,OAEA,eAAA,CACA,KAAA,MACA,OAAA,KAEA,gBAAA,CACA,KAAA,MACA,OAAA,KAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,oBAAA,CACA,KAAA,MACA,OAAA,KAEA,aAAA,CACA,KAAA,MACA,OAAA,KAEA,yBAAA,CACA,KAAA,MACA,OAAA,KAEA,oBAAA,CACA,KAAA,MACA,OAAA,IAEA,eAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,eAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,OAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,MAAA,CACA,KAAA,MACA,OAAA,IAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,MAAA,CACA,KAAA,MACA,OAAA,IAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,KAAA,CACA,KAAA,MACA,OAAA,KAEA,cAAA,CACA,KAAA,MACA,OAAA,KAEA,yBAAA,CACA,KAAA,MACA,OAAA,KAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,OAAA,CACA,KAAA,MACA,OAAA,IAEA,eAAA,CACA,KAAA,MACA,OAAA,IAEA,QAAA,CACA,KAAA,MACA,OAAA,KAEA,gBAAA,CACA,KAAA,MACA,OAAA,KAEA,mBAAA,CACA,KAAA,MACA,OAAA,KAEA,QAAA,CACA,KAAA,MACA,OAAA,KAEA,gBAAA,CACA,KAAA,MACA,OAAA,MAEA,OAAA,CACA,KAAA,MACA,OAAA,IAEA,OAAA,CACA,KAAA,MACA,OAAA,MAEA,OAAA,CACA,KAAA,MACA,OAAA,MAEA,qBAAA,CACA,KAAA,MACA,OAAA,KAEA,eAAA,CACA,KAAA,MACA,OAAA,IAEA,qBAAA,CACA,KAAA,MACA,OAAA,MAEA,eAAA,CACA,KAAA,MACA,OAAA,KAEA,cAAA,CACA,KAAA,MACA,OAAA,IAEA,eAAA,CACA,KAAA,MACA,OAAA,KAEA,gBAAA,CACA,KAAA,MACA,OAAA,MAEA,kBAAA,CACA,KAAA,MACA,OAAA,MAEA,kBAAA,CACA,KAAA,MACA,OAAA,IAEA,IAAA,CACA,KAAA,MACA,OAAA,KAEA,kBAAA,CACA,KAAA,MACA,OAAA,IAEA,IAAA,CACA,KAAA,MACA,OAAA,MAEA,KAAA,CACA,KAAA,MACA,OAAA,KAEA,eAAA,CACA,KAAA,MACA,OAAA,IAEA,mBAAA,CACA,KAAA,MACA,OAAA,KAEA,IAAA,CACA,KAAA,MACA,OAAA,KAEA,gBAAA,CACA,KAAA,MACA,OAAA,IAEA,wBAAA,CACA,KAAA,MACA,OAAA,KAEA,MAAA,CACA,KAAA,MACA,OAAA,MAEA,IAAA,CACA,KAAA,MACA,OAAA,KAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,mBAAA,CACA,KAAA,MACA,OAAA,MAEA,eAAA,CACA,KAAA,MACA,OAAA,MAEA,eAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA,IAEA,eAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA,IAEA,MAAA,CACA,KAAA,MACA,OAAA,OAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,OAAA,CACA,KAAA,MACA,OAAA,KAEA,OAAA,CACA,KAAA,MACA,OAAA,IAEA,QAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,QAAA,CACA,KAAA,MACA,OAAA,IAEA,OAAA,CACA,KAAA,MACA,OAAA,IAEA,eAAA,CACA,KAAA,MACA,OAAA,KAEA,oBAAA,CACA,KAAA,MACA,OAAA,MAEA,QAAA,CACA,KAAA,MACA,OAAA,MAEA,MAAA,CACA,KAAA,MACA,OAAA,KAEA,cAAA,CACA,KAAA,MACA,OAAA,MAEA,kBAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,qBAAA,CACA,KAAA,MACA,OAAA,KAEA,aAAA,CACA,KAAA,MACA,OAAA,KAEA,OAAA,CACA,KAAA,MACA,OAAA,OAEA,YAAA,CACA,KAAA,MACA,OAAA,OAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA,OAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,MAAA,CACA,KAAA,MACA,OAAA,MAEA,QAAA,CACA,KAAA,MACA,OAAA,MAEA,cAAA,CACA,KAAA,MACA,OAAA,KAEA,UAAA,CACA,KAAA,MACA,OAAA,OAEA,gBAAA,CACA,KAAA,MACA,OAAA,QAEA,gBAAA,CACA,KAAA,MACA,OAAA,OAEA,eAAA,CACA,KAAA,MACA,OAAA,IAEA,cAAA,CACA,KAAA,MACA,OAAA,KAEA,yBAAA,CACA,KAAA,MACA,OAAA,KAEA,mBAAA,CACA,KAAA,MACA,OAAA,KAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,gBAAA,CACA,KAAA,MACA,OAAA,MAEA,mBAAA,CACA,KAAA,MACA,OAAA,KAEA,qBAAA,CACA,KAAA,MACA,OAAA,KAEA,MAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA,KAEA,iBAAA,CACA,KAAA,MACA,OAAA,KAEA,MAAA,CACA,KAAA,MACA,OAAA,MAEA,oBAAA,CACA,KAAA,MACA,OAAA,KAEA,eAAA,CACA,KAAA,MACA,OAAA,KAEA,UAAA,CACA,KAAA,MACA,OAAA,IAEA,KAAA,CACA,KAAA,MACA,OAAA,KAEA,OAAA,CACA,KAAA,MACA,OAAA,IAEA,MAAA,CACA,KAAA,MACA,OAAA,IAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,UAAA,CACA,KAAA,MACA,OAAA,IAEA,eAAA,CACA,KAAA,MACA,OAAA,KAEA,6BAAA,CACA,KAAA,MACA,OAAA,OAEA,oBAAA,CACA,KAAA,MACA,OAAA,OAEA,qBAAA,CACA,KAAA,MACA,OAAA,IAEA,QAAA,CACA,KAAA,MACA,OAAA,KAEA,kBAAA,CACA,KAAA,MACA,OAAA,IAEA,YAAA,CACA,KAAA,MACA,OAAA,KAEA,gBAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,MAEA,KAAA,CACA,KAAA,MACA,OAAA,KAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,OAAA,CACA,KAAA,MACA,OAAA,IAEA,KAAA,CACA,KAAA,MACA,OAAA,IAEA,qDAAA,CACA,KAAA,MACA,OAAA,IAEA,oCAAA,CACA,KAAA,MACA,OAAA,IAEA,uCAAA,CACA,KAAA,MACA,OAAA,IAEA,yCAAA,CACA,KAAA,MACA,OAAA,IAEA,wBAAA,CACA,KAAA,MACA,OAAA,KAEA,IAAA,CACA,KAAA,MACA,OAAA,IAEA,YAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA,IAEA,UAAA,CACA,KAAA,MACA,OAAA,IAEA,YAAA,CACA,KAAA,MACA,OAAA,IAEA,SAAA,CACA,KAAA,MACA,OAAA,IAEA,mDAAA,CACA,KAAA,MACA,OAAA,IAEA,cAAA,CACA,KAAA,MACA,OAAA,KAEA,KAAA,CACA,KAAA,MACA,OAAA,KAEA,eAAA,CACA,KAAA,MACA,OAAA,IAEA,iBAAA,CACA,KAAA,MACA,OAAA,MAEA,iBAAA,CACA,KAAA,MACA,OAAA,IAEA,kBAAA,CACA,KAAA,MACA,OAAA;;AC3qBA,OAAA,QAAA,CACA,gBACA;;ACFA,OAAA,QAAA,CACA,0BACA;;ACFA,OAAA,QAAA,CACA,sBACA,sBACA,0BACA,2BACA,2BACA;;ACNA,OAAA,QAAA,CACA,oBACA;;ACFA,OAAA,QAAA,CACA,uBACA,mBACA;;ACHA,OAAA,QAAA,CACA,sBACA,sBACA;;ACHA,OAAA,QAAA,CACA,sBACA,yBACA;;ACHA,OAAA,QAAA,CACA,sBACA,yBACA;;ACHA,OAAA,QAAA,CACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,0BACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA;;ACdA,OAAA,QAAA,CACA,mBACA,mBACA,mBACA,mBACA,sBACA,sBACA,sBACA;;ACRA,OAAA,QAAA,CACA;;ACDA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,KAAA,QAAA,UACA,EAAA,WAAA,QAAA,gBACA,EAAA,SAAA,QAAA,cACA,EAAA,iBAAA,QAAA,sBACA,EAAA,YAAA,QAAA,iBACA,EAAA,IAAA,QAAA,SACA,EAAA,OAAA,QAAA,YACA,EAAA,KAAA,QAAA,UACA,EAAA,QAAA,QAAA,aACA,EAAA,MAAA,QAAA,WACA,EAAA,aAAA,QAAA;;ACZA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,aAAA,QAAA,kBACA,EAAA,iBAAA,QAAA,sBACA,EAAA,SAAA,QAAA,cACA,EAAA,YAAA,QAAA;;ACJA,OAAA,QAAA,CACA,KAAA,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAIA,aAAA,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEA,KAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAIA,aAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA;;AC3DA,OAAA,QAAA,CACA,KAAA,CACA,SACA,SACA,UACA,YACA,WACA,SACA,YAIA,aAAA,CACA,SACA,SACA,UACA,YACA,WACA,SACA,YAEA,KAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,OAIA,aAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA;;ACxCA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,QAAA,WACA,EAAA,QAAA,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,SACA,WAAA,CAAA,QAEA,iBAAA,CACA,OAAA,SACA,WAAA,CAAA,QAEA,kBAAA,CACA,OAAA,SACA,WAAA,CAAA,QAEA,oBAAA,CACA,OAAA,SACA,WAAA,CAAA,UAEA,cAAA,CACA,OAAA,SACA,WAAA,CAAA,QAEA,0BAAA,CACA,OAAA,SACA,WAAA,CAAA,QAEA,sBAAA,CACA,cAAA,GAEA,oBAAA,CACA,cAAA;;ACl7MA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,eAAA,QAAA,oBACA,EAAA,UAAA,QAAA;;ACHA,OAAA,QAAA,CACA,eACA,OACA,UACA,MACA,UACA,WACA,YACA,WACA,QACA,UACA,OACA,OACA,QACA,UACA,SACA,OACA,MACA,cACA,aACA,WACA,QACA,gBACA,OACA,SACA,WACA,UACA,cACA,QACA,QACA,SACA,aACA;;AChCA,OAAA,QAAA,CACA,SACA,QACA,SACA,UACA,WACA,aACA,QACA,UACA,WACA,OACA,QACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,MACA,MACA,MACA,WACA,SACA,UACA,UACA,aACA,aACA,UACA,gBACA,WACA,iBACA,WACA,UACA,UACA,QACA,QACA,eACA,SACA,QACA,UACA,SACA,SACA,KACA,KACA,SACA,QACA,OACA,MACA,SACA,WACA,aACA,YACA,IACA,IACA,SACA,MACA,OACA;;AC1DA,OAAA,QAAA,CACA,YACA,cACA,QACA,kBACA,sBACA,YACA,UACA,gBACA,MACA,QACA;;ACXA,OAAA,QAAA,CACA,SACA,WACA,WACA;;ACJA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,aAAA,QAAA,kBACA,EAAA,MAAA,QAAA,WACA,EAAA,KAAA,QAAA,kBACA,EAAA,KAAA,QAAA;;ACLA,OAAA,QAAA,CACA,OACA,QACA,MACA,aACA,OACA,QACA,UACA,OACA,OACA,OACA,UACA,YACA,QACA,SACA,mBACA,QACA,YACA;;AClBA,IAAA,EAAA,GACA,OAAA,QAAA,EACA,EAAA,MAAA,QAAA;;ACFA,IAAA,EAAA,GACA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","file":"main.8df7e1c6.js","sourceRoot":"..","sourcesContent":["import { CITIES_DATA } from '../../common/cities';\n\nimport { StateCode, StateName, getStates } from '../states';\n\nconst sortAlphabetically = (cityA: string, cityB: string) => cityA.localeCompare(cityB);\n\nexport function getCities(state?: StateName | StateCode): string[] {\n  if (state) {\n    const states = getStates();\n\n    const foundState = states.find(({ name, code }) => name === state || code === state);\n\n    if (!foundState) {\n      return [];\n    }\n\n    return CITIES_DATA[foundState.code].sort(sortAlphabetically);\n  }\n\n  return Object.values(CITIES_DATA)\n    .reduce((acc, city) => acc.concat(city), [])\n    .sort(sortAlphabetically);\n}\n","export function isLastChar(index: number, input: string): boolean {\n  return index === input.length - 1;\n}\n","export function onlyNumbers(input: string | number): string {\n  return String(input).replace(/[^\\d]/g, '');\n}\n","import { onlyNumbers } from '../only-numbers';\n\nexport function generateChecksum(base: string | number, weight: number | number[]): number {\n  const digits = onlyNumbers(base);\n\n  const weights =\n    typeof weight === 'number'\n      ? Array(digits.length)\n          .fill(0)\n          .map((_, i) => weight - i)\n      : weight;\n\n  return digits.split('').reduce((acc, digit, i) => acc + parseInt(digit, 10) * weights[i], 0);\n}\n","export function generateRandomNumber(length: number): string {\n  return Array(length)\n    .fill(1)\n    .reduce((acc, number) => `${acc}${Math.random().toString().substr(2, number)}`, '');\n}\n","export const STATES_DATA = {\n  AC: {\n    code: '2',\n    areaCodes: [68],\n    ieLength: 13,\n    name: 'Acre',\n  },\n  AL: {\n    code: '4',\n    areaCodes: [82],\n    ieLength: 9,\n    name: 'Alagoas',\n  },\n  AP: {\n    code: '2',\n    areaCodes: [96],\n    ieLength: 9,\n    name: 'Amapá',\n  },\n  AM: {\n    code: '2',\n    areaCodes: [92, 97],\n    ieLength: 9,\n    name: 'Amazonas',\n  },\n  BA: {\n    code: '5',\n    areaCodes: [71, 73, 74, 75, 77],\n    ieLength: [8, 9],\n    name: 'Bahia',\n  },\n  CE: {\n    code: '3',\n    areaCodes: [85, 88],\n    ieLength: 9,\n    name: 'Ceará',\n  },\n  DF: {\n    code: '1',\n    areaCodes: [61],\n    ieLength: 13,\n    name: 'Distrito Federal',\n  },\n  ES: {\n    code: '7',\n    areaCodes: [27, 28],\n    ieLength: 9,\n    name: 'Espírito Santo',\n  },\n  GO: {\n    code: '1',\n    areaCodes: [62, 64],\n    ieLength: 9,\n    name: 'Goiás',\n  },\n  MA: {\n    code: '3',\n    areaCodes: [98, 99],\n    ieLength: 9,\n    name: 'Maranhão',\n  },\n  MG: {\n    code: '6',\n    areaCodes: [31, 32, 33, 34, 35, 37, 38],\n    ieLength: 13,\n    name: 'Minas Gerais',\n  },\n  MT: {\n    code: '1',\n    areaCodes: [65, 66],\n    ieLength: 11,\n    name: 'Mato Grosso',\n  },\n  MS: {\n    code: '1',\n    areaCodes: [67],\n    ieLength: 9,\n    name: 'Mato Grosso do Sul',\n  },\n  PA: {\n    code: '2',\n    areaCodes: [91, 93, 94],\n    ieLength: 9,\n    name: 'Pará',\n  },\n  PB: {\n    code: '4',\n    areaCodes: [83],\n    ieLength: 9,\n    name: 'Paraíba',\n  },\n  PE: {\n    code: '4',\n    areaCodes: [81, 87],\n    ieLength: 9,\n    name: 'Pernambuco',\n  },\n  PI: {\n    code: '3',\n    areaCodes: [86, 89],\n    ieLength: 9,\n    name: 'Piauí',\n  },\n  PR: {\n    code: '9',\n    areaCodes: [41, 42, 43, 44, 45, 46],\n    ieLength: 10,\n    name: 'Paraná',\n  },\n  RJ: {\n    code: '7',\n    areaCodes: [21, 22, 24],\n    ieLength: 8,\n    name: 'Rio de Janeiro',\n  },\n  RN: {\n    code: '4',\n    areaCodes: [84],\n    ieLength: [9, 10],\n    name: 'Rio Grande do Norte',\n  },\n  RO: {\n    code: '2',\n    areaCodes: [69],\n    ieLength: 14,\n    name: 'Rondônia',\n  },\n  RS: {\n    code: '0',\n    areaCodes: [51, 53, 54, 55],\n    ieLength: 10,\n    name: 'Rio Grande do Sul',\n  },\n  RR: {\n    code: '2',\n    areaCodes: [95],\n    ieLength: 9,\n    name: 'Roraima',\n  },\n  SC: {\n    code: '9',\n    areaCodes: [47, 48, 49],\n    ieLength: 9,\n    name: 'Santa Catarina',\n  },\n  SE: {\n    code: '5',\n    areaCodes: [79],\n    ieLength: 9,\n    name: 'Sergipe',\n  },\n  SP: {\n    code: '8',\n    areaCodes: [11, 12, 13, 14, 15, 16, 17, 18, 19],\n    ieLength: 12,\n    name: 'São Paulo',\n  },\n  TO: {\n    code: '1',\n    areaCodes: [63],\n    ieLength: [9, 11],\n    name: 'Tocantins',\n  },\n};\n\nexport type State = keyof typeof STATES_DATA;\n\nexport type StateCode = State;\n\nexport type StateName =\n  | 'Acre'\n  | 'Alagoas'\n  | 'Amapá'\n  | 'Amazonas'\n  | 'Bahia'\n  | 'Ceará'\n  | 'Distrito Federal'\n  | 'Espírito Santo'\n  | 'Goiás'\n  | 'Maranhão'\n  | 'Minas Gerais'\n  | 'Mato Grosso'\n  | 'Mato Grosso do Sul'\n  | 'Pará'\n  | 'Paraíba'\n  | 'Pernambuco'\n  | 'Piauí'\n  | 'Paraná'\n  | 'Rio de Janeiro'\n  | 'Rio Grande do Norte'\n  | 'Rondônia'\n  | 'Rio Grande do Sul'\n  | 'Roraima'\n  | 'Santa Catarina'\n  | 'Sergipe'\n  | 'São Paulo'\n  | 'Tocantins';\n\nexport const STATES = Object.keys(STATES_DATA) as State[];\n","export abstract class Validator {\n  public isValid(ie: string): boolean {\n    return this.checkLength(ie) && this.itStartsWith(ie) && this.calcIe(ie);\n  }\n\n  protected abstract checkLength(ie: string): boolean;\n\n  protected abstract itStartsWith(ie: string): boolean;\n\n  protected abstract calcIe(ie: string): boolean;\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class AC extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.AC.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '01';\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigits(ie);\n  }\n\n  private calcDigits(inscricaoEstadual: string): boolean {\n    const length = inscricaoEstadual.length;\n    const body = inscricaoEstadual.substr(0, length - 2);\n    const fDig = this.calcDigit(body);\n    const sDig = this.calcDigit(body + fDig.toString());\n    const pos2dig = inscricaoEstadual.length - 1;\n    const pos1dig = inscricaoEstadual.length - 2;\n    return parseInt(inscricaoEstadual[pos1dig], 10) === fDig && parseInt(inscricaoEstadual[pos2dig], 10) === sDig;\n  }\n\n  private calcDigit(body: string): number {\n    let weight = body.length - 7;\n    let sum = 0;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 9;\n      }\n    });\n    const mod = 11;\n    const rest = sum % mod;\n    let dig = mod - rest;\n    if (dig >= 10) {\n      dig = 0;\n    }\n    return dig;\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class AL extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.AL.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '24';\n  }\n  protected calcIe(ie: string): boolean {\n    return this.digitCalc(ie);\n  }\n\n  private digitCalc(ie: string) {\n    let weight = 9;\n    const position = 8;\n    let sum = 0;\n    for (let i = 0; i < position; i++) {\n      sum += parseInt(ie.charAt(i), 10) * weight;\n      weight--;\n    }\n    const product = sum * 10;\n    let digit = product - Math.floor(product / 11) * 11;\n    if (digit >= 10) {\n      digit = 0;\n    }\n    return digit === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class AP extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.AP.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '03';\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  protected calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = length;\n    const body = ie.substr(0, position);\n    const bodyInt = parseInt(body, 10);\n    let p = 0;\n    let d = 0;\n\n    if (3000001 <= bodyInt && bodyInt <= 3017000) {\n      p = 5;\n      d = 0;\n    } else if (bodyInt >= 3017001 && bodyInt <= 3019022) {\n      p = 9;\n      d = 1;\n    }\n\n    let sum = p;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n    let dig = 11 - (sum % 11);\n    if (dig === 10) {\n      dig = 0;\n    }\n\n    if (dig === 11) {\n      dig = d;\n    }\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class AM extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.AM.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  protected calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = length;\n    const body = ie.substr(0, position);\n    let sum = 0;\n    let dig = 0;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n    if (sum < 11) {\n      dig = 11 - sum;\n    } else {\n      const rest = sum % 11;\n      dig = 11 - rest;\n      if (dig >= 10) {\n        dig = 0;\n      }\n    }\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class BA extends Validator {\n  protected checkLength(ie: string): boolean {\n    return STATES_DATA.BA.ieLength.includes(ie.length);\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigits(ie);\n  }\n\n  private calcDigits(ie: string): boolean {\n    const length = ie.length;\n    const body = ie.substr(0, length - 2);\n    const mod = this.getModule(ie);\n    const secondDig = this.calcDigit(body, mod);\n    const firstDig = this.calcDigit(body + secondDig, mod);\n\n    const posSecondDig = length - 1;\n    const posFirstDig = length - 2;\n    const ieAtFirstPos = parseInt(ie.charAt(posFirstDig), 10);\n    const ieAtSecondPos = parseInt(ie.charAt(posSecondDig), 10);\n\n    return ieAtFirstPos === firstDig && ieAtSecondPos === secondDig;\n  }\n\n  private getModule(ie: String): number {\n    let pos = 0;\n    if (ie.length === 9) {\n      pos = 1;\n    }\n    const charAt = parseInt(ie.substr(pos, 1), 10);\n    const arr = [0, 1, 2, 3, 4, 5, 8];\n    if (arr.indexOf(charAt) >= 0) {\n      return 10;\n    }\n    return 11;\n  }\n\n  private calcDigit(body: string, mod: number): number {\n    let weight = body.length + 1;\n    let sum = 0;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n    const rest = sum % mod;\n    let dig = mod - rest;\n    if (dig >= 10) {\n      dig = 0;\n    }\n    return dig;\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class CE extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.CE.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  protected calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = length;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n    if (dig >= 10) {\n      dig = 0;\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class DF extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.DF.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '07';\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigits(ie);\n  }\n\n  private calcDigits(ie: string): boolean {\n    const length = ie.length;\n    const body = ie.substr(0, length - 2);\n\n    const firstDig = this.calcDigit(body);\n    const secondDig = this.calcDigit(body + firstDig);\n\n    const posSecondDig = length - 1;\n    const posFirstDig = length - 2;\n\n    const ieAtFirstPos = parseInt(ie.charAt(posFirstDig), 10);\n    const ieAtSecondPos = parseInt(ie.charAt(posSecondDig), 10);\n\n    return ieAtFirstPos === firstDig && ieAtSecondPos === secondDig;\n  }\n\n  private calcDigit(body: string): number {\n    let weight = body.length - 7;\n    let sum = 0;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 9;\n      }\n    });\n\n    const mod = 11;\n    const rest = sum % mod;\n    let dig = mod - rest;\n    if (dig >= 10) {\n      dig = 0;\n    }\n    return dig;\n  }\n}\n","import { CE } from './ce';\n\nexport class ES extends CE {}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class GO extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.GO.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    const beginWith = ['10', '11', '12'];\n    const begin = ie.substr(0, 2);\n    return beginWith.indexOf(begin) >= 0;\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = length;\n    const body = ie.substr(0, position);\n    const bodyInt = parseInt(body, 10);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n\n    if (dig >= 10) {\n      if (dig === 11 && 10103105 <= bodyInt && bodyInt <= 10119997) {\n        dig = 1;\n      } else {\n        dig = 0;\n      }\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { CE } from './ce';\n\nexport class MA extends CE {\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '12';\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class MT extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.MT.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = 3;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 9;\n      }\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n\n    if (dig >= 10) {\n      dig = 0;\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { CE } from './ce';\n\nexport class MS extends CE {\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '28';\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class MG extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.MG.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const posFirstDigit = length - 2;\n    const posSecondDigit = length - 1;\n    const body = ie.substring(0, 11);\n    const firstDigit = this.calcFirstDigit(body);\n    const secondDigit = this.calcSecondDigit(body + firstDigit);\n    const digitAtFirstDigit = parseInt(ie.charAt(posFirstDigit), 10);\n    const digitAtSecondDigit = parseInt(ie.charAt(posSecondDigit), 10);\n\n    return firstDigit === digitAtFirstDigit && secondDigit === digitAtSecondDigit;\n  }\n\n  private calcFirstDigit(ie: string): number {\n    const body = ie.slice(0, 3) + 0 + ie.slice(3);\n    let concat = '';\n    body.split('').forEach((item, index) => {\n      const weight = (index + 3) % 2 === 0 ? 2 : 1;\n      concat += parseInt(item, 10) * weight;\n    });\n    let sum = 0;\n    concat.split('').forEach((item) => {\n      sum += parseInt(item, 10);\n    });\n    const sumString = sum.toString();\n    const length = sumString.length;\n    const lastChar = sumString.substr(length - 1, 1);\n    const lastCharInt = parseInt(lastChar, 10);\n\n    return lastCharInt === 0 ? 0 : 10 - lastCharInt;\n  }\n\n  private calcSecondDigit(body: string): number {\n    let weight = 3;\n    let sum = 0;\n    body.split('').forEach((item) => {\n      sum += parseInt(item, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 11;\n      }\n    });\n    const rest = sum % 11;\n    let digit = 11 - rest;\n    if (digit >= 10) {\n      digit = 0;\n    }\n    return digit;\n  }\n}\n","import { CE } from './ce';\n\nexport class PA extends CE {\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '15';\n  }\n}\n","import { CE } from './ce';\n\nexport class PB extends CE {}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class PR extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.PR.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigits(ie);\n  }\n\n  private calcDigits(ie: string): boolean {\n    const length = ie.length;\n    const body = ie.substr(0, length - 2);\n\n    const firstDig = this.calcDigit(body);\n    const secondDig = this.calcDigit(body + firstDig);\n\n    const posSecondDig = length - 1;\n    const posFirstDig = length - 2;\n\n    const ieAtFirstPos = parseInt(ie.charAt(posFirstDig), 10);\n    const ieAtSecondPos = parseInt(ie.charAt(posSecondDig), 10);\n\n    return ieAtFirstPos === firstDig && ieAtSecondPos === secondDig;\n  }\n\n  private calcDigit(body: string): number {\n    let weight = body.length - 5;\n    let sum = 0;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 7;\n      }\n    });\n\n    const mod = 11;\n    const rest = sum % mod;\n    let dig = mod - rest;\n    if (dig >= 10) {\n      dig = 0;\n    }\n    return dig;\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class PE extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.PE.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n  protected calcIe(ie: string): boolean {\n    return this.calcDigits(ie);\n  }\n\n  private calcDigits(ie: string): boolean {\n    const length = ie.length;\n    const body = ie.substr(0, length - 2);\n\n    const firstDig = this.calcDigit(body);\n    const secondDig = this.calcDigit(body + firstDig);\n\n    const posSecondDig = length - 1;\n    const posFirstDig = length - 2;\n\n    const ieAtFirstPos = parseInt(ie.charAt(posFirstDig), 10);\n    const ieAtSecondPos = parseInt(ie.charAt(posSecondDig), 10);\n\n    return ieAtFirstPos === firstDig && ieAtSecondPos === secondDig;\n  }\n\n  private calcDigit(body: string): number {\n    let weight = body.length + 1;\n    let sum = 0;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n\n    const mod = 11;\n    const rest = sum % mod;\n    let dig = mod - rest;\n    if (dig >= 10) {\n      dig = 0;\n    }\n    return dig;\n  }\n}\n","import { CE } from './ce';\n\nexport class PI extends CE {}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class RJ extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.RJ.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = 2;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 7;\n      }\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n\n    if (dig >= 10) {\n      dig = 0;\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class RN extends Validator {\n  protected checkLength(ie: string): boolean {\n    return STATES_DATA.RN.ieLength.includes(ie.length);\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '20';\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = length;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n\n    if (dig >= 10) {\n      dig = 0;\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class RS extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.RS.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = 2;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 9;\n      }\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n\n    if (dig >= 10) {\n      dig = 0;\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class RO extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.RO.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = 6;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 9;\n      }\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n\n    if (dig >= 10) {\n      dig -= 10;\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class RR extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.RR.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return ie.substr(0, 2) === '24';\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = 1;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight++;\n    });\n\n    const dig = sum % 9;\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { CE } from './ce';\n\nexport class SC extends CE {}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { Validator } from './validator';\n\nexport class SP extends Validator {\n  protected checkLength(ie: string): boolean {\n    return ie.length === STATES_DATA.SP.ieLength;\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n\n  protected calcIe(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private calcDigit(ie: string): boolean {\n    const length = ie.length;\n    const positionFirstDigit = length - 4;\n    const positionSecondDigit = length - 1;\n\n    const firstDigit = this.calcFirstDigit(ie);\n    const secondDigit = this.calcSecondDigit(ie);\n\n    const ieAtFirstPos = parseInt(ie.charAt(positionFirstDigit), 10);\n    const ieAtSecondPos = parseInt(ie.charAt(positionSecondDigit), 10);\n\n    return firstDigit === ieAtFirstPos && secondDigit === ieAtSecondPos;\n  }\n\n  private calcFirstDigit(ie: string): number {\n    const body = ie.substr(0, 8);\n    const weight = [1, 3, 4, 5, 6, 7, 8, 10];\n    let sum = 0;\n    body.split('').forEach((digit, index) => {\n      sum += parseInt(digit, 10) * weight[index];\n    });\n\n    const dig = sum % 11;\n    const digit = dig.toString();\n\n    return parseInt(digit.substr(digit.length - 1, 1), 10);\n  }\n\n  private calcSecondDigit(ie: string): number {\n    const body = ie.substr(0, 11);\n    let weight = 3;\n    let sum = 0;\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n      if (weight === 1) {\n        weight = 10;\n      }\n    });\n    const dig = sum % 11;\n    const digit = dig.toString();\n\n    return parseInt(digit.substr(digit.length - 1, 1), 10);\n  }\n}\n","import { CE } from './ce';\n\nexport class SE extends CE {}\n","import { STATES_DATA } from '../../../common/states';\n\nimport { CE } from './ce';\n\nexport class TO extends CE {\n  protected checkLength(ie: string): boolean {\n    return STATES_DATA.TO.ieLength.includes(ie.length);\n  }\n\n  protected itStartsWith(ie: string): boolean {\n    return Boolean(ie);\n  }\n  protected calcIe(ie: string): boolean {\n    return this.checkOld(ie) || this.checkNew(ie);\n  }\n\n  private checkOld(ie: string): boolean {\n    const body = ie.slice(0, 2) + ie.slice(4);\n    return this.oldStartsWith(ie) && this.calcOld(body);\n  }\n\n  private oldStartsWith(ie: string): boolean {\n    const beginWith = ['01', '02', '03', '99'];\n    const begin = ie.substr(2, 2);\n    return beginWith.indexOf(begin) >= 0;\n  }\n\n  private calcOld(ie: string): boolean {\n    return this.calcDigit(ie);\n  }\n\n  private checkNew(ie: string): boolean {\n    return this.calcNew(ie);\n  }\n\n  private calcNew(ie: string): boolean {\n    const length = ie.length;\n    const position = length - 1;\n    let weight = 9;\n    const body = ie.substr(0, position);\n    let sum = 0;\n\n    body.split('').forEach((digit) => {\n      sum += parseInt(digit, 10) * weight;\n      weight--;\n    });\n\n    const rest = sum % 11;\n    let dig = 11 - rest;\n    if (rest < 2) {\n      dig = 0;\n    }\n\n    return dig === parseInt(ie.charAt(position), 10);\n  }\n}\n","import { State } from '../../common/states';\nimport { onlyNumbers } from '../../helpers/only-numbers';\n\nimport { AC } from './validators/ac';\nimport { AL } from './validators/al';\nimport { AP } from './validators/ap';\nimport { AM } from './validators/am';\nimport { BA } from './validators/ba';\nimport { CE } from './validators/ce';\nimport { DF } from './validators/df';\nimport { ES } from './validators/es';\nimport { GO } from './validators/go';\nimport { MA } from './validators/ma';\nimport { MT } from './validators/mt';\nimport { MS } from './validators/ms';\nimport { MG } from './validators/mg';\nimport { PA } from './validators/pa';\nimport { PB } from './validators/pb';\nimport { PR } from './validators/pr';\nimport { PE } from './validators/pe';\nimport { PI } from './validators/pi';\nimport { RJ } from './validators/rj';\nimport { RN } from './validators/rn';\nimport { RS } from './validators/rs';\nimport { RO } from './validators/ro';\nimport { RR } from './validators/rr';\nimport { SC } from './validators/sc';\nimport { SP } from './validators/sp';\nimport { SE } from './validators/se';\nimport { TO } from './validators/to';\n\nconst STATE = {\n  AC,\n  AL,\n  AP,\n  AM,\n  BA,\n  CE,\n  DF,\n  ES,\n  GO,\n  MA,\n  MT,\n  MS,\n  MG,\n  PA,\n  PB,\n  PR,\n  PE,\n  PI,\n  RJ,\n  RN,\n  RS,\n  RO,\n  RR,\n  SC,\n  SP,\n  SE,\n  TO,\n};\n\nexport function isValid(uf: State, inscricaoEstadual: string) {\n  const digits = onlyNumbers(inscricaoEstadual);\n  const state = new STATE[uf]();\n\n  return state.isValid(digits);\n}\n","import { generateChecksum } from '../../helpers';\n\nexport const LENGTH = 11;\n\nexport const WEIGHTS = [3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n\nexport const RESERVED_NUMBERS = [\n  '00000000000',\n  '11111111111',\n  '22222222222',\n  '33333333333',\n  '44444444444',\n  '55555555555',\n  '66666666666',\n  '77777777777',\n  '88888888888',\n  '99999999999',\n];\n\nfunction isValidLength(pis: string): boolean {\n  return pis.length === LENGTH;\n}\n\nfunction isReservedNumber(pis: string): boolean {\n  return RESERVED_NUMBERS.indexOf(pis) >= 0;\n}\n\nfunction hasOnlyNumbers(pis: string): boolean {\n  return !!pis.match(/^[0-9]+$/);\n}\n\nfunction removeSeparators(pis: string): string {\n  return pis.replace(/[ ().,*-]/g, '');\n}\n\nexport function isValid(pis: string): boolean {\n  if (!pis || typeof pis !== 'string') return false;\n\n  const numeric = removeSeparators(pis);\n\n  if (!isValidLength(numeric) || isReservedNumber(numeric) || !hasOnlyNumbers(numeric)) return false;\n\n  const weightedChecksum = generateChecksum(numeric.substr(0, numeric.length - 1), WEIGHTS);\n  const verifyingDigit = +numeric.charAt(numeric.length - 1);\n  const calculatedDigit = 11 - (weightedChecksum % 11);\n\n  return (\n    calculatedDigit === verifyingDigit ||\n    (calculatedDigit === 10 && verifyingDigit === 0) ||\n    (calculatedDigit === 11 && verifyingDigit === 0)\n  );\n}\n","import { STATES_DATA } from '../../common/states';\nimport { onlyNumbers } from '../../helpers';\n\nexport const VALID_AREA_CODES = Object.keys(STATES_DATA).reduce(\n  (acc, state) => acc.concat((STATES_DATA as any)[state].areaCodes),\n  []\n) as number[];\n\nexport const PHONE_MIN_LENGTH = 10;\n\nexport const PHONE_MAX_LENGTH = 11;\n\nexport const MOBILE_VALID_FIRST_NUMBERS = [6, 7, 8, 9];\n\nexport const LANDLINE_VALID_FIRST_NUMBERS = [2, 3, 4, 5];\n\nexport function isValidDDD(phone: string): boolean {\n  return VALID_AREA_CODES.includes(Number(phone.substr(0, 2)));\n}\n\nexport function isValidMobilePhoneLength(phone: string): boolean {\n  return phone.length === PHONE_MAX_LENGTH;\n}\n\nexport function isValidLandlinePhoneLength(phone: string): boolean {\n  return phone.length >= PHONE_MIN_LENGTH && phone.length < PHONE_MAX_LENGTH;\n}\n\nexport function isValidLength(phone: string): boolean {\n  return isValidLandlinePhoneLength(phone) || isValidMobilePhoneLength(phone);\n}\n\nexport function isValidMobilePhoneFirstNumber(phone: string): boolean {\n  return MOBILE_VALID_FIRST_NUMBERS.includes(Number(phone.charAt(2)));\n}\n\nexport function isValidLandlinePhoneFirstNumber(phone: string): boolean {\n  return LANDLINE_VALID_FIRST_NUMBERS.includes(Number(phone.charAt(2)));\n}\n\nexport function isValidFirstNumber(phone: string): boolean {\n  return phone.length === PHONE_MIN_LENGTH\n    ? isValidLandlinePhoneFirstNumber(phone)\n    : isValidMobilePhoneFirstNumber(phone);\n}\n\nfunction parsePhoneDigits(phone: string): { isValidDigits: boolean; digits: string } {\n  return { isValidDigits: !!phone && typeof phone === 'string', digits: onlyNumbers(phone) };\n}\n\nexport function isValidMobilePhone(phone: string): boolean {\n  const { isValidDigits, digits } = parsePhoneDigits(phone);\n\n  if (!isValidDigits) return false;\n\n  return isValidMobilePhoneLength(digits) && isValidMobilePhoneFirstNumber(digits) && isValidDDD(digits);\n}\n\nexport function isValidLandlinePhone(phone: string): boolean {\n  const { isValidDigits, digits } = parsePhoneDigits(phone);\n\n  if (!isValidDigits) return false;\n\n  return isValidLandlinePhoneLength(digits) && isValidLandlinePhoneFirstNumber(digits) && isValidDDD(digits);\n}\n\nexport function isValid(phone: string): boolean {\n  const { isValidDigits, digits } = parsePhoneDigits(phone);\n\n  if (!isValidDigits) return false;\n\n  return isValidLength(digits) && isValidFirstNumber(digits) && isValidDDD(digits);\n}\n","const MAX_RECIPIENT_LENGTH = 64;\nconst MAX_DOMAIN_LENGTH = 253;\nconst MAX_EMAIL_LENGTH = MAX_RECIPIENT_LENGTH + 1 + MAX_DOMAIN_LENGTH;\n\nconst validEmailRegex = /^([!#$%&'*+\\-/=?^_`{|}~]{0,1}([a-zA-Z0-9][!#$%&'*+\\-/=?^_`{|}~.]{0,1})+)@(([a-zA-Z0-9][-.]{0,1})+)([.]{1}[a-zA-Z0-9]+)$/;\n\nconst stringIsBiggerThan = (len: number, ...strs: string[]): boolean =>\n  strs.reduce((length, s) => length + s.length, 0) > len;\n\nexport function isValid(email: string): boolean {\n  if (!email || typeof email !== 'string') return false;\n\n  if (stringIsBiggerThan(MAX_EMAIL_LENGTH, email)) return false;\n\n  const matchedEmail = validEmailRegex.exec(email);\n\n  if (!matchedEmail) return false;\n\n  const [, recipient, , domain, , topLevelDomain] = matchedEmail;\n\n  if (stringIsBiggerThan(MAX_RECIPIENT_LENGTH, recipient)) return false;\n  if (stringIsBiggerThan(MAX_DOMAIN_LENGTH, domain, topLevelDomain)) return false;\n\n  return true;\n}\n","const validMercosulLicensePlateRegex = /^[a-z]{3}[0-9]{1}[a-z]{1}[0-9]{2}$/i;\nconst validBrazilianLicensePlateRegex = /^[a-z]{3}-?[0-9]{4}$/i;\n\nexport function isValid(licensePlate: string): boolean {\n  if (!licensePlate || typeof licensePlate !== 'string') return false;\n  return validMercosulLicensePlateRegex.test(licensePlate) || validBrazilianLicensePlateRegex.test(licensePlate);\n}\n","import { onlyNumbers, isLastChar } from '../../helpers';\n\nexport const LENGTH = 20;\n\nexport const DOT_INDEXES = [8, 12, 15];\n\nexport const HYPHEN_INDEXES = [6];\n\nexport function format(processoJuridico: string) {\n  const digits = onlyNumbers(processoJuridico);\n\n  return digits\n    .slice(0, LENGTH)\n    .split('')\n    .reduce((acc, digit, index) => {\n      const result = `${acc}${digit}`;\n      if (!isLastChar(index, processoJuridico)) {\n        if (DOT_INDEXES.includes(index)) return `${result}.`;\n        if (HYPHEN_INDEXES.includes(index)) return `${result}-`;\n      }\n      return result;\n    }, '');\n}\n","import { isLastChar, onlyNumbers } from '../../helpers';\n\nexport const LENGTH = 8;\n\nexport const HYPHEN_INDEXES = [4];\n\nfunction isValidLength(cep: string) {\n  return cep.length === LENGTH;\n}\n\nexport function format(cep: string): string {\n  const digits = onlyNumbers(cep);\n\n  return digits\n    .slice(0, LENGTH)\n    .split('')\n    .reduce((acc, digit, i) => {\n      const result = `${acc}${digit}`;\n\n      if (!isLastChar(i, digits)) {\n        if (HYPHEN_INDEXES.indexOf(i) >= 0) return `${result}-`;\n      }\n\n      return result;\n    }, '');\n}\n\nexport function isValid(cep: string) {\n  if (!cep || typeof cep !== 'string') return false;\n\n  const digits = onlyNumbers(cep);\n\n  return isValidLength(digits);\n}\n","import { onlyNumbers, isLastChar } from '../../helpers';\n\nexport const PARTIALS = [\n  {\n    end: 9,\n    start: 0,\n    index: 9,\n  },\n  {\n    end: 20,\n    start: 10,\n    index: 20,\n  },\n  {\n    end: 31,\n    start: 21,\n    index: 31,\n  },\n];\n\nexport const DOT_INDEXES = [4, 14, 25];\n\nexport const SPACE_INDEXES = [9, 20, 31, 32];\n\nexport const LENGTH = 47;\n\nexport const CHECK_DIGIT_POSITION = 4;\n\nexport const MOD_11_WEIGHTS = {\n  end: 9,\n  initial: 2,\n};\n\nexport const MOD_10_WEIGHTS = [2, 1];\n\nexport const DIGITABLE_LINE_TO_BOLETO_CONVERT_POSITIONS = [\n  { end: 4, start: 0 },\n  { end: 47, start: 32 },\n  { end: 9, start: 4 },\n  { end: 20, start: 10 },\n  { end: 31, start: 21 },\n];\n\nfunction isValidLength(digitableLine: string): boolean {\n  return digitableLine.length === LENGTH;\n}\n\nfunction mod10(partial: string): number {\n  const sum = partial\n    .split('')\n    .reverse()\n    .reduce((acc, digit, index) => {\n      const result = parseInt(digit, 10) * MOD_10_WEIGHTS[index % 2];\n\n      return acc + (result > 9 ? 1 + (result % 10) : result);\n    }, 0);\n\n  const mod = sum % 10;\n\n  return mod > 0 ? 10 - mod : 0;\n}\n\nfunction mod11(value: string): number {\n  const { initial, end } = MOD_11_WEIGHTS;\n\n  let weight = initial;\n\n  const sum = value\n    .split('')\n    .reverse()\n    .reduce((acc, digit) => {\n      const result = parseInt(digit, 10) * weight;\n      weight = weight < end ? weight + 1 : initial;\n\n      return acc + result;\n    }, 0);\n\n  const mod = sum % 11;\n\n  return mod === 0 || mod === 1 ? 1 : 11 - mod;\n}\n\nfunction isValidPartials(digitableLine: string): boolean {\n  return PARTIALS.every(({ start, end, index }) => {\n    const mod = mod10(digitableLine.substring(start, end));\n\n    return +digitableLine[index] === mod;\n  });\n}\n\nfunction parse(digitableLine: string): string {\n  return DIGITABLE_LINE_TO_BOLETO_CONVERT_POSITIONS.reduce(\n    (acc, pos) => acc + digitableLine.substring(pos.start, pos.end),\n    ''\n  );\n}\n\nfunction isValidCheckDigit(parsedDigitableLine: string): boolean {\n  const mod = mod11(\n    parsedDigitableLine.slice(0, CHECK_DIGIT_POSITION) + parsedDigitableLine.slice(CHECK_DIGIT_POSITION + 1)\n  );\n\n  return +parsedDigitableLine[CHECK_DIGIT_POSITION] === mod;\n}\n\nexport function isValid(digitableLine: string): boolean {\n  if (!digitableLine || typeof digitableLine !== 'string') return false;\n\n  const digits = onlyNumbers(digitableLine);\n\n  if (!isValidLength(digits)) return false;\n\n  if (!isValidPartials(digits)) return false;\n\n  const parsedDigits = parse(digits);\n\n  return isValidCheckDigit(parsedDigits);\n}\n\nexport function format(boleto: string) {\n  const digits = onlyNumbers(boleto);\n\n  return digits\n    .slice(0, LENGTH)\n    .split('')\n    .reduce((acc, digit, index) => {\n      const result = `${acc}${digit}`;\n\n      if (!isLastChar(index, digits)) {\n        if (DOT_INDEXES.indexOf(index) >= 0) return `${result}.`;\n        if (SPACE_INDEXES.indexOf(index) >= 0) return `${result} `;\n      }\n\n      return result;\n    }, '');\n}\n","type FormatOptions = {\n  precision?: number;\n};\n\nexport function format(value: number, options: FormatOptions = { precision: 2 }): string {\n  return value\n    .toFixed(options.precision)\n    .replace('.', ',')\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n}\n\nexport function parse(value: string): number {\n  return parseInt(value.replace(/\\D/g, '') || '0', 10) / 100;\n}\n","import { State, STATES, STATES_DATA } from '../../common/states';\n\nimport { isLastChar, onlyNumbers, generateChecksum, generateRandomNumber } from '../../helpers';\n\nexport const LENGTH = 11;\n\nexport const DOT_INDEXES = [2, 5];\n\nexport const HYPHEN_INDEXES = [8];\n\nexport const RESERVED_NUMBERS = [\n  '00000000000',\n  '11111111111',\n  '22222222222',\n  '33333333333',\n  '44444444444',\n  '55555555555',\n  '66666666666',\n  '77777777777',\n  '88888888888',\n  '99999999999',\n];\n\nexport const CHECK_DIGITS_INDEXES = [9, 10];\n\nexport interface FormatCpfOptions {\n  pad?: boolean;\n}\n\nexport function format(cpf: string | number, options: FormatCpfOptions = {}): string {\n  let digits = onlyNumbers(cpf);\n\n  if (options.pad) {\n    digits = digits.padStart(LENGTH, '0');\n  }\n\n  return digits\n    .slice(0, LENGTH)\n    .split('')\n    .reduce((acc, digit, i) => {\n      const result = `${acc}${digit}`;\n\n      if (!isLastChar(i, digits)) {\n        if (DOT_INDEXES.indexOf(i) >= 0) return `${result}.`;\n        if (HYPHEN_INDEXES.indexOf(i) >= 0) return `${result}-`;\n      }\n\n      return result;\n    }, '');\n}\n\nexport function generate(state?: State): string {\n  const stateCode = state && STATES.includes(state) ? STATES_DATA[state].code : generateRandomNumber(1);\n  const baseCPF = generateRandomNumber(LENGTH - 3) + stateCode;\n\n  const firstCheckDigitMod = generateChecksum(baseCPF, 10) % 11;\n  const firstCheckDigit = (firstCheckDigitMod < 2 ? 0 : 11 - firstCheckDigitMod).toString();\n\n  const secondCheckDigitMod = generateChecksum(baseCPF + firstCheckDigit, 11) % 11;\n  const secondCheckDigit = (secondCheckDigitMod < 2 ? 0 : 11 - secondCheckDigitMod).toString();\n\n  return `${baseCPF}${firstCheckDigit.toString()}${secondCheckDigit.toString()}`;\n}\n\nexport function isValidFormat(cpf: string): boolean {\n  return /^\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}$/.test(cpf);\n}\n\nexport function isReservedNumber(cpf: string): boolean {\n  return RESERVED_NUMBERS.indexOf(cpf) >= 0;\n}\n\n// TODO: move to checksum helper\nexport function isValidChecksum(cpf: string): boolean {\n  return CHECK_DIGITS_INDEXES.every((i) => {\n    const mod =\n      generateChecksum(\n        cpf\n          .slice(0, i)\n          .split('')\n          .reduce((acc, digit) => acc + digit, ''),\n        i + 1\n      ) % 11;\n\n    return cpf[i] === String(mod < 2 ? 0 : 11 - mod);\n  });\n}\n\nexport function isValid(cpf: string): boolean {\n  if (!cpf || typeof cpf !== 'string') return false;\n\n  const digits = onlyNumbers(cpf);\n\n  return isValidFormat(cpf) && !isReservedNumber(digits) && isValidChecksum(digits);\n}\n","import { isLastChar, onlyNumbers, generateChecksum, generateRandomNumber } from '../../helpers';\n\nexport const LENGTH = 14;\n\nexport const DOT_INDEXES = [1, 4];\n\nexport const SLASH_INDEXES = [7];\n\nexport const HYPHEN_INDEXES = [11];\n\nexport const RESERVED_NUMBERS = [\n  '00000000000000',\n  '11111111111111',\n  '22222222222222',\n  '33333333333333',\n  '44444444444444',\n  '55555555555555',\n  '66666666666666',\n  '77777777777777',\n  '88888888888888',\n  '99999999999999',\n];\n\nexport const CHECK_DIGITS_INDEXES = [12, 13];\n\nexport const FIRST_CHECK_DIGIT_WEIGHTS = [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n\nexport const SECOND_CHECK_DIGIT_WEIGHTS = [6, ...FIRST_CHECK_DIGIT_WEIGHTS];\n\nexport interface FormatCnpjOptions {\n  pad?: boolean;\n}\n\nexport function format(cnpj: string | number, options: FormatCnpjOptions = {}): string {\n  let digits = onlyNumbers(cnpj);\n\n  if (options.pad) {\n    digits = digits.padStart(LENGTH, '0');\n  }\n\n  return digits\n    .slice(0, LENGTH)\n    .split('')\n    .reduce((acc, digit, index) => {\n      const result = `${acc}${digit}`;\n\n      if (!isLastChar(index, digits)) {\n        if (DOT_INDEXES.includes(index)) return `${result}.`;\n        if (SLASH_INDEXES.includes(index)) return `${result}/`;\n        if (HYPHEN_INDEXES.includes(index)) return `${result}-`;\n      }\n\n      return result;\n    }, '');\n}\n\nexport function generate(): string {\n  const baseCNPJ = generateRandomNumber(LENGTH - 2);\n\n  const firstCheckDigitMod = generateChecksum(baseCNPJ, FIRST_CHECK_DIGIT_WEIGHTS) % 11;\n  const firstCheckDigit = (firstCheckDigitMod < 2 ? 0 : 11 - firstCheckDigitMod).toString();\n\n  const secondCheckDigitMod = generateChecksum(baseCNPJ + firstCheckDigit, SECOND_CHECK_DIGIT_WEIGHTS) % 11;\n  const secondCheckDigit = (secondCheckDigitMod < 2 ? 0 : 11 - secondCheckDigitMod).toString();\n\n  return `${baseCNPJ}${firstCheckDigit}${secondCheckDigit}`;\n}\n\nexport function isValidFormat(cnpj: string): boolean {\n  return /^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$/.test(cnpj);\n}\n\nexport function isReservedNumber(cpf: string): boolean {\n  return RESERVED_NUMBERS.indexOf(cpf) >= 0;\n}\n\n// TODO: move to checksum helper\nexport function isValidChecksum(cnpj: string): boolean {\n  const weights = [...FIRST_CHECK_DIGIT_WEIGHTS];\n\n  return CHECK_DIGITS_INDEXES.every((i) => {\n    if (i === CHECK_DIGITS_INDEXES[CHECK_DIGITS_INDEXES.length - 1]) {\n      weights.unshift(6);\n    }\n\n    const mod =\n      generateChecksum(\n        cnpj\n          .slice(0, i)\n          .split('')\n          .reduce((acc, digit) => acc + digit, ''),\n        weights\n      ) % 11;\n\n    return cnpj[i] === String(mod < 2 ? 0 : 11 - mod);\n  });\n}\n\nexport function isValid(cnpj: string): boolean {\n  if (!cnpj || typeof cnpj !== 'string') return false;\n\n  const numbers = onlyNumbers(cnpj);\n\n  return isValidFormat(cnpj) && !isReservedNumber(numbers) && isValidChecksum(numbers);\n}\n","export const ACRONYMS = ['cia', 'cnpj', 'cpf', 'ltda', 'me', 'rg'];\n\nexport const PREPOSITIONS = [\n  'a',\n  'com',\n  'da',\n  'das',\n  'de',\n  'do',\n  'dos',\n  'e',\n  'em',\n  'na',\n  'nas',\n  'no',\n  'nos',\n  'o',\n  'por',\n  'sem',\n];\n\ntype CapitalizeOptions = {\n  lowerCaseWords?: string[];\n  upperCaseWords?: string[];\n};\n\nexport function capitalize(\n  value: string,\n  { lowerCaseWords = PREPOSITIONS, upperCaseWords = ACRONYMS }: CapitalizeOptions = {}\n): string {\n  return value\n    .split(' ')\n    .filter((word) => !!word)\n    .map((word, index) => {\n      const lowerCaseWord = word.toLocaleLowerCase();\n      if (index > 0 && lowerCaseWords.indexOf(lowerCaseWord) !== -1) return lowerCaseWord;\n      const upperCaseWord = word.toLocaleUpperCase();\n      if (upperCaseWords.indexOf(upperCaseWord) !== -1) return upperCaseWord;\n      return upperCaseWord.charAt(0) + lowerCaseWord.substr(1);\n    })\n    .join(' ');\n}\n","import { STATES, STATES_DATA, StateCode, StateName } from '../../common/states';\n\nexport interface State {\n  code: StateCode;\n  name: StateName;\n}\n\nexport { StateCode, StateName };\n\nconst stateNameComparer = ({ name: nameA }: State, { name: nameB }: State) => nameA.localeCompare(nameB);\n\nconst sortByStateName = (states: State[]): State[] => states.sort(stateNameComparer);\n\nexport function getStates(): State[] {\n  const states = STATES.map((code) => ({\n    code,\n    name: STATES_DATA[code].name as StateName,\n  }));\n\n  return sortByStateName(states);\n}\n","export const CITIES_DATA = {\n  GO: [\n    'Abadia de Goiás',\n    'Abadiânia',\n    'Acreúna',\n    'Adelândia',\n    'Alexânia',\n    'Aloândia',\n    'Alto Horizonte',\n    'Alto Paraíso de Goiás',\n    'Alvorada do Norte',\n    'Amaralina',\n    'Americano do Brasil',\n    'Amorinópolis',\n    'Anhanguera',\n    'Anicuns',\n    'Anápolis',\n    'Aparecida de Goiânia',\n    'Aparecida do Rio Doce',\n    'Aporé',\n    'Aragarças',\n    'Aragoiânia',\n    'Araguapaz',\n    'Araçu',\n    'Arenópolis',\n    'Aruanã',\n    'Aurilândia',\n    'Avelinópolis',\n    'Baliza',\n    'Barro Alto',\n    'Bela Vista de Goiás',\n    'Bom Jardim de Goiás',\n    'Bom Jesus de Goiás',\n    'Bonfinópolis',\n    'Bonópolis',\n    'Brazabrantes',\n    'Britânia',\n    'Buriti Alegre',\n    'Buriti de Goiás',\n    'Buritinópolis',\n    'Cabeceiras',\n    'Cachoeira Alta',\n    'Cachoeira Dourada',\n    'Cachoeira de Goiás',\n    'Caiapônia',\n    'Caldas Novas',\n    'Caldazinha',\n    'Campestre de Goiás',\n    'Campinaçu',\n    'Campinorte',\n    'Campo Alegre de Goiás',\n    'Campo Limpo de Goiás',\n    'Campos Belos',\n    'Campos Verdes',\n    'Carmo do Rio Verde',\n    'Castelândia',\n    'Catalão',\n    'Caturaí',\n    'Cavalcante',\n    'Caçu',\n    'Ceres',\n    'Cezarina',\n    'Chapadão do Céu',\n    'Cidade Ocidental',\n    'Cocalzinho de Goiás',\n    'Colinas do Sul',\n    'Corumbaíba',\n    'Corumbá de Goiás',\n    'Cristalina',\n    'Cristianópolis',\n    'Crixás',\n    'Cromínia',\n    'Cumari',\n    'Córrego do Ouro',\n    'Damianópolis',\n    'Damolândia',\n    'Davinópolis',\n    'Diorama',\n    'Divinópolis de Goiás',\n    'Doverlândia',\n    'Edealina',\n    'Edéia',\n    'Estrela do Norte',\n    'Faina',\n    'Fazenda Nova',\n    'Firminópolis',\n    'Flores de Goiás',\n    'Formosa',\n    'Formoso',\n    'Gameleira de Goiás',\n    'Goiandira',\n    'Goianira',\n    'Goianápolis',\n    'Goianésia',\n    'Goiatuba',\n    'Goiás',\n    'Goiânia',\n    'Gouvelândia',\n    'Guapó',\n    'Guarani de Goiás',\n    'Guaraíta',\n    'Guarinos',\n    'Heitoraí',\n    'Hidrolina',\n    'Hidrolândia',\n    'Iaciara',\n    'Inaciolândia',\n    'Indiara',\n    'Inhumas',\n    'Ipameri',\n    'Ipiranga de Goiás',\n    'Iporá',\n    'Israelândia',\n    'Itaberaí',\n    'Itaguari',\n    'Itaguaru',\n    'Itajá',\n    'Itapaci',\n    'Itapirapuã',\n    'Itapuranga',\n    'Itarumã',\n    'Itauçu',\n    'Itumbiara',\n    'Ivolândia',\n    'Jandaia',\n    'Jaraguá',\n    'Jataí',\n    'Jaupaci',\n    'Jesúpolis',\n    'Joviânia',\n    'Jussara',\n    'Lagoa Santa',\n    'Leopoldo de Bulhões',\n    'Luziânia',\n    'Mairipotaba',\n    'Mambaí',\n    'Mara Rosa',\n    'Marzagão',\n    'Matrinchã',\n    'Maurilândia',\n    'Mimoso de Goiás',\n    'Minaçu',\n    'Mineiros',\n    'Moiporá',\n    'Monte Alegre de Goiás',\n    'Montes Claros de Goiás',\n    'Montividiu',\n    'Montividiu do Norte',\n    'Morrinhos',\n    'Morro Agudo de Goiás',\n    'Mossâmedes',\n    'Mozarlândia',\n    'Mundo Novo',\n    'Mutunópolis',\n    'Nazário',\n    'Nerópolis',\n    'Niquelândia',\n    'Nova América',\n    'Nova Aurora',\n    'Nova Crixás',\n    'Nova Glória',\n    'Nova Iguaçu de Goiás',\n    'Nova Roma',\n    'Nova Veneza',\n    'Novo Brasil',\n    'Novo Gama',\n    'Novo Planalto',\n    'Orizona',\n    'Ouro Verde de Goiás',\n    'Ouvidor',\n    'Padre Bernardo',\n    'Palestina de Goiás',\n    'Palmeiras de Goiás',\n    'Palmelo',\n    'Palminópolis',\n    'Panamá',\n    'Paranaiguara',\n    'Paraúna',\n    'Perolândia',\n    'Petrolina de Goiás',\n    'Pilar de Goiás',\n    'Piracanjuba',\n    'Piranhas',\n    'Pirenópolis',\n    'Pires do Rio',\n    'Planaltina',\n    'Pontalina',\n    'Porangatu',\n    'Porteirão',\n    'Portelândia',\n    'Posse',\n    'Professor Jamil',\n    'Quirinópolis',\n    'Rialma',\n    'Rianápolis',\n    'Rio Quente',\n    'Rio Verde',\n    'Rubiataba',\n    'Sanclerlândia',\n    'Santa Bárbara de Goiás',\n    'Santa Cruz de Goiás',\n    'Santa Fé de Goiás',\n    'Santa Helena de Goiás',\n    'Santa Isabel',\n    'Santa Rita do Araguaia',\n    'Santa Rita do Novo Destino',\n    'Santa Rosa de Goiás',\n    'Santa Tereza de Goiás',\n    'Santa Terezinha de Goiás',\n    'Santo Antônio da Barra',\n    'Santo Antônio de Goiás',\n    'Santo Antônio do Descoberto',\n    'Senador Canedo',\n    'Serranópolis',\n    'Silvânia',\n    'Simolândia',\n    'São Domingos',\n    'São Francisco de Goiás',\n    \"São João d'Aliança\",\n    'São João da Paraúna',\n    'São Luiz do Norte',\n    'São Luís de Montes Belos',\n    'São Miguel do Araguaia',\n    'São Miguel do Passa Quatro',\n    'São Patrício',\n    'São Simão',\n    \"Sítio d'Abadia\",\n    'Taquaral de Goiás',\n    'Teresina de Goiás',\n    'Terezópolis de Goiás',\n    'Trindade',\n    'Trombas',\n    'Três Ranchos',\n    'Turvelândia',\n    'Turvânia',\n    'Uirapuru',\n    'Uruana',\n    'Uruaçu',\n    'Urutaí',\n    'Valparaíso de Goiás',\n    'Varjão',\n    'Vianópolis',\n    'Vicentinópolis',\n    'Vila Boa',\n    'Vila Propício',\n    'Água Fria de Goiás',\n    'Água Limpa',\n    'Águas Lindas de Goiás',\n  ],\n  MG: [\n    'Abadia dos Dourados',\n    'Abaeté',\n    'Abre Campo',\n    'Acaiaca',\n    'Aguanil',\n    'Aimorés',\n    'Aiuruoca',\n    'Alagoa',\n    'Albertina',\n    'Alfenas',\n    'Alfredo Vasconcelos',\n    'Almenara',\n    'Alpercata',\n    'Alpinópolis',\n    'Alterosa',\n    'Alto Caparaó',\n    'Alto Jequitibá',\n    'Alto Rio Doce',\n    'Alvarenga',\n    'Alvinópolis',\n    'Alvorada de Minas',\n    'Além Paraíba',\n    'Amparo do Serra',\n    'Andradas',\n    'Andrelândia',\n    'Angelândia',\n    'Antônio Carlos',\n    'Antônio Dias',\n    'Antônio Prado de Minas',\n    'Aracitaba',\n    'Araguari',\n    'Arantina',\n    'Araponga',\n    'Araporã',\n    'Arapuá',\n    'Araxá',\n    'Araçaí',\n    'Araçuaí',\n    'Araújos',\n    'Arceburgo',\n    'Arcos',\n    'Areado',\n    'Argirita',\n    'Aricanduva',\n    'Arinos',\n    'Astolfo Dutra',\n    'Ataléia',\n    'Augusto de Lima',\n    'Açucena',\n    'Baependi',\n    'Baldim',\n    'Bambuí',\n    'Bandeira',\n    'Bandeira do Sul',\n    'Barbacena',\n    'Barra Longa',\n    'Barroso',\n    'Barão de Cocais',\n    'Barão de Monte Alto',\n    'Bela Vista de Minas',\n    'Belmiro Braga',\n    'Belo Horizonte',\n    'Belo Oriente',\n    'Belo Vale',\n    'Berilo',\n    'Berizal',\n    'Bertópolis',\n    'Betim',\n    'Bias Fortes',\n    'Bicas',\n    'Biquinhas',\n    'Boa Esperança',\n    'Bocaina de Minas',\n    'Bocaiúva',\n    'Bom Despacho',\n    'Bom Jardim de Minas',\n    'Bom Jesus da Penha',\n    'Bom Jesus do Amparo',\n    'Bom Jesus do Galho',\n    'Bom Repouso',\n    'Bom Sucesso',\n    'Bonfim',\n    'Bonfinópolis de Minas',\n    'Bonito de Minas',\n    'Borda da Mata',\n    'Botelhos',\n    'Botumirim',\n    'Brasilândia de Minas',\n    'Brasília de Minas',\n    'Brazópolis',\n    'Braúnas',\n    'Brumadinho',\n    'Brás Pires',\n    'Bueno Brandão',\n    'Buenópolis',\n    'Bugre',\n    'Buritis',\n    'Buritizeiro',\n    'Cabeceira Grande',\n    'Cabo Verde',\n    'Cachoeira Dourada',\n    'Cachoeira da Prata',\n    'Cachoeira de Minas',\n    'Cachoeira de Pajeú',\n    'Caetanópolis',\n    'Caeté',\n    'Caiana',\n    'Cajuri',\n    'Caldas',\n    'Camacho',\n    'Camanducaia',\n    'Cambuquira',\n    'Cambuí',\n    'Campanha',\n    'Campanário',\n    'Campestre',\n    'Campina Verde',\n    'Campo Azul',\n    'Campo Belo',\n    'Campo Florido',\n    'Campo do Meio',\n    'Campos Altos',\n    'Campos Gerais',\n    'Cana Verde',\n    'Canaã',\n    'Candeias',\n    'Cantagalo',\n    'Canápolis',\n    'Caparaó',\n    'Capela Nova',\n    'Capelinha',\n    'Capetinga',\n    'Capim Branco',\n    'Capinópolis',\n    'Capitão Andrade',\n    'Capitão Enéas',\n    'Capitólio',\n    'Caputira',\n    'Caranaíba',\n    'Carandaí',\n    'Carangola',\n    'Caratinga',\n    'Caraí',\n    'Carbonita',\n    'Careaçu',\n    'Carlos Chagas',\n    'Carmo da Cachoeira',\n    'Carmo da Mata',\n    'Carmo de Minas',\n    'Carmo do Cajuru',\n    'Carmo do Paranaíba',\n    'Carmo do Rio Claro',\n    'Carmésia',\n    'Carmópolis de Minas',\n    'Carneirinho',\n    'Carrancas',\n    'Carvalhos',\n    'Carvalhópolis',\n    'Casa Grande',\n    'Cascalho Rico',\n    'Cataguases',\n    'Catas Altas',\n    'Catas Altas da Noruega',\n    'Catuji',\n    'Catuti',\n    'Caxambu',\n    'Cedro do Abaeté',\n    'Central de Minas',\n    'Centralina',\n    'Chalé',\n    'Chapada Gaúcha',\n    'Chapada do Norte',\n    'Chiador',\n    'Chácara',\n    'Cipotânea',\n    'Claraval',\n    'Claro dos Poções',\n    'Cláudio',\n    'Coimbra',\n    'Coluna',\n    'Comendador Gomes',\n    'Comercinho',\n    'Conceição da Aparecida',\n    'Conceição da Barra de Minas',\n    'Conceição das Alagoas',\n    'Conceição das Pedras',\n    'Conceição de Ipanema',\n    'Conceição do Mato Dentro',\n    'Conceição do Pará',\n    'Conceição do Rio Verde',\n    'Conceição dos Ouros',\n    'Confins',\n    'Congonhal',\n    'Congonhas',\n    'Congonhas do Norte',\n    'Conquista',\n    'Conselheiro Lafaiete',\n    'Conselheiro Pena',\n    'Consolação',\n    'Contagem',\n    'Coqueiral',\n    'Coração de Jesus',\n    'Cordisburgo',\n    'Cordislândia',\n    'Corinto',\n    'Coroaci',\n    'Coromandel',\n    'Coronel Fabriciano',\n    'Coronel Murta',\n    'Coronel Pacheco',\n    'Coronel Xavier Chaves',\n    'Couto de Magalhães de Minas',\n    'Cristais',\n    'Cristiano Otoni',\n    'Cristina',\n    'Cristália',\n    'Crisólita',\n    'Crucilândia',\n    'Cruzeiro da Fortaleza',\n    'Cruzília',\n    'Cuparaque',\n    'Curral de Dentro',\n    'Curvelo',\n    'Cássia',\n    'Córrego Danta',\n    'Córrego Fundo',\n    'Córrego Novo',\n    'Córrego do Bom Jesus',\n    'Cônego Marinho',\n    'Datas',\n    'Delfim Moreira',\n    'Delfinópolis',\n    'Delta',\n    'Descoberto',\n    'Desterro de Entre Rios',\n    'Desterro do Melo',\n    'Diamantina',\n    'Diogo de Vasconcelos',\n    'Dionísio',\n    'Divino',\n    'Divino das Laranjeiras',\n    'Divinolândia de Minas',\n    'Divinésia',\n    'Divinópolis',\n    'Divisa Alegre',\n    'Divisa Nova',\n    'Divisópolis',\n    'Dom Bosco',\n    'Dom Cavati',\n    'Dom Joaquim',\n    'Dom Silvério',\n    'Dom Viçoso',\n    'Dona Euzébia',\n    'Dores de Campos',\n    'Dores de Guanhães',\n    'Dores do Indaiá',\n    'Dores do Turvo',\n    'Doresópolis',\n    'Douradoquara',\n    'Durandé',\n    'Elói Mendes',\n    'Engenheiro Caldas',\n    'Engenheiro Navarro',\n    'Entre Folhas',\n    'Entre Rios de Minas',\n    'Ervália',\n    'Esmeraldas',\n    'Espera Feliz',\n    'Espinosa',\n    'Espírito Santo do Dourado',\n    'Estiva',\n    'Estrela Dalva',\n    'Estrela do Indaiá',\n    'Estrela do Sul',\n    'Eugenópolis',\n    'Ewbank da Câmara',\n    'Extrema',\n    'Fama',\n    'Faria Lemos',\n    'Felisburgo',\n    'Felixlândia',\n    'Felício dos Santos',\n    'Fernandes Tourinho',\n    'Ferros',\n    'Fervedouro',\n    'Florestal',\n    'Formiga',\n    'Formoso',\n    'Fortaleza de Minas',\n    'Fortuna de Minas',\n    'Francisco Badaró',\n    'Francisco Dumont',\n    'Francisco Sá',\n    'Franciscópolis',\n    'Frei Gaspar',\n    'Frei Inocêncio',\n    'Frei Lagonegro',\n    'Fronteira',\n    'Fronteira dos Vales',\n    'Fruta de Leite',\n    'Frutal',\n    'Funilândia',\n    'Galiléia',\n    'Gameleiras',\n    'Glaucilândia',\n    'Goiabeira',\n    'Goianá',\n    'Gonzaga',\n    'Gonçalves',\n    'Gouveia',\n    'Governador Valadares',\n    'Grupiara',\n    'Grão Mogol',\n    'Guanhães',\n    'Guapé',\n    'Guaraciaba',\n    'Guaraciama',\n    'Guarani',\n    'Guaranésia',\n    'Guarará',\n    'Guarda-Mor',\n    'Guaxupé',\n    'Guidoval',\n    'Guimarânia',\n    'Guiricema',\n    'Gurinhatã',\n    'Heliodora',\n    'Iapu',\n    'Ibertioga',\n    'Ibiaí',\n    'Ibiracatu',\n    'Ibiraci',\n    'Ibirité',\n    'Ibitiúra de Minas',\n    'Ibituruna',\n    'Ibiá',\n    'Icaraí de Minas',\n    'Igarapé',\n    'Igaratinga',\n    'Iguatama',\n    'Ijaci',\n    'Ilicínea',\n    'Imbé de Minas',\n    'Inconfidentes',\n    'Indaiabira',\n    'Indianópolis',\n    'Ingaí',\n    'Inhapim',\n    'Inhaúma',\n    'Inimutaba',\n    'Ipaba',\n    'Ipanema',\n    'Ipatinga',\n    'Ipiaçu',\n    'Ipuiúna',\n    'Iraí de Minas',\n    'Itabira',\n    'Itabirinha',\n    'Itabirito',\n    'Itacambira',\n    'Itacarambi',\n    'Itaguara',\n    'Itaipé',\n    'Itajubá',\n    'Itamarandiba',\n    'Itamarati de Minas',\n    'Itambacuri',\n    'Itambé do Mato Dentro',\n    'Itamogi',\n    'Itamonte',\n    'Itanhandu',\n    'Itanhomi',\n    'Itaobim',\n    'Itapagipe',\n    'Itapecerica',\n    'Itapeva',\n    'Itatiaiuçu',\n    'Itaverava',\n    'Itaú de Minas',\n    'Itaúna',\n    'Itinga',\n    'Itueta',\n    'Ituiutaba',\n    'Itumirim',\n    'Iturama',\n    'Itutinga',\n    'Jaboticatubas',\n    'Jacinto',\n    'Jacutinga',\n    'Jacuí',\n    'Jaguaraçu',\n    'Jampruca',\n    'Janaúba',\n    'Januária',\n    'Japaraíba',\n    'Japonvar',\n    'Jaíba',\n    'Jeceaba',\n    'Jenipapo de Minas',\n    'Jequeri',\n    'Jequitaí',\n    'Jequitibá',\n    'Jequitinhonha',\n    'Jesuânia',\n    'Joanésia',\n    'Joaquim Felício',\n    'Joaíma',\n    'Jordânia',\n    'Josenópolis',\n    'José Gonçalves de Minas',\n    'José Raydan',\n    'João Monlevade',\n    'João Pinheiro',\n    'Juatuba',\n    'Juiz de Fora',\n    'Juramento',\n    'Juruaia',\n    'Juvenília',\n    'Ladainha',\n    'Lagamar',\n    'Lagoa Dourada',\n    'Lagoa Formosa',\n    'Lagoa Grande',\n    'Lagoa Santa',\n    'Lagoa da Prata',\n    'Lagoa dos Patos',\n    'Lajinha',\n    'Lambari',\n    'Lamim',\n    'Laranjal',\n    'Lassance',\n    'Lavras',\n    'Leandro Ferreira',\n    'Leme do Prado',\n    'Leopoldina',\n    'Liberdade',\n    'Lima Duarte',\n    'Limeira do Oeste',\n    'Lontra',\n    'Luisburgo',\n    'Luislândia',\n    'Luminárias',\n    'Luz',\n    'Machacalis',\n    'Machado',\n    'Madre de Deus de Minas',\n    'Malacacheta',\n    'Mamonas',\n    'Manga',\n    'Manhuaçu',\n    'Manhumirim',\n    'Mantena',\n    'Mar de Espanha',\n    'Maravilhas',\n    'Maria da Fé',\n    'Mariana',\n    'Marilac',\n    'Maripá de Minas',\n    'Marliéria',\n    'Marmelópolis',\n    'Martinho Campos',\n    'Martins Soares',\n    'Mata Verde',\n    'Materlândia',\n    'Mateus Leme',\n    'Mathias Lobato',\n    'Matias Barbosa',\n    'Matias Cardoso',\n    'Matipó',\n    'Mato Verde',\n    'Matozinhos',\n    'Matutina',\n    'Medeiros',\n    'Medina',\n    'Mendes Pimentel',\n    'Mercês',\n    'Mesquita',\n    'Minas Novas',\n    'Minduri',\n    'Mirabela',\n    'Miradouro',\n    'Miravânia',\n    'Miraí',\n    'Moeda',\n    'Moema',\n    'Monjolos',\n    'Monsenhor Paulo',\n    'Montalvânia',\n    'Monte Alegre de Minas',\n    'Monte Azul',\n    'Monte Belo',\n    'Monte Carmelo',\n    'Monte Formoso',\n    'Monte Santo de Minas',\n    'Monte Sião',\n    'Montes Claros',\n    'Montezuma',\n    'Morada Nova de Minas',\n    'Morro da Garça',\n    'Morro do Pilar',\n    'Munhoz',\n    'Muriaé',\n    'Mutum',\n    'Muzambinho',\n    'Mário Campos',\n    'Nacip Raydan',\n    'Nanuque',\n    'Naque',\n    'Natalândia',\n    'Natércia',\n    'Nazareno',\n    'Nepomuceno',\n    'Ninheira',\n    'Nova Belém',\n    'Nova Era',\n    'Nova Lima',\n    'Nova Módica',\n    'Nova Ponte',\n    'Nova Porteirinha',\n    'Nova Resende',\n    'Nova Serrana',\n    'Nova União',\n    'Novo Cruzeiro',\n    'Novo Oriente de Minas',\n    'Novorizonte',\n    'Olaria',\n    \"Olhos-d'Água\",\n    'Oliveira',\n    'Oliveira Fortes',\n    'Olímpio Noronha',\n    'Onça de Pitangui',\n    'Oratórios',\n    'Orizânia',\n    'Ouro Branco',\n    'Ouro Fino',\n    'Ouro Preto',\n    'Ouro Verde de Minas',\n    'Padre Carvalho',\n    'Padre Paraíso',\n    'Pai Pedro',\n    'Paineiras',\n    'Pains',\n    'Paiva',\n    'Palma',\n    'Palmópolis',\n    'Papagaios',\n    'Paracatu',\n    'Paraguaçu',\n    'Paraisópolis',\n    'Paraopeba',\n    'Pará de Minas',\n    'Passa Quatro',\n    'Passa Tempo',\n    'Passa Vinte',\n    'Passabém',\n    'Passos',\n    'Patis',\n    'Patos de Minas',\n    'Patrocínio',\n    'Patrocínio do Muriaé',\n    'Paula Cândido',\n    'Paulistas',\n    'Pavão',\n    'Pedra Azul',\n    'Pedra Bonita',\n    'Pedra Dourada',\n    'Pedra do Anta',\n    'Pedra do Indaiá',\n    'Pedralva',\n    'Pedras de Maria da Cruz',\n    'Pedrinópolis',\n    'Pedro Leopoldo',\n    'Pedro Teixeira',\n    'Pequeri',\n    'Pequi',\n    'Perdigão',\n    'Perdizes',\n    'Perdões',\n    'Periquito',\n    'Pescador',\n    'Peçanha',\n    'Piau',\n    'Piedade de Caratinga',\n    'Piedade de Ponte Nova',\n    'Piedade do Rio Grande',\n    'Piedade dos Gerais',\n    'Pimenta',\n    \"Pingo d'Água\",\n    'Pintópolis',\n    'Piracema',\n    'Pirajuba',\n    'Piranga',\n    'Piranguinho',\n    'Piranguçu',\n    'Pirapetinga',\n    'Pirapora',\n    'Piraúba',\n    'Pitangui',\n    'Piumhi',\n    'Planura',\n    'Pocrane',\n    'Pompéu',\n    'Ponte Nova',\n    'Ponto Chique',\n    'Ponto dos Volantes',\n    'Porteirinha',\n    'Porto Firme',\n    'Poté',\n    'Pouso Alegre',\n    'Pouso Alto',\n    'Poço Fundo',\n    'Poços de Caldas',\n    'Prados',\n    'Prata',\n    'Pratinha',\n    'Pratápolis',\n    'Presidente Bernardes',\n    'Presidente Juscelino',\n    'Presidente Kubitschek',\n    'Presidente Olegário',\n    'Prudente de Morais',\n    'Quartel Geral',\n    'Queluzito',\n    'Raposos',\n    'Raul Soares',\n    'Recreio',\n    'Reduto',\n    'Resende Costa',\n    'Resplendor',\n    'Ressaquinha',\n    'Riachinho',\n    'Riacho dos Machados',\n    'Ribeirão Vermelho',\n    'Ribeirão das Neves',\n    'Rio Acima',\n    'Rio Casca',\n    'Rio Doce',\n    'Rio Espera',\n    'Rio Manso',\n    'Rio Novo',\n    'Rio Paranaíba',\n    'Rio Pardo de Minas',\n    'Rio Piracicaba',\n    'Rio Pomba',\n    'Rio Preto',\n    'Rio Vermelho',\n    'Rio do Prado',\n    'Ritápolis',\n    'Rochedo de Minas',\n    'Rodeiro',\n    'Romaria',\n    'Rosário da Limeira',\n    'Rubelita',\n    'Rubim',\n    'Sabará',\n    'Sabinópolis',\n    'Sacramento',\n    'Salinas',\n    'Salto da Divisa',\n    'Santa Bárbara',\n    'Santa Bárbara do Leste',\n    'Santa Bárbara do Monte Verde',\n    'Santa Bárbara do Tugúrio',\n    'Santa Cruz de Minas',\n    'Santa Cruz de Salinas',\n    'Santa Cruz do Escalvado',\n    'Santa Efigênia de Minas',\n    'Santa Fé de Minas',\n    'Santa Helena de Minas',\n    'Santa Juliana',\n    'Santa Luzia',\n    'Santa Margarida',\n    'Santa Maria de Itabira',\n    'Santa Maria do Salto',\n    'Santa Maria do Suaçuí',\n    'Santa Rita de Caldas',\n    'Santa Rita de Ibitipoca',\n    'Santa Rita de Jacutinga',\n    'Santa Rita de Minas',\n    'Santa Rita do Itueto',\n    'Santa Rita do Sapucaí',\n    'Santa Rosa da Serra',\n    'Santa Vitória',\n    'Santana da Vargem',\n    'Santana de Cataguases',\n    'Santana de Pirapama',\n    'Santana do Deserto',\n    'Santana do Garambéu',\n    'Santana do Jacaré',\n    'Santana do Manhuaçu',\n    'Santana do Paraíso',\n    'Santana do Riacho',\n    'Santana dos Montes',\n    'Santo Antônio do Amparo',\n    'Santo Antônio do Aventureiro',\n    'Santo Antônio do Grama',\n    'Santo Antônio do Itambé',\n    'Santo Antônio do Jacinto',\n    'Santo Antônio do Monte',\n    'Santo Antônio do Retiro',\n    'Santo Antônio do Rio Abaixo',\n    'Santo Hipólito',\n    'Santos Dumont',\n    'Sapucaí-Mirim',\n    'Sardoá',\n    'Sarzedo',\n    'Sem-Peixe',\n    'Senador Amaral',\n    'Senador Cortes',\n    'Senador Firmino',\n    'Senador José Bento',\n    'Senador Modestino Gonçalves',\n    'Senhora de Oliveira',\n    'Senhora do Porto',\n    'Senhora dos Remédios',\n    'Sericita',\n    'Seritinga',\n    'Serra Azul de Minas',\n    'Serra da Saudade',\n    'Serra do Salitre',\n    'Serra dos Aimorés',\n    'Serrania',\n    'Serranos',\n    'Serranópolis de Minas',\n    'Serro',\n    'Sete Lagoas',\n    'Setubinha',\n    'Silveirânia',\n    'Silvianópolis',\n    'Simonésia',\n    'Simão Pereira',\n    'Sobrália',\n    'Soledade de Minas',\n    'São Bento Abade',\n    'São Brás do Suaçuí',\n    'São Domingos das Dores',\n    'São Domingos do Prata',\n    'São Francisco',\n    'São Francisco de Paula',\n    'São Francisco de Sales',\n    'São Francisco do Glória',\n    'São Félix de Minas',\n    'São Geraldo',\n    'São Geraldo da Piedade',\n    'São Geraldo do Baixio',\n    'São Gonçalo do Abaeté',\n    'São Gonçalo do Pará',\n    'São Gonçalo do Rio Abaixo',\n    'São Gonçalo do Rio Preto',\n    'São Gonçalo do Sapucaí',\n    'São Gotardo',\n    'São Joaquim de Bicas',\n    'São José da Barra',\n    'São José da Lapa',\n    'São José da Safira',\n    'São José da Varginha',\n    'São José do Alegre',\n    'São José do Divino',\n    'São José do Goiabal',\n    'São José do Jacuri',\n    'São José do Mantimento',\n    'São João Batista do Glória',\n    'São João Evangelista',\n    'São João Nepomuceno',\n    'São João da Lagoa',\n    'São João da Mata',\n    'São João da Ponte',\n    'São João das Missões',\n    'São João del Rei',\n    'São João do Manhuaçu',\n    'São João do Manteninha',\n    'São João do Oriente',\n    'São João do Pacuí',\n    'São João do Paraíso',\n    'São Lourenço',\n    'São Miguel do Anta',\n    'São Pedro da União',\n    'São Pedro do Suaçuí',\n    'São Pedro dos Ferros',\n    'São Romão',\n    'São Roque de Minas',\n    'São Sebastião da Bela Vista',\n    'São Sebastião da Vargem Alegre',\n    'São Sebastião do Anta',\n    'São Sebastião do Maranhão',\n    'São Sebastião do Oeste',\n    'São Sebastião do Paraíso',\n    'São Sebastião do Rio Preto',\n    'São Sebastião do Rio Verde',\n    'São Tiago',\n    'São Tomás de Aquino',\n    'São Tomé das Letras',\n    'São Vicente de Minas',\n    'Tabuleiro',\n    'Taiobeiras',\n    'Taparuba',\n    'Tapira',\n    'Tapiraí',\n    'Taquaraçu de Minas',\n    'Tarumirim',\n    'Teixeiras',\n    'Teófilo Otoni',\n    'Timóteo',\n    'Tiradentes',\n    'Tiros',\n    'Tocantins',\n    'Tocos do Moji',\n    'Toledo',\n    'Tombos',\n    'Três Corações',\n    'Três Marias',\n    'Três Pontas',\n    'Tumiritinga',\n    'Tupaciguara',\n    'Turmalina',\n    'Turvolândia',\n    'Ubaporanga',\n    'Ubaí',\n    'Uberaba',\n    'Uberlândia',\n    'Ubá',\n    'Umburatiba',\n    'Unaí',\n    'União de Minas',\n    'Uruana de Minas',\n    'Urucuia',\n    'Urucânia',\n    'Vargem Alegre',\n    'Vargem Bonita',\n    'Vargem Grande do Rio Pardo',\n    'Varginha',\n    'Varjão de Minas',\n    'Varzelândia',\n    'Vazante',\n    'Verdelândia',\n    'Veredinha',\n    'Vermelho Novo',\n    'Veríssimo',\n    'Vespasiano',\n    'Vieiras',\n    'Virgem da Lapa',\n    'Virginópolis',\n    'Virgolândia',\n    'Virgínia',\n    'Visconde do Rio Branco',\n    'Viçosa',\n    'Volta Grande',\n    'Várzea da Palma',\n    'Wenceslau Braz',\n    'Água Boa',\n    'Água Comprida',\n    'Águas Formosas',\n    'Águas Vermelhas',\n  ],\n  PA: [\n    'Abaetetuba',\n    'Abel Figueiredo',\n    'Acará',\n    'Afuá',\n    'Alenquer',\n    'Almeirim',\n    'Altamira',\n    'Anajás',\n    'Ananindeua',\n    'Anapu',\n    'Augusto Corrêa',\n    'Aurora do Pará',\n    'Aveiro',\n    'Bagre',\n    'Baião',\n    'Bannach',\n    'Barcarena',\n    'Belterra',\n    'Belém',\n    'Benevides',\n    'Bom Jesus do Tocantins',\n    'Bonito',\n    'Bragança',\n    'Brasil Novo',\n    'Brejo Grande do Araguaia',\n    'Breu Branco',\n    'Breves',\n    'Bujaru',\n    'Cachoeira do Arari',\n    'Cachoeira do Piriá',\n    'Cametá',\n    'Canaã dos Carajás',\n    'Capanema',\n    'Capitão Poço',\n    'Castanhal',\n    'Chaves',\n    'Colares',\n    'Conceição do Araguaia',\n    'Concórdia do Pará',\n    'Cumaru do Norte',\n    'Curionópolis',\n    'Curralinho',\n    'Curuá',\n    'Curuçá',\n    'Dom Eliseu',\n    'Eldorado do Carajás',\n    'Faro',\n    'Floresta do Araguaia',\n    'Garrafão do Norte',\n    'Goianésia do Pará',\n    'Gurupá',\n    'Igarapé-Açu',\n    'Igarapé-Miri',\n    'Inhangapi',\n    'Ipixuna do Pará',\n    'Irituia',\n    'Itaituba',\n    'Itupiranga',\n    'Jacareacanga',\n    'Jacundá',\n    'Juruti',\n    'Limoeiro do Ajuru',\n    'Magalhães Barata',\n    'Marabá',\n    'Maracanã',\n    'Marapanim',\n    'Marituba',\n    'Medicilândia',\n    'Melgaço',\n    'Mocajuba',\n    'Moju',\n    'Mojuí dos Campos',\n    'Monte Alegre',\n    'Muaná',\n    'Mãe do Rio',\n    'Nova Esperança do Piriá',\n    'Nova Ipixuna',\n    'Nova Timboteua',\n    'Novo Progresso',\n    'Novo Repartimento',\n    'Oeiras do Pará',\n    'Oriximiná',\n    'Ourilândia do Norte',\n    'Ourém',\n    'Pacajá',\n    'Palestina do Pará',\n    'Paragominas',\n    'Parauapebas',\n    \"Pau D'Arco\",\n    'Peixe-Boi',\n    'Piçarra',\n    'Placas',\n    'Ponta de Pedras',\n    'Portel',\n    'Porto de Moz',\n    'Prainha',\n    'Primavera',\n    'Quatipuru',\n    'Redenção',\n    'Rio Maria',\n    'Rondon do Pará',\n    'Rurópolis',\n    'Salinópolis',\n    'Salvaterra',\n    'Santa Bárbara do Pará',\n    'Santa Cruz do Arari',\n    'Santa Izabel do Pará',\n    'Santa Luzia do Pará',\n    'Santa Maria das Barreiras',\n    'Santa Maria do Pará',\n    'Santana do Araguaia',\n    'Santarém',\n    'Santarém Novo',\n    'Santo Antônio do Tauá',\n    'Sapucaia',\n    'Senador José Porfírio',\n    'Soure',\n    'São Caetano de Odivelas',\n    'São Domingos do Araguaia',\n    'São Domingos do Capim',\n    'São Francisco do Pará',\n    'São Félix do Xingu',\n    'São Geraldo do Araguaia',\n    'São João da Ponta',\n    'São João de Pirabas',\n    'São João do Araguaia',\n    'São Miguel do Guamá',\n    'São Sebastião da Boa Vista',\n    'Tailândia',\n    'Terra Alta',\n    'Terra Santa',\n    'Tomé-Açu',\n    'Tracuateua',\n    'Trairão',\n    'Tucumã',\n    'Tucuruí',\n    'Ulianópolis',\n    'Uruará',\n    'Vigia',\n    'Viseu',\n    'Vitória do Xingu',\n    'Xinguara',\n    'Água Azul do Norte',\n    'Óbidos',\n  ],\n  CE: [\n    'Abaiara',\n    'Acarape',\n    'Acaraú',\n    'Acopiara',\n    'Aiuaba',\n    'Alcântaras',\n    'Altaneira',\n    'Alto Santo',\n    'Amontada',\n    'Antonina do Norte',\n    'Apuiarés',\n    'Aquiraz',\n    'Aracati',\n    'Aracoiaba',\n    'Ararendá',\n    'Araripe',\n    'Aratuba',\n    'Arneiroz',\n    'Assaré',\n    'Aurora',\n    'Baixio',\n    'Banabuiú',\n    'Barbalha',\n    'Barreira',\n    'Barro',\n    'Barroquinha',\n    'Baturité',\n    'Beberibe',\n    'Bela Cruz',\n    'Boa Viagem',\n    'Brejo Santo',\n    'Camocim',\n    'Campos Sales',\n    'Canindé',\n    'Capistrano',\n    'Caridade',\n    'Caririaçu',\n    'Cariré',\n    'Cariús',\n    'Carnaubal',\n    'Cascavel',\n    'Catarina',\n    'Catunda',\n    'Caucaia',\n    'Cedro',\n    'Chaval',\n    'Chorozinho',\n    'Choró',\n    'Coreaú',\n    'Crateús',\n    'Crato',\n    'Croatá',\n    'Cruz',\n    'Deputado Irapuan Pinheiro',\n    'Ereré',\n    'Eusébio',\n    'Farias Brito',\n    'Forquilha',\n    'Fortaleza',\n    'Fortim',\n    'Frecheirinha',\n    'General Sampaio',\n    'Granja',\n    'Granjeiro',\n    'Graça',\n    'Groaíras',\n    'Guaiúba',\n    'Guaraciaba do Norte',\n    'Guaramiranga',\n    'Hidrolândia',\n    'Horizonte',\n    'Ibaretama',\n    'Ibiapina',\n    'Ibicuitinga',\n    'Icapuí',\n    'Icó',\n    'Iguatu',\n    'Independência',\n    'Ipaporanga',\n    'Ipaumirim',\n    'Ipu',\n    'Ipueiras',\n    'Iracema',\n    'Irauçuba',\n    'Itaitinga',\n    'Itaiçaba',\n    'Itapajé',\n    'Itapipoca',\n    'Itapiúna',\n    'Itarema',\n    'Itatira',\n    'Jaguaretama',\n    'Jaguaribara',\n    'Jaguaribe',\n    'Jaguaruana',\n    'Jardim',\n    'Jati',\n    'Jijoca de Jericoacoara',\n    'Juazeiro do Norte',\n    'Jucás',\n    'Lavras da Mangabeira',\n    'Limoeiro do Norte',\n    'Madalena',\n    'Maracanaú',\n    'Maranguape',\n    'Marco',\n    'Martinópole',\n    'Massapê',\n    'Mauriti',\n    'Meruoca',\n    'Milagres',\n    'Milhã',\n    'Miraíma',\n    'Missão Velha',\n    'Mombaça',\n    'Monsenhor Tabosa',\n    'Morada Nova',\n    'Moraújo',\n    'Morrinhos',\n    'Mucambo',\n    'Mulungu',\n    'Nova Olinda',\n    'Nova Russas',\n    'Novo Oriente',\n    'Ocara',\n    'Orós',\n    'Pacajus',\n    'Pacatuba',\n    'Pacoti',\n    'Pacujá',\n    'Palhano',\n    'Palmácia',\n    'Paracuru',\n    'Paraipaba',\n    'Parambu',\n    'Paramoti',\n    'Pedra Branca',\n    'Penaforte',\n    'Pentecoste',\n    'Pereiro',\n    'Pindoretama',\n    'Piquet Carneiro',\n    'Pires Ferreira',\n    'Poranga',\n    'Porteiras',\n    'Potengi',\n    'Potiretama',\n    'Quiterianópolis',\n    'Quixadá',\n    'Quixelô',\n    'Quixeramobim',\n    'Quixeré',\n    'Redenção',\n    'Reriutaba',\n    'Russas',\n    'Saboeiro',\n    'Salitre',\n    'Santa Quitéria',\n    'Santana do Acaraú',\n    'Santana do Cariri',\n    'Senador Pompeu',\n    'Senador Sá',\n    'Sobral',\n    'Solonópole',\n    'São Benedito',\n    'São Gonçalo do Amarante',\n    'São João do Jaguaribe',\n    'São Luís do Curu',\n    'Tabuleiro do Norte',\n    'Tamboril',\n    'Tarrafas',\n    'Tauá',\n    'Tejuçuoca',\n    'Tianguá',\n    'Trairi',\n    'Tururu',\n    'Ubajara',\n    'Umari',\n    'Umirim',\n    'Uruburetama',\n    'Uruoca',\n    'Varjota',\n    'Viçosa do Ceará',\n    'Várzea Alegre',\n  ],\n  BA: [\n    'Abaré',\n    'Abaíra',\n    'Acajutiba',\n    'Adustina',\n    'Aiquara',\n    'Alagoinhas',\n    'Alcobaça',\n    'Almadina',\n    'Amargosa',\n    'Amélia Rodrigues',\n    'América Dourada',\n    'Anagé',\n    'Andaraí',\n    'Andorinha',\n    'Angical',\n    'Anguera',\n    'Antas',\n    'Antônio Cardoso',\n    'Antônio Gonçalves',\n    'Aporá',\n    'Apuarema',\n    'Aracatu',\n    'Araci',\n    'Aramari',\n    'Arataca',\n    'Aratuípe',\n    'Araçás',\n    'Aurelino Leal',\n    'Baianópolis',\n    'Baixa Grande',\n    'Banzaê',\n    'Barra',\n    'Barra da Estiva',\n    'Barra do Choça',\n    'Barra do Mendes',\n    'Barra do Rocha',\n    'Barreiras',\n    'Barro Alto',\n    'Barro Preto',\n    'Barrocas',\n    'Belmonte',\n    'Belo Campo',\n    'Biritinga',\n    'Boa Nova',\n    'Boa Vista do Tupim',\n    'Bom Jesus da Lapa',\n    'Bom Jesus da Serra',\n    'Boninal',\n    'Bonito',\n    'Boquira',\n    'Botuporã',\n    'Brejolândia',\n    'Brejões',\n    'Brotas de Macaúbas',\n    'Brumado',\n    'Buerarema',\n    'Buritirama',\n    'Caatiba',\n    'Cabaceiras do Paraguaçu',\n    'Cachoeira',\n    'Caculé',\n    'Caetanos',\n    'Caetité',\n    'Cafarnaum',\n    'Cairu',\n    'Caldeirão Grande',\n    'Camacan',\n    'Camamu',\n    'Camaçari',\n    'Campo Alegre de Lourdes',\n    'Campo Formoso',\n    'Canarana',\n    'Canavieiras',\n    'Candeal',\n    'Candeias',\n    'Candiba',\n    'Cansanção',\n    'Canudos',\n    'Canápolis',\n    'Capela do Alto Alegre',\n    'Capim Grosso',\n    'Caravelas',\n    'Caraíbas',\n    'Cardeal da Silva',\n    'Carinhanha',\n    'Casa Nova',\n    'Castro Alves',\n    'Catolândia',\n    'Catu',\n    'Caturama',\n    'Caém',\n    'Central',\n    'Chorrochó',\n    'Cipó',\n    'Coaraci',\n    'Cocos',\n    'Conceição da Feira',\n    'Conceição do Almeida',\n    'Conceição do Coité',\n    'Conceição do Jacuípe',\n    'Conde',\n    'Condeúba',\n    'Contendas do Sincorá',\n    'Coração de Maria',\n    'Cordeiros',\n    'Coribe',\n    'Coronel João Sá',\n    'Correntina',\n    'Cotegipe',\n    'Cravolândia',\n    'Cristópolis',\n    'Crisópolis',\n    'Cruz das Almas',\n    'Curaçá',\n    'Cândido Sales',\n    'Cícero Dantas',\n    \"Dias d'Ávila\",\n    'Dom Basílio',\n    'Dom Macedo Costa',\n    'Dário Meira',\n    'Elísio Medrado',\n    'Encruzilhada',\n    'Entre Rios',\n    'Esplanada',\n    'Euclides da Cunha',\n    'Eunápolis',\n    'Feira da Mata',\n    'Feira de Santana',\n    'Filadélfia',\n    'Firmino Alves',\n    'Floresta Azul',\n    'Formosa do Rio Preto',\n    'Fátima',\n    'Gandu',\n    'Gavião',\n    'Gentio do Ouro',\n    'Glória',\n    'Gongogi',\n    'Governador Mangabeira',\n    'Guajeru',\n    'Guanambi',\n    'Guaratinga',\n    'Heliópolis',\n    'Iaçu',\n    'Ibiassucê',\n    'Ibicaraí',\n    'Ibicoara',\n    'Ibicuí',\n    'Ibipeba',\n    'Ibipitanga',\n    'Ibiquera',\n    'Ibirapitanga',\n    'Ibirapuã',\n    'Ibirataia',\n    'Ibitiara',\n    'Ibititá',\n    'Ibotirama',\n    'Ichu',\n    'Igaporã',\n    'Igrapiúna',\n    'Iguaí',\n    'Ilhéus',\n    'Inhambupe',\n    'Ipecaetá',\n    'Ipiaú',\n    'Ipirá',\n    'Ipupiara',\n    'Irajuba',\n    'Iramaia',\n    'Iraquara',\n    'Irará',\n    'Irecê',\n    'Itabela',\n    'Itaberaba',\n    'Itabuna',\n    'Itacaré',\n    'Itaeté',\n    'Itagi',\n    'Itagibá',\n    'Itagimirim',\n    'Itaguaçu da Bahia',\n    'Itaju do Colônia',\n    'Itajuípe',\n    'Itamaraju',\n    'Itamari',\n    'Itambé',\n    'Itanagra',\n    'Itanhém',\n    'Itaparica',\n    'Itapebi',\n    'Itapetinga',\n    'Itapicuru',\n    'Itapitanga',\n    'Itapé',\n    'Itaquara',\n    'Itarantim',\n    'Itatim',\n    'Itiruçu',\n    'Itiúba',\n    'Itororó',\n    'Ituaçu',\n    'Ituberá',\n    'Iuiu',\n    'Jaborandi',\n    'Jacaraci',\n    'Jacobina',\n    'Jaguaquara',\n    'Jaguarari',\n    'Jaguaripe',\n    'Jandaíra',\n    'Jequié',\n    'Jeremoabo',\n    'Jiquiriçá',\n    'Jitaúna',\n    'João Dourado',\n    'Juazeiro',\n    'Jucuruçu',\n    'Jussara',\n    'Jussari',\n    'Jussiape',\n    'Lafaiete Coutinho',\n    'Lagoa Real',\n    'Laje',\n    'Lajedinho',\n    'Lajedo do Tabocal',\n    'Lajedão',\n    'Lamarão',\n    'Lapão',\n    'Lauro de Freitas',\n    'Lençóis',\n    'Licínio de Almeida',\n    'Livramento de Nossa Senhora',\n    'Luís Eduardo Magalhães',\n    'Macajuba',\n    'Macarani',\n    'Macaúbas',\n    'Macururé',\n    'Madre de Deus',\n    'Maetinga',\n    'Maiquinique',\n    'Mairi',\n    'Malhada',\n    'Malhada de Pedras',\n    'Manoel Vitorino',\n    'Mansidão',\n    'Maracás',\n    'Maragogipe',\n    'Maraú',\n    'Marcionílio Souza',\n    'Mascote',\n    'Mata de São João',\n    'Matina',\n    'Medeiros Neto',\n    'Miguel Calmon',\n    'Milagres',\n    'Mirangaba',\n    'Mirante',\n    'Monte Santo',\n    'Morpará',\n    'Morro do Chapéu',\n    'Mortugaba',\n    'Mucugê',\n    'Mucuri',\n    'Mulungu do Morro',\n    'Mundo Novo',\n    'Muniz Ferreira',\n    'Muquém do São Francisco',\n    'Muritiba',\n    'Mutuípe',\n    'Nazaré',\n    'Nilo Peçanha',\n    'Nordestina',\n    'Nova Canaã',\n    'Nova Fátima',\n    'Nova Ibiá',\n    'Nova Itarana',\n    'Nova Redenção',\n    'Nova Soure',\n    'Nova Viçosa',\n    'Novo Horizonte',\n    'Novo Triunfo',\n    'Olindina',\n    'Oliveira dos Brejinhos',\n    'Ouriçangas',\n    'Ourolândia',\n    'Palmas de Monte Alto',\n    'Palmeiras',\n    'Paramirim',\n    'Paratinga',\n    'Paripiranga',\n    'Pau Brasil',\n    'Paulo Afonso',\n    'Pedro Alexandre',\n    'Pedrão',\n    'Piatã',\n    'Pilão Arcado',\n    'Pindaí',\n    'Pindobaçu',\n    'Pintadas',\n    'Piraí do Norte',\n    'Piripá',\n    'Piritiba',\n    'Planaltino',\n    'Planalto',\n    'Pojuca',\n    'Ponto Novo',\n    'Porto Seguro',\n    'Potiraguá',\n    'Poções',\n    'Prado',\n    'Presidente Dutra',\n    'Presidente Jânio Quadros',\n    'Presidente Tancredo Neves',\n    'Pé de Serra',\n    'Queimadas',\n    'Quijingue',\n    'Quixabeira',\n    'Rafael Jambeiro',\n    'Remanso',\n    'Retirolândia',\n    'Riacho de Santana',\n    'Riachão das Neves',\n    'Riachão do Jacuípe',\n    'Ribeira do Amparo',\n    'Ribeira do Pombal',\n    'Ribeirão do Largo',\n    'Rio Real',\n    'Rio de Contas',\n    'Rio do Antônio',\n    'Rio do Pires',\n    'Rodelas',\n    'Ruy Barbosa',\n    'Salinas da Margarida',\n    'Salvador',\n    'Santa Brígida',\n    'Santa Bárbara',\n    'Santa Cruz Cabrália',\n    'Santa Cruz da Vitória',\n    'Santa Inês',\n    'Santa Luzia',\n    'Santa Maria da Vitória',\n    'Santa Rita de Cássia',\n    'Santa Terezinha',\n    'Santaluz',\n    'Santana',\n    'Santanópolis',\n    'Santo Amaro',\n    'Santo Antônio de Jesus',\n    'Santo Estêvão',\n    'Sapeaçu',\n    'Saubara',\n    'Saúde',\n    'Seabra',\n    'Sebastião Laranjeiras',\n    'Senhor do Bonfim',\n    'Sento Sé',\n    'Serra Dourada',\n    'Serra Preta',\n    'Serra do Ramalho',\n    'Serrinha',\n    'Serrolândia',\n    'Simões Filho',\n    'Sobradinho',\n    'Souto Soares',\n    'Sátiro Dias',\n    'São Desidério',\n    'São Domingos',\n    'São Felipe',\n    'São Francisco do Conde',\n    'São Félix',\n    'São Félix do Coribe',\n    'São Gabriel',\n    'São Gonçalo dos Campos',\n    'São José da Vitória',\n    'São José do Jacuípe',\n    'São Miguel das Matas',\n    'São Sebastião do Passé',\n    'Sítio do Mato',\n    'Sítio do Quinto',\n    'Tabocas do Brejo Velho',\n    'Tanhaçu',\n    'Tanque Novo',\n    'Tanquinho',\n    'Taperoá',\n    'Tapiramutá',\n    'Teixeira de Freitas',\n    'Teodoro Sampaio',\n    'Teofilândia',\n    'Teolândia',\n    'Terra Nova',\n    'Tremedal',\n    'Tucano',\n    'Uauá',\n    'Ubaitaba',\n    'Ubatã',\n    'Ubaíra',\n    'Uibaí',\n    'Umburanas',\n    'Una',\n    'Urandi',\n    'Uruçuca',\n    'Utinga',\n    'Valente',\n    'Valença',\n    'Varzedo',\n    'Vera Cruz',\n    'Vereda',\n    'Vitória da Conquista',\n    'Várzea Nova',\n    'Várzea da Roça',\n    'Várzea do Poço',\n    'Wagner',\n    'Wanderley',\n    'Wenceslau Guimarães',\n    'Xique-Xique',\n    'Água Fria',\n    'Érico Cardoso',\n  ],\n  PR: [\n    'Abatiá',\n    'Adrianópolis',\n    'Agudos do Sul',\n    'Almirante Tamandaré',\n    'Altamira do Paraná',\n    'Alto Paraná',\n    'Alto Paraíso',\n    'Alto Piquiri',\n    'Altônia',\n    'Alvorada do Sul',\n    'Amaporã',\n    'Ampére',\n    'Anahy',\n    'Andirá',\n    'Antonina',\n    'Antônio Olinto',\n    'Apucarana',\n    'Arapongas',\n    'Arapoti',\n    'Arapuã',\n    'Araruna',\n    'Araucária',\n    'Ariranha do Ivaí',\n    'Assaí',\n    'Assis Chateaubriand',\n    'Astorga',\n    'Atalaia',\n    'Balsa Nova',\n    'Bandeirantes',\n    'Barbosa Ferraz',\n    'Barra do Jacaré',\n    'Barracão',\n    'Bela Vista da Caroba',\n    'Bela Vista do Paraíso',\n    'Bituruna',\n    'Boa Esperança',\n    'Boa Esperança do Iguaçu',\n    'Boa Ventura de São Roque',\n    'Boa Vista da Aparecida',\n    'Bocaiúva do Sul',\n    'Bom Jesus do Sul',\n    'Bom Sucesso',\n    'Bom Sucesso do Sul',\n    'Borrazópolis',\n    'Braganey',\n    'Brasilândia do Sul',\n    'Cafeara',\n    'Cafelândia',\n    'Cafezal do Sul',\n    'Califórnia',\n    'Cambará',\n    'Cambira',\n    'Cambé',\n    'Campina Grande do Sul',\n    'Campina da Lagoa',\n    'Campina do Simão',\n    'Campo Bonito',\n    'Campo Largo',\n    'Campo Magro',\n    'Campo Mourão',\n    'Campo do Tenente',\n    'Candói',\n    'Cantagalo',\n    'Capanema',\n    'Capitão Leônidas Marques',\n    'Carambeí',\n    'Carlópolis',\n    'Cascavel',\n    'Castro',\n    'Catanduvas',\n    'Centenário do Sul',\n    'Cerro Azul',\n    'Chopinzinho',\n    'Cianorte',\n    'Cidade Gaúcha',\n    'Clevelândia',\n    'Colombo',\n    'Colorado',\n    'Congonhinhas',\n    'Conselheiro Mairinck',\n    'Contenda',\n    'Corbélia',\n    'Cornélio Procópio',\n    'Coronel Domingos Soares',\n    'Coronel Vivida',\n    'Corumbataí do Sul',\n    'Cruz Machado',\n    'Cruzeiro do Iguaçu',\n    'Cruzeiro do Oeste',\n    'Cruzeiro do Sul',\n    'Cruzmaltina',\n    'Curitiba',\n    'Curiúva',\n    'Cândido de Abreu',\n    'Céu Azul',\n    \"Diamante D'Oeste\",\n    'Diamante do Norte',\n    'Diamante do Sul',\n    'Dois Vizinhos',\n    'Douradina',\n    'Doutor Camargo',\n    'Doutor Ulysses',\n    'Engenheiro Beltrão',\n    'Entre Rios do Oeste',\n    'Enéas Marques',\n    'Esperança Nova',\n    'Espigão Alto do Iguaçu',\n    'Farol',\n    'Faxinal',\n    'Fazenda Rio Grande',\n    'Fernandes Pinheiro',\n    'Figueira',\n    'Flor da Serra do Sul',\n    'Floraí',\n    'Floresta',\n    'Florestópolis',\n    'Flórida',\n    'Formosa do Oeste',\n    'Foz do Iguaçu',\n    'Foz do Jordão',\n    'Francisco Alves',\n    'Francisco Beltrão',\n    'Fênix',\n    'General Carneiro',\n    'Godoy Moreira',\n    'Goioerê',\n    'Goioxim',\n    'Grandes Rios',\n    'Guairaçá',\n    'Guamiranga',\n    'Guapirama',\n    'Guaporema',\n    'Guaraci',\n    'Guaraniaçu',\n    'Guarapuava',\n    'Guaraqueçaba',\n    'Guaratuba',\n    'Guaíra',\n    'Honório Serpa',\n    'Ibaiti',\n    'Ibema',\n    'Ibiporã',\n    'Icaraíma',\n    'Iguaraçu',\n    'Iguatu',\n    'Imbaú',\n    'Imbituva',\n    'Inajá',\n    'Indianópolis',\n    'Inácio Martins',\n    'Ipiranga',\n    'Iporã',\n    'Iracema do Oeste',\n    'Irati',\n    'Iretama',\n    'Itaguajé',\n    'Itaipulândia',\n    'Itambaracá',\n    'Itambé',\n    \"Itapejara d'Oeste\",\n    'Itaperuçu',\n    'Itaúna do Sul',\n    'Ivaiporã',\n    'Ivatuba',\n    'Ivaté',\n    'Ivaí',\n    'Jaboti',\n    'Jacarezinho',\n    'Jaguapitã',\n    'Jaguariaíva',\n    'Jandaia do Sul',\n    'Janiópolis',\n    'Japira',\n    'Japurá',\n    'Jardim Alegre',\n    'Jardim Olinda',\n    'Jataizinho',\n    'Jesuítas',\n    'Joaquim Távora',\n    'Jundiaí do Sul',\n    'Juranda',\n    'Jussara',\n    'Kaloré',\n    'Lapa',\n    'Laranjal',\n    'Laranjeiras do Sul',\n    'Leópolis',\n    'Lidianópolis',\n    'Lindoeste',\n    'Loanda',\n    'Lobato',\n    'Londrina',\n    'Luiziana',\n    'Lunardelli',\n    'Lupionópolis',\n    'Mallet',\n    'Mamborê',\n    'Mandaguari',\n    'Mandaguaçu',\n    'Mandirituba',\n    'Manfrinópolis',\n    'Mangueirinha',\n    'Manoel Ribas',\n    'Marechal Cândido Rondon',\n    'Maria Helena',\n    'Marialva',\n    'Marilena',\n    'Mariluz',\n    'Marilândia do Sul',\n    'Maringá',\n    'Maripá',\n    'Mariópolis',\n    'Marmeleiro',\n    'Marquinho',\n    'Marumbi',\n    'Matelândia',\n    'Matinhos',\n    'Mato Rico',\n    'Mauá da Serra',\n    'Medianeira',\n    'Mercedes',\n    'Mirador',\n    'Miraselva',\n    'Missal',\n    'Moreira Sales',\n    'Morretes',\n    'Munhoz de Melo',\n    'Nossa Senhora das Graças',\n    'Nova Aliança do Ivaí',\n    'Nova América da Colina',\n    'Nova Aurora',\n    'Nova Cantu',\n    'Nova Esperança',\n    'Nova Esperança do Sudoeste',\n    'Nova Fátima',\n    'Nova Laranjeiras',\n    'Nova Londrina',\n    'Nova Olímpia',\n    'Nova Prata do Iguaçu',\n    'Nova Santa Bárbara',\n    'Nova Santa Rosa',\n    'Nova Tebas',\n    'Novo Itacolomi',\n    'Ortigueira',\n    'Ourizona',\n    'Ouro Verde do Oeste',\n    'Paiçandu',\n    'Palmas',\n    'Palmeira',\n    'Palmital',\n    'Palotina',\n    'Paranacity',\n    'Paranaguá',\n    'Paranapoema',\n    'Paranavaí',\n    'Paraíso do Norte',\n    'Pato Bragado',\n    'Pato Branco',\n    'Paula Freitas',\n    'Paulo Frontin',\n    'Peabiru',\n    'Perobal',\n    'Pinhais',\n    'Pinhal de São Bento',\n    'Pinhalão',\n    'Pinhão',\n    'Piraquara',\n    'Piraí do Sul',\n    'Pitanga',\n    'Pitangueiras',\n    'Piên',\n    'Planaltina do Paraná',\n    'Planalto',\n    'Ponta Grossa',\n    'Pontal do Paraná',\n    'Porecatu',\n    'Porto Amazonas',\n    'Porto Barreiro',\n    'Porto Rico',\n    'Porto Vitória',\n    'Prado Ferreira',\n    'Pranchita',\n    'Presidente Castelo Branco',\n    'Primeiro de Maio',\n    'Prudentópolis',\n    'Pérola',\n    \"Pérola d'Oeste\",\n    'Quarto Centenário',\n    'Quatiguá',\n    'Quatro Barras',\n    'Quatro Pontes',\n    'Quedas do Iguaçu',\n    'Querência do Norte',\n    'Quinta do Sol',\n    'Quitandinha',\n    'Ramilândia',\n    'Rancho Alegre',\n    \"Rancho Alegre D'Oeste\",\n    'Realeza',\n    'Rebouças',\n    'Renascença',\n    'Reserva',\n    'Reserva do Iguaçu',\n    'Ribeirão Claro',\n    'Ribeirão do Pinhal',\n    'Rio Azul',\n    'Rio Bom',\n    'Rio Bonito do Iguaçu',\n    'Rio Branco do Ivaí',\n    'Rio Branco do Sul',\n    'Rio Negro',\n    'Rolândia',\n    'Roncador',\n    'Rondon',\n    'Rosário do Ivaí',\n    'Sabáudia',\n    'Salgado Filho',\n    'Salto do Itararé',\n    'Salto do Lontra',\n    'Santa Amélia',\n    'Santa Cecília do Pavão',\n    'Santa Cruz de Monte Castelo',\n    'Santa Fé',\n    'Santa Helena',\n    'Santa Inês',\n    'Santa Isabel do Ivaí',\n    'Santa Izabel do Oeste',\n    'Santa Lúcia',\n    'Santa Maria do Oeste',\n    'Santa Mariana',\n    'Santa Mônica',\n    'Santa Tereza do Oeste',\n    'Santa Terezinha de Itaipu',\n    'Santana do Itararé',\n    'Santo Antônio da Platina',\n    'Santo Antônio do Caiuá',\n    'Santo Antônio do Paraíso',\n    'Santo Antônio do Sudoeste',\n    'Santo Inácio',\n    'Sapopema',\n    'Sarandi',\n    'Saudade do Iguaçu',\n    'Sengés',\n    'Serranópolis do Iguaçu',\n    'Sertaneja',\n    'Sertanópolis',\n    'Siqueira Campos',\n    'Sulina',\n    'São Carlos do Ivaí',\n    'São Jerônimo da Serra',\n    \"São Jorge d'Oeste\",\n    'São Jorge do Ivaí',\n    'São Jorge do Patrocínio',\n    'São José da Boa Vista',\n    'São José das Palmeiras',\n    'São José dos Pinhais',\n    'São João',\n    'São João do Caiuá',\n    'São João do Ivaí',\n    'São João do Triunfo',\n    'São Manoel do Paraná',\n    'São Mateus do Sul',\n    'São Miguel do Iguaçu',\n    'São Pedro do Iguaçu',\n    'São Pedro do Ivaí',\n    'São Pedro do Paraná',\n    'São Sebastião da Amoreira',\n    'São Tomé',\n    'Tamarana',\n    'Tamboara',\n    'Tapejara',\n    'Tapira',\n    'Teixeira Soares',\n    'Telêmaco Borba',\n    'Terra Boa',\n    'Terra Rica',\n    'Terra Roxa',\n    'Tibagi',\n    'Tijucas do Sul',\n    'Toledo',\n    'Tomazina',\n    'Três Barras do Paraná',\n    'Tunas do Paraná',\n    'Tuneiras do Oeste',\n    'Tupãssi',\n    'Turvo',\n    'Ubiratã',\n    'Umuarama',\n    'Uniflor',\n    'União da Vitória',\n    'Uraí',\n    'Ventania',\n    'Vera Cruz do Oeste',\n    'Verê',\n    'Virmond',\n    'Vitorino',\n    'Wenceslau Braz',\n    'Xambrê',\n    'Ângulo',\n  ],\n  SC: [\n    'Abdon Batista',\n    'Abelardo Luz',\n    'Agrolândia',\n    'Agronômica',\n    'Alfredo Wagner',\n    'Alto Bela Vista',\n    'Anchieta',\n    'Angelina',\n    'Anita Garibaldi',\n    'Anitápolis',\n    'Antônio Carlos',\n    'Apiúna',\n    'Arabutã',\n    'Araquari',\n    'Araranguá',\n    'Armazém',\n    'Arroio Trinta',\n    'Arvoredo',\n    'Ascurra',\n    'Atalanta',\n    'Aurora',\n    'Balneário Arroio do Silva',\n    'Balneário Barra do Sul',\n    'Balneário Camboriú',\n    'Balneário Gaivota',\n    'Balneário Piçarras',\n    'Balneário Rincão',\n    'Bandeirante',\n    'Barra Bonita',\n    'Barra Velha',\n    'Bela Vista do Toldo',\n    'Belmonte',\n    'Benedito Novo',\n    'Biguaçu',\n    'Blumenau',\n    'Bocaina do Sul',\n    'Bom Jardim da Serra',\n    'Bom Jesus',\n    'Bom Jesus do Oeste',\n    'Bom Retiro',\n    'Bombinhas',\n    'Botuverá',\n    'Braço do Norte',\n    'Braço do Trombudo',\n    'Brunópolis',\n    'Brusque',\n    'Caibi',\n    'Calmon',\n    'Camboriú',\n    'Campo Alegre',\n    'Campo Belo do Sul',\n    'Campo Erê',\n    'Campos Novos',\n    'Canelinha',\n    'Canoinhas',\n    'Capinzal',\n    'Capivari de Baixo',\n    'Capão Alto',\n    'Catanduvas',\n    'Caxambu do Sul',\n    'Caçador',\n    'Celso Ramos',\n    'Cerro Negro',\n    'Chapadão do Lageado',\n    'Chapecó',\n    'Cocal do Sul',\n    'Concórdia',\n    'Cordilheira Alta',\n    'Coronel Freitas',\n    'Coronel Martins',\n    'Correia Pinto',\n    'Corupá',\n    'Criciúma',\n    'Cunha Porã',\n    'Cunhataí',\n    'Curitibanos',\n    'Descanso',\n    'Dionísio Cerqueira',\n    'Dona Emma',\n    'Doutor Pedrinho',\n    'Entre Rios',\n    'Ermo',\n    'Erval Velho',\n    'Faxinal dos Guedes',\n    'Flor do Sertão',\n    'Florianópolis',\n    'Formosa do Sul',\n    'Forquilhinha',\n    'Fraiburgo',\n    'Frei Rogério',\n    'Galvão',\n    'Garopaba',\n    'Garuva',\n    'Gaspar',\n    'Governador Celso Ramos',\n    'Gravatal',\n    'Grão Pará',\n    'Guabiruba',\n    'Guaraciaba',\n    'Guaramirim',\n    'Guarujá do Sul',\n    'Guatambú',\n    \"Herval d'Oeste\",\n    'Ibiam',\n    'Ibicaré',\n    'Ibirama',\n    'Ilhota',\n    'Imaruí',\n    'Imbituba',\n    'Imbuia',\n    'Indaial',\n    'Iomerê',\n    'Ipira',\n    'Iporã do Oeste',\n    'Ipuaçu',\n    'Ipumirim',\n    'Iraceminha',\n    'Irani',\n    'Irati',\n    'Irineópolis',\n    'Itaiópolis',\n    'Itajaí',\n    'Itapema',\n    'Itapiranga',\n    'Itapoá',\n    'Ituporanga',\n    'Itá',\n    'Içara',\n    'Jaborá',\n    'Jacinto Machado',\n    'Jaguaruna',\n    'Jaraguá do Sul',\n    'Jardinópolis',\n    'Joaçaba',\n    'Joinville',\n    'José Boiteux',\n    'Jupiá',\n    'Lacerdópolis',\n    'Lages',\n    'Laguna',\n    'Lajeado Grande',\n    'Laurentino',\n    'Lauro Müller',\n    'Lebon Régis',\n    'Leoberto Leal',\n    'Lindóia do Sul',\n    'Lontras',\n    'Luiz Alves',\n    'Luzerna',\n    'Macieira',\n    'Mafra',\n    'Major Gercino',\n    'Major Vieira',\n    'Maracajá',\n    'Maravilha',\n    'Marema',\n    'Massaranduba',\n    'Matos Costa',\n    'Meleiro',\n    'Mirim Doce',\n    'Modelo',\n    'Mondaí',\n    'Monte Carlo',\n    'Monte Castelo',\n    'Morro Grande',\n    'Morro da Fumaça',\n    'Navegantes',\n    'Nova Erechim',\n    'Nova Itaberaba',\n    'Nova Trento',\n    'Nova Veneza',\n    'Novo Horizonte',\n    'Orleans',\n    'Otacílio Costa',\n    'Ouro',\n    'Ouro Verde',\n    'Paial',\n    'Painel',\n    'Palhoça',\n    'Palma Sola',\n    'Palmeira',\n    'Palmitos',\n    'Papanduva',\n    'Paraíso',\n    'Passo de Torres',\n    'Passos Maia',\n    'Paulo Lopes',\n    'Pedras Grandes',\n    'Penha',\n    'Peritiba',\n    'Pescaria Brava',\n    'Petrolândia',\n    'Pinhalzinho',\n    'Pinheiro Preto',\n    'Piratuba',\n    'Planalto Alegre',\n    'Pomerode',\n    'Ponte Alta',\n    'Ponte Alta do Norte',\n    'Ponte Serrada',\n    'Porto Belo',\n    'Porto União',\n    'Pouso Redondo',\n    'Praia Grande',\n    'Presidente Castello Branco',\n    'Presidente Getúlio',\n    'Presidente Nereu',\n    'Princesa',\n    'Quilombo',\n    'Rancho Queimado',\n    'Rio Fortuna',\n    'Rio Negrinho',\n    'Rio Rufino',\n    'Rio das Antas',\n    'Rio do Campo',\n    'Rio do Oeste',\n    'Rio do Sul',\n    'Rio dos Cedros',\n    'Riqueza',\n    'Rodeio',\n    'Romelândia',\n    'Salete',\n    'Saltinho',\n    'Salto Veloso',\n    'Sangão',\n    'Santa Cecília',\n    'Santa Helena',\n    'Santa Rosa de Lima',\n    'Santa Rosa do Sul',\n    'Santa Terezinha',\n    'Santa Terezinha do Progresso',\n    'Santiago do Sul',\n    'Santo Amaro da Imperatriz',\n    'Saudades',\n    'Schroeder',\n    'Seara',\n    'Serra Alta',\n    'Siderópolis',\n    'Sombrio',\n    'Sul Brasil',\n    'São Bento do Sul',\n    'São Bernardino',\n    'São Bonifácio',\n    'São Carlos',\n    'São Cristóvão do Sul',\n    'São Domingos',\n    'São Francisco do Sul',\n    'São Joaquim',\n    'São José',\n    'São José do Cedro',\n    'São José do Cerrito',\n    'São João Batista',\n    'São João do Itaperiú',\n    'São João do Oeste',\n    'São João do Sul',\n    'São Lourenço do Oeste',\n    'São Ludgero',\n    'São Martinho',\n    'São Miguel da Boa Vista',\n    'São Miguel do Oeste',\n    'São Pedro de Alcântara',\n    'Taió',\n    'Tangará',\n    'Tigrinhos',\n    'Tijucas',\n    'Timbé do Sul',\n    'Timbó',\n    'Timbó Grande',\n    'Treviso',\n    'Treze Tílias',\n    'Treze de Maio',\n    'Trombudo Central',\n    'Três Barras',\n    'Tubarão',\n    'Tunápolis',\n    'Turvo',\n    'União do Oeste',\n    'Urubici',\n    'Urupema',\n    'Urussanga',\n    'Vargem',\n    'Vargem Bonita',\n    'Vargeão',\n    'Vidal Ramos',\n    'Videira',\n    'Vitor Meireles',\n    'Witmarsum',\n    'Xanxerê',\n    'Xavantina',\n    'Xaxim',\n    'Zortéa',\n    'Água Doce',\n    'Águas Frias',\n    'Águas Mornas',\n    'Águas de Chapecó',\n  ],\n  PE: [\n    'Abreu e Lima',\n    'Afogados da Ingazeira',\n    'Afrânio',\n    'Agrestina',\n    'Alagoinha',\n    'Aliança',\n    'Altinho',\n    'Amaraji',\n    'Angelim',\n    'Araripina',\n    'Araçoiaba',\n    'Arcoverde',\n    'Barra de Guabiraba',\n    'Barreiros',\n    'Belo Jardim',\n    'Belém de Maria',\n    'Belém do São Francisco',\n    'Betânia',\n    'Bezerros',\n    'Bodocó',\n    'Bom Conselho',\n    'Bom Jardim',\n    'Bonito',\n    'Brejinho',\n    'Brejo da Madre de Deus',\n    'Brejão',\n    'Buenos Aires',\n    'Buíque',\n    'Cabo de Santo Agostinho',\n    'Cabrobó',\n    'Cachoeirinha',\n    'Caetés',\n    'Calumbi',\n    'Calçado',\n    'Camaragibe',\n    'Camocim de São Félix',\n    'Camutanga',\n    'Canhotinho',\n    'Capoeiras',\n    'Carnaubeira da Penha',\n    'Carnaíba',\n    'Carpina',\n    'Caruaru',\n    'Casinhas',\n    'Catende',\n    'Cedro',\n    'Chã Grande',\n    'Chã de Alegria',\n    'Condado',\n    'Correntes',\n    'Cortês',\n    'Cumaru',\n    'Cupira',\n    'Custódia',\n    'Dormentes',\n    'Escada',\n    'Exu',\n    'Feira Nova',\n    'Fernando de Noronha',\n    'Ferreiros',\n    'Flores',\n    'Floresta',\n    'Frei Miguelinho',\n    'Gameleira',\n    'Garanhuns',\n    'Glória do Goitá',\n    'Goiana',\n    'Granito',\n    'Gravatá',\n    'Iati',\n    'Ibimirim',\n    'Ibirajuba',\n    'Igarassu',\n    'Iguaracy',\n    'Ilha de Itamaracá',\n    'Inajá',\n    'Ingazeira',\n    'Ipojuca',\n    'Ipubi',\n    'Itacuruba',\n    'Itambé',\n    'Itapetim',\n    'Itapissuma',\n    'Itaquitinga',\n    'Itaíba',\n    'Jaboatão dos Guararapes',\n    'Jaqueira',\n    'Jataúba',\n    'Jatobá',\n    'Joaquim Nabuco',\n    'João Alfredo',\n    'Jucati',\n    'Jupi',\n    'Jurema',\n    'Lagoa Grande',\n    'Lagoa de Itaenga',\n    'Lagoa do Carro',\n    'Lagoa do Ouro',\n    'Lagoa dos Gatos',\n    'Lajedo',\n    'Limoeiro',\n    'Macaparana',\n    'Machados',\n    'Manari',\n    'Maraial',\n    'Mirandiba',\n    'Moreilândia',\n    'Moreno',\n    'Nazaré da Mata',\n    'Olinda',\n    'Orobó',\n    'Orocó',\n    'Ouricuri',\n    'Palmares',\n    'Palmeirina',\n    'Panelas',\n    'Paranatama',\n    'Parnamirim',\n    'Passira',\n    'Paudalho',\n    'Paulista',\n    'Pedra',\n    'Pesqueira',\n    'Petrolina',\n    'Petrolândia',\n    'Pombos',\n    'Poção',\n    'Primavera',\n    'Quipapá',\n    'Quixaba',\n    'Recife',\n    'Riacho das Almas',\n    'Ribeirão',\n    'Rio Formoso',\n    'Sairé',\n    'Salgadinho',\n    'Salgueiro',\n    'Saloá',\n    'Sanharó',\n    'Santa Cruz',\n    'Santa Cruz da Baixa Verde',\n    'Santa Cruz do Capibaribe',\n    'Santa Filomena',\n    'Santa Maria da Boa Vista',\n    'Santa Maria do Cambucá',\n    'Santa Terezinha',\n    'Serra Talhada',\n    'Serrita',\n    'Sertânia',\n    'Sirinhaém',\n    'Solidão',\n    'Surubim',\n    'São Benedito do Sul',\n    'São Bento do Una',\n    'São Caitano',\n    'São Joaquim do Monte',\n    'São José da Coroa Grande',\n    'São José do Belmonte',\n    'São José do Egito',\n    'São João',\n    'São Lourenço da Mata',\n    'São Vicente Férrer',\n    'Tabira',\n    'Tacaimbó',\n    'Tacaratu',\n    'Tamandaré',\n    'Taquaritinga do Norte',\n    'Terezinha',\n    'Terra Nova',\n    'Timbaúba',\n    'Toritama',\n    'Tracunhaém',\n    'Trindade',\n    'Triunfo',\n    'Tupanatinga',\n    'Tuparetama',\n    'Venturosa',\n    'Verdejante',\n    'Vertente do Lério',\n    'Vertentes',\n    'Vicência',\n    'Vitória de Santo Antão',\n    'Xexéu',\n    'Água Preta',\n    'Águas Belas',\n  ],\n  TO: [\n    'Abreulândia',\n    'Aguiarnópolis',\n    'Aliança do Tocantins',\n    'Almas',\n    'Alvorada',\n    'Ananás',\n    'Angico',\n    'Aparecida do Rio Negro',\n    'Aragominas',\n    'Araguacema',\n    'Araguanã',\n    'Araguatins',\n    'Araguaçu',\n    'Araguaína',\n    'Arapoema',\n    'Arraias',\n    'Augustinópolis',\n    'Aurora do Tocantins',\n    'Axixá do Tocantins',\n    'Babaçulândia',\n    'Bandeirantes do Tocantins',\n    'Barra do Ouro',\n    'Barrolândia',\n    'Bernardo Sayão',\n    'Bom Jesus do Tocantins',\n    'Brasilândia do Tocantins',\n    'Brejinho de Nazaré',\n    'Buriti do Tocantins',\n    'Cachoeirinha',\n    'Campos Lindos',\n    'Cariri do Tocantins',\n    'Carmolândia',\n    'Carrasco Bonito',\n    'Caseara',\n    'Centenário',\n    'Chapada da Natividade',\n    'Chapada de Areia',\n    'Colinas do Tocantins',\n    'Colméia',\n    'Combinado',\n    'Conceição do Tocantins',\n    'Couto Magalhães',\n    'Cristalândia',\n    'Crixás do Tocantins',\n    'Darcinópolis',\n    'Dianópolis',\n    'Divinópolis do Tocantins',\n    'Dois Irmãos do Tocantins',\n    'Dueré',\n    'Esperantina',\n    'Figueirópolis',\n    'Filadélfia',\n    'Formoso do Araguaia',\n    'Fátima',\n    'Goianorte',\n    'Goiatins',\n    'Guaraí',\n    'Gurupi',\n    'Ipueiras',\n    'Itacajá',\n    'Itaguatins',\n    'Itapiratins',\n    'Itaporã do Tocantins',\n    'Jaú do Tocantins',\n    'Juarina',\n    'Lagoa da Confusão',\n    'Lagoa do Tocantins',\n    'Lajeado',\n    'Lavandeira',\n    'Lizarda',\n    'Luzinópolis',\n    'Marianópolis do Tocantins',\n    'Mateiros',\n    'Maurilândia do Tocantins',\n    'Miracema do Tocantins',\n    'Miranorte',\n    'Monte Santo do Tocantins',\n    'Monte do Carmo',\n    'Muricilândia',\n    'Natividade',\n    'Nazaré',\n    'Nova Olinda',\n    'Nova Rosalândia',\n    'Novo Acordo',\n    'Novo Alegre',\n    'Novo Jardim',\n    'Oliveira de Fátima',\n    'Palmas',\n    'Palmeirante',\n    'Palmeiras do Tocantins',\n    'Palmeirópolis',\n    'Paranã',\n    'Paraíso do Tocantins',\n    \"Pau D'Arco\",\n    'Pedro Afonso',\n    'Peixe',\n    'Pequizeiro',\n    'Pindorama do Tocantins',\n    'Piraquê',\n    'Pium',\n    'Ponte Alta do Bom Jesus',\n    'Ponte Alta do Tocantins',\n    'Porto Alegre do Tocantins',\n    'Porto Nacional',\n    'Praia Norte',\n    'Presidente Kennedy',\n    'Pugmil',\n    'Recursolândia',\n    'Riachinho',\n    'Rio Sono',\n    'Rio da Conceição',\n    'Rio dos Bois',\n    'Sampaio',\n    'Sandolândia',\n    'Santa Fé do Araguaia',\n    'Santa Maria do Tocantins',\n    'Santa Rita do Tocantins',\n    'Santa Rosa do Tocantins',\n    'Santa Tereza do Tocantins',\n    'Santa Terezinha do Tocantins',\n    'Silvanópolis',\n    'Sucupira',\n    'São Bento do Tocantins',\n    'São Félix do Tocantins',\n    'São Miguel do Tocantins',\n    'São Salvador do Tocantins',\n    'São Sebastião do Tocantins',\n    'São Valério',\n    'Sítio Novo do Tocantins',\n    'Tabocão',\n    'Taguatinga',\n    'Taipas do Tocantins',\n    'Talismã',\n    'Tocantinópolis',\n    'Tocantínia',\n    'Tupirama',\n    'Tupiratins',\n    'Wanderlândia',\n    'Xambioá',\n  ],\n  RN: [\n    'Acari',\n    'Afonso Bezerra',\n    'Alexandria',\n    'Almino Afonso',\n    'Alto do Rodrigues',\n    'Angicos',\n    'Antônio Martins',\n    'Apodi',\n    'Areia Branca',\n    'Arês',\n    'Açu',\n    'Baraúna',\n    'Barcelona',\n    'Baía Formosa',\n    'Bento Fernandes',\n    'Bodó',\n    'Bom Jesus',\n    'Brejinho',\n    'Caicó',\n    'Caiçara do Norte',\n    'Caiçara do Rio do Vento',\n    'Campo Grande',\n    'Campo Redondo',\n    'Canguaretama',\n    'Caraúbas',\n    'Carnaubais',\n    'Carnaúba dos Dantas',\n    'Ceará-Mirim',\n    'Cerro Corá',\n    'Coronel Ezequiel',\n    'Coronel João Pessoa',\n    'Cruzeta',\n    'Currais Novos',\n    'Doutor Severiano',\n    'Encanto',\n    'Equador',\n    'Espírito Santo',\n    'Extremoz',\n    'Felipe Guerra',\n    'Fernando Pedroza',\n    'Florânia',\n    'Francisco Dantas',\n    'Frutuoso Gomes',\n    'Galinhos',\n    'Goianinha',\n    'Governador Dix-Sept Rosado',\n    'Grossos',\n    'Guamaré',\n    'Ielmo Marinho',\n    'Ipanguaçu',\n    'Ipueira',\n    'Itajá',\n    'Itaú',\n    'Jandaíra',\n    'Janduís',\n    'Januário Cicco',\n    'Japi',\n    'Jardim de Angicos',\n    'Jardim de Piranhas',\n    'Jardim do Seridó',\n    'Jaçanã',\n    'José da Penha',\n    'João Câmara',\n    'João Dias',\n    'Jucurutu',\n    'Jundiá',\n    'Lagoa Nova',\n    'Lagoa Salgada',\n    \"Lagoa d'Anta\",\n    'Lagoa de Pedras',\n    'Lagoa de Velhos',\n    'Lajes',\n    'Lajes Pintadas',\n    'Lucrécia',\n    'Luís Gomes',\n    'Macau',\n    'Macaíba',\n    'Major Sales',\n    'Marcelino Vieira',\n    'Martins',\n    'Maxaranguape',\n    'Messias Targino',\n    'Montanhas',\n    'Monte Alegre',\n    'Monte das Gameleiras',\n    'Mossoró',\n    'Natal',\n    'Nova Cruz',\n    'Nísia Floresta',\n    \"Olho d'Água do Borges\",\n    'Ouro Branco',\n    'Paraná',\n    'Parazinho',\n    'Paraú',\n    'Parelhas',\n    'Parnamirim',\n    'Passa e Fica',\n    'Passagem',\n    'Patu',\n    'Pau dos Ferros',\n    'Pedra Grande',\n    'Pedra Preta',\n    'Pedro Avelino',\n    'Pedro Velho',\n    'Pendências',\n    'Pilões',\n    'Portalegre',\n    'Porto do Mangue',\n    'Poço Branco',\n    'Pureza',\n    'Rafael Fernandes',\n    'Rafael Godeiro',\n    'Riacho da Cruz',\n    'Riacho de Santana',\n    'Riachuelo',\n    'Rio do Fogo',\n    'Rodolfo Fernandes',\n    'Ruy Barbosa',\n    'Santa Cruz',\n    'Santa Maria',\n    'Santana do Matos',\n    'Santana do Seridó',\n    'Santo Antônio',\n    'Senador Elói de Souza',\n    'Senador Georgino Avelino',\n    'Serra Caiada',\n    'Serra Negra do Norte',\n    'Serra de São Bento',\n    'Serra do Mel',\n    'Serrinha',\n    'Serrinha dos Pintos',\n    'Severiano Melo',\n    'São Bento do Norte',\n    'São Bento do Trairí',\n    'São Fernando',\n    'São Francisco do Oeste',\n    'São Gonçalo do Amarante',\n    'São José de Mipibu',\n    'São José do Campestre',\n    'São José do Seridó',\n    'São João do Sabugi',\n    'São Miguel',\n    'São Miguel do Gostoso',\n    'São Paulo do Potengi',\n    'São Pedro',\n    'São Rafael',\n    'São Tomé',\n    'São Vicente',\n    'Sítio Novo',\n    'Taboleiro Grande',\n    'Taipu',\n    'Tangará',\n    'Tenente Ananias',\n    'Tenente Laurentino Cruz',\n    'Tibau',\n    'Tibau do Sul',\n    'Timbaúba dos Batistas',\n    'Touros',\n    'Triunfo Potiguar',\n    'Umarizal',\n    'Upanema',\n    'Venha-Ver',\n    'Vera Cruz',\n    'Vila Flor',\n    'Viçosa',\n    'Várzea',\n    'Água Nova',\n  ],\n  PI: [\n    'Acauã',\n    'Agricolândia',\n    'Alagoinha do Piauí',\n    'Alegrete do Piauí',\n    'Alto Longá',\n    'Altos',\n    'Alvorada do Gurguéia',\n    'Amarante',\n    'Angical do Piauí',\n    'Antônio Almeida',\n    'Anísio de Abreu',\n    'Aroazes',\n    'Aroeiras do Itaim',\n    'Arraial',\n    'Assunção do Piauí',\n    'Avelino Lopes',\n    'Baixa Grande do Ribeiro',\n    \"Barra D'Alcântara\",\n    'Barras',\n    'Barreiras do Piauí',\n    'Barro Duro',\n    'Batalha',\n    'Bela Vista do Piauí',\n    'Belém do Piauí',\n    'Beneditinos',\n    'Bertolínia',\n    'Betânia do Piauí',\n    'Boa Hora',\n    'Bocaina',\n    'Bom Jesus',\n    'Bom Princípio do Piauí',\n    'Bonfim do Piauí',\n    'Boqueirão do Piauí',\n    'Brasileira',\n    'Brejo do Piauí',\n    'Buriti dos Lopes',\n    'Buriti dos Montes',\n    'Cabeceiras do Piauí',\n    'Cajazeiras do Piauí',\n    'Cajueiro da Praia',\n    'Caldeirão Grande do Piauí',\n    'Campinas do Piauí',\n    'Campo Alegre do Fidalgo',\n    'Campo Grande do Piauí',\n    'Campo Largo do Piauí',\n    'Campo Maior',\n    'Canavieira',\n    'Canto do Buriti',\n    'Capitão Gervásio Oliveira',\n    'Capitão de Campos',\n    'Caracol',\n    'Caraúbas do Piauí',\n    'Caridade do Piauí',\n    'Castelo do Piauí',\n    'Caxingó',\n    'Cocal',\n    'Cocal de Telha',\n    'Cocal dos Alves',\n    'Coivaras',\n    'Colônia do Gurguéia',\n    'Colônia do Piauí',\n    'Conceição do Canindé',\n    'Coronel José Dias',\n    'Corrente',\n    'Cristalândia do Piauí',\n    'Cristino Castro',\n    'Curimatá',\n    'Currais',\n    'Curral Novo do Piauí',\n    'Curralinhos',\n    'Demerval Lobão',\n    'Dirceu Arcoverde',\n    'Dom Expedito Lopes',\n    'Dom Inocêncio',\n    'Domingos Mourão',\n    'Elesbão Veloso',\n    'Eliseu Martins',\n    'Esperantina',\n    'Fartura do Piauí',\n    'Flores do Piauí',\n    'Floresta do Piauí',\n    'Floriano',\n    'Francinópolis',\n    'Francisco Ayres',\n    'Francisco Macedo',\n    'Francisco Santos',\n    'Fronteiras',\n    'Geminiano',\n    'Gilbués',\n    'Guadalupe',\n    'Guaribas',\n    'Hugo Napoleão',\n    'Ilha Grande',\n    'Inhuma',\n    'Ipiranga do Piauí',\n    'Isaías Coelho',\n    'Itainópolis',\n    'Itaueira',\n    'Jacobina do Piauí',\n    'Jaicós',\n    'Jardim do Mulato',\n    'Jatobá do Piauí',\n    'Jerumenha',\n    'Joaquim Pires',\n    'Joca Marques',\n    'José de Freitas',\n    'João Costa',\n    'Juazeiro do Piauí',\n    'Jurema',\n    'Júlio Borges',\n    'Lagoa Alegre',\n    'Lagoa de São Francisco',\n    'Lagoa do Barro do Piauí',\n    'Lagoa do Piauí',\n    'Lagoa do Sítio',\n    'Lagoinha do Piauí',\n    'Landri Sales',\n    'Luzilândia',\n    'Luís Correia',\n    'Madeiro',\n    'Manoel Emídio',\n    'Marcolândia',\n    'Marcos Parente',\n    'Massapê do Piauí',\n    'Matias Olímpio',\n    'Miguel Alves',\n    'Miguel Leão',\n    'Milton Brandão',\n    'Monsenhor Gil',\n    'Monsenhor Hipólito',\n    'Monte Alegre do Piauí',\n    'Morro Cabeça no Tempo',\n    'Morro do Chapéu do Piauí',\n    'Murici dos Portelas',\n    'Nazaré do Piauí',\n    'Nazária',\n    'Nossa Senhora de Nazaré',\n    'Nossa Senhora dos Remédios',\n    'Nova Santa Rita',\n    'Novo Oriente do Piauí',\n    'Novo Santo Antônio',\n    'Oeiras',\n    \"Olho D'Água do Piauí\",\n    'Padre Marcos',\n    'Paes Landim',\n    'Pajeú do Piauí',\n    'Palmeira do Piauí',\n    'Palmeirais',\n    'Paquetá',\n    'Parnaguá',\n    'Parnaíba',\n    'Passagem Franca do Piauí',\n    'Patos do Piauí',\n    \"Pau D'Arco do Piauí\",\n    'Paulistana',\n    'Pavussu',\n    'Pedro II',\n    'Pedro Laurentino',\n    'Picos',\n    'Pimenteiras',\n    'Pio IX',\n    'Piracuruca',\n    'Piripiri',\n    'Porto',\n    'Porto Alegre do Piauí',\n    'Prata do Piauí',\n    'Queimada Nova',\n    'Redenção do Gurguéia',\n    'Regeneração',\n    'Riacho Frio',\n    'Ribeira do Piauí',\n    'Ribeiro Gonçalves',\n    'Rio Grande do Piauí',\n    'Santa Cruz do Piauí',\n    'Santa Cruz dos Milagres',\n    'Santa Filomena',\n    'Santa Luz',\n    'Santa Rosa do Piauí',\n    'Santana do Piauí',\n    'Santo Antônio de Lisboa',\n    'Santo Antônio dos Milagres',\n    'Santo Inácio do Piauí',\n    'Sebastião Barros',\n    'Sebastião Leal',\n    'Sigefredo Pacheco',\n    'Simplício Mendes',\n    'Simões',\n    'Socorro do Piauí',\n    'Sussuapara',\n    'São Braz do Piauí',\n    'São Francisco de Assis do Piauí',\n    'São Francisco do Piauí',\n    'São Félix do Piauí',\n    'São Gonçalo do Gurguéia',\n    'São Gonçalo do Piauí',\n    'São José do Divino',\n    'São José do Peixe',\n    'São José do Piauí',\n    'São João da Canabrava',\n    'São João da Fronteira',\n    'São João da Serra',\n    'São João da Varjota',\n    'São João do Arraial',\n    'São João do Piauí',\n    'São Julião',\n    'São Lourenço do Piauí',\n    'São Luis do Piauí',\n    'São Miguel da Baixa Grande',\n    'São Miguel do Fidalgo',\n    'São Miguel do Tapuio',\n    'São Pedro do Piauí',\n    'São Raimundo Nonato',\n    'Tamboril do Piauí',\n    'Tanque do Piauí',\n    'Teresina',\n    'União',\n    'Uruçuí',\n    'Valença do Piauí',\n    'Vera Mendes',\n    'Vila Nova do Piauí',\n    'Várzea Branca',\n    'Várzea Grande',\n    'Wall Ferraz',\n    'Água Branca',\n  ],\n  RS: [\n    'Aceguá',\n    'Agudo',\n    'Ajuricaba',\n    'Alecrim',\n    'Alegrete',\n    'Alegria',\n    'Almirante Tamandaré do Sul',\n    'Alpestre',\n    'Alto Alegre',\n    'Alto Feliz',\n    'Alvorada',\n    'Amaral Ferrador',\n    'Ametista do Sul',\n    'André da Rocha',\n    'Anta Gorda',\n    'Antônio Prado',\n    'Arambaré',\n    'Araricá',\n    'Aratiba',\n    'Arroio Grande',\n    'Arroio do Meio',\n    'Arroio do Padre',\n    'Arroio do Sal',\n    'Arroio do Tigre',\n    'Arroio dos Ratos',\n    'Arvorezinha',\n    'Augusto Pestana',\n    'Bagé',\n    'Balneário Pinhal',\n    'Barra Funda',\n    'Barra do Guarita',\n    'Barra do Quaraí',\n    'Barra do Ribeiro',\n    'Barra do Rio Azul',\n    'Barracão',\n    'Barros Cassal',\n    'Barão',\n    'Barão de Cotegipe',\n    'Barão do Triunfo',\n    'Benjamin Constant do Sul',\n    'Bento Gonçalves',\n    'Boa Vista das Missões',\n    'Boa Vista do Buricá',\n    'Boa Vista do Cadeado',\n    'Boa Vista do Incra',\n    'Boa Vista do Sul',\n    'Bom Jesus',\n    'Bom Princípio',\n    'Bom Progresso',\n    'Bom Retiro do Sul',\n    'Boqueirão do Leão',\n    'Bossoroca',\n    'Bozano',\n    'Braga',\n    'Brochier',\n    'Butiá',\n    'Cacequi',\n    'Cachoeira do Sul',\n    'Cachoeirinha',\n    'Cacique Doble',\n    'Caibaté',\n    'Caiçara',\n    'Camaquã',\n    'Camargo',\n    'Cambará do Sul',\n    'Campestre da Serra',\n    'Campina das Missões',\n    'Campinas do Sul',\n    'Campo Bom',\n    'Campo Novo',\n    'Campos Borges',\n    'Candelária',\n    'Candiota',\n    'Canela',\n    'Canguçu',\n    'Canoas',\n    'Canudos do Vale',\n    'Capela de Santana',\n    'Capitão',\n    'Capivari do Sul',\n    'Capão Bonito do Sul',\n    'Capão da Canoa',\n    'Capão do Cipó',\n    'Capão do Leão',\n    'Carazinho',\n    'Caraá',\n    'Carlos Barbosa',\n    'Carlos Gomes',\n    'Casca',\n    'Caseiros',\n    'Catuípe',\n    'Caxias do Sul',\n    'Caçapava do Sul',\n    'Centenário',\n    'Cerrito',\n    'Cerro Branco',\n    'Cerro Grande',\n    'Cerro Grande do Sul',\n    'Cerro Largo',\n    'Chapada',\n    'Charqueadas',\n    'Charrua',\n    'Chiapetta',\n    'Chuvisca',\n    'Chuí',\n    'Cidreira',\n    'Ciríaco',\n    'Colinas',\n    'Colorado',\n    'Condor',\n    'Constantina',\n    'Coqueiro Baixo',\n    'Coqueiros do Sul',\n    'Coronel Barros',\n    'Coronel Bicaco',\n    'Coronel Pilar',\n    'Cotiporã',\n    'Coxilha',\n    'Crissiumal',\n    'Cristal',\n    'Cristal do Sul',\n    'Cruz Alta',\n    'Cruzaltense',\n    'Cruzeiro do Sul',\n    'Cândido Godói',\n    'David Canabarro',\n    'Derrubadas',\n    'Dezesseis de Novembro',\n    'Dilermando de Aguiar',\n    'Dois Irmãos',\n    'Dois Irmãos das Missões',\n    'Dois Lajeados',\n    'Dom Feliciano',\n    'Dom Pedrito',\n    'Dom Pedro de Alcântara',\n    'Dona Francisca',\n    'Doutor Maurício Cardoso',\n    'Doutor Ricardo',\n    'Eldorado do Sul',\n    'Encantado',\n    'Encruzilhada do Sul',\n    'Engenho Velho',\n    'Entre Rios do Sul',\n    'Entre-Ijuís',\n    'Erebango',\n    'Erechim',\n    'Ernestina',\n    'Erval Grande',\n    'Erval Seco',\n    'Esmeralda',\n    'Esperança do Sul',\n    'Espumoso',\n    'Estação',\n    'Esteio',\n    'Estrela',\n    'Estrela Velha',\n    'Estância Velha',\n    'Eugênio de Castro',\n    'Fagundes Varela',\n    'Farroupilha',\n    'Faxinal do Soturno',\n    'Faxinalzinho',\n    'Fazenda Vilanova',\n    'Feliz',\n    'Flores da Cunha',\n    'Floriano Peixoto',\n    'Fontoura Xavier',\n    'Formigueiro',\n    'Forquetinha',\n    'Fortaleza dos Valos',\n    'Frederico Westphalen',\n    'Garibaldi',\n    'Garruchos',\n    'Gaurama',\n    'General Câmara',\n    'Gentil',\n    'Getúlio Vargas',\n    'Giruá',\n    'Glorinha',\n    'Gramado',\n    'Gramado Xavier',\n    'Gramado dos Loureiros',\n    'Gravataí',\n    'Guabiju',\n    'Guaporé',\n    'Guarani das Missões',\n    'Guaíba',\n    'Harmonia',\n    'Herval',\n    'Herveiras',\n    'Horizontina',\n    'Hulha Negra',\n    'Humaitá',\n    'Ibarama',\n    'Ibiaçá',\n    'Ibiraiaras',\n    'Ibirapuitã',\n    'Ibirubá',\n    'Igrejinha',\n    'Ijuí',\n    'Ilópolis',\n    'Imbé',\n    'Imigrante',\n    'Independência',\n    'Inhacorá',\n    'Ipiranga do Sul',\n    'Ipê',\n    'Iraí',\n    'Itaara',\n    'Itacurubi',\n    'Itapuca',\n    'Itaqui',\n    'Itati',\n    'Itatiba do Sul',\n    'Ivorá',\n    'Ivoti',\n    'Jaboticaba',\n    'Jacuizinho',\n    'Jacutinga',\n    'Jaguari',\n    'Jaguarão',\n    'Jaquirana',\n    'Jari',\n    'Jóia',\n    'Júlio de Castilhos',\n    'Lagoa Bonita do Sul',\n    'Lagoa Vermelha',\n    'Lagoa dos Três Cantos',\n    'Lagoão',\n    'Lajeado',\n    'Lajeado do Bugre',\n    'Lavras do Sul',\n    'Liberato Salzano',\n    'Lindolfo Collor',\n    'Linha Nova',\n    'Machadinho',\n    'Mampituba',\n    'Manoel Viana',\n    'Maquiné',\n    'Maratá',\n    'Marau',\n    'Marcelino Ramos',\n    'Mariana Pimentel',\n    'Mariano Moro',\n    'Marques de Souza',\n    'Mata',\n    'Mato Castelhano',\n    'Mato Leitão',\n    'Mato Queimado',\n    'Maximiliano de Almeida',\n    'Maçambará',\n    'Minas do Leão',\n    'Miraguaí',\n    'Montauri',\n    'Monte Alegre dos Campos',\n    'Monte Belo do Sul',\n    'Montenegro',\n    'Mormaço',\n    'Morrinhos do Sul',\n    'Morro Redondo',\n    'Morro Reuter',\n    'Mostardas',\n    'Muitos Capões',\n    'Muliterno',\n    'Muçum',\n    'Nicolau Vergueiro',\n    'Nonoai',\n    'Nova Alvorada',\n    'Nova Araçá',\n    'Nova Bassano',\n    'Nova Boa Vista',\n    'Nova Bréscia',\n    'Nova Candelária',\n    'Nova Esperança do Sul',\n    'Nova Hartz',\n    'Nova Palma',\n    'Nova Petrópolis',\n    'Nova Prata',\n    'Nova Pádua',\n    'Nova Ramada',\n    'Nova Roma do Sul',\n    'Nova Santa Rita',\n    'Novo Barreiro',\n    'Novo Cabrais',\n    'Novo Hamburgo',\n    'Novo Machado',\n    'Novo Tiradentes',\n    'Novo Xingu',\n    'Não-Me-Toque',\n    'Osório',\n    'Paim Filho',\n    'Palmares do Sul',\n    'Palmeira das Missões',\n    'Palmitinho',\n    'Panambi',\n    'Pantano Grande',\n    'Paraí',\n    'Paraíso do Sul',\n    'Pareci Novo',\n    'Parobé',\n    'Passa Sete',\n    'Passo Fundo',\n    'Passo do Sobrado',\n    'Paulo Bento',\n    'Paverama',\n    'Pedras Altas',\n    'Pedro Osório',\n    'Pejuçara',\n    'Pelotas',\n    'Picada Café',\n    'Pinhal',\n    'Pinhal Grande',\n    'Pinhal da Serra',\n    'Pinheirinho do Vale',\n    'Pinheiro Machado',\n    'Pinto Bandeira',\n    'Pirapó',\n    'Piratini',\n    'Planalto',\n    'Ponte Preta',\n    'Pontão',\n    'Porto Alegre',\n    'Porto Lucena',\n    'Porto Mauá',\n    'Porto Vera Cruz',\n    'Porto Xavier',\n    'Portão',\n    'Pouso Novo',\n    'Poço das Antas',\n    'Presidente Lucena',\n    'Progresso',\n    'Protásio Alves',\n    'Putinga',\n    'Quaraí',\n    'Quatro Irmãos',\n    'Quevedos',\n    'Quinze de Novembro',\n    'Redentora',\n    'Relvado',\n    'Restinga Sêca',\n    'Rio Grande',\n    'Rio Pardo',\n    'Rio dos Índios',\n    'Riozinho',\n    'Roca Sales',\n    'Rodeio Bonito',\n    'Rolador',\n    'Rolante',\n    'Ronda Alta',\n    'Rondinha',\n    'Roque Gonzales',\n    'Rosário do Sul',\n    'Sagrada Família',\n    'Saldanha Marinho',\n    'Salto do Jacuí',\n    'Salvador das Missões',\n    'Salvador do Sul',\n    'Sananduva',\n    \"Sant'Ana do Livramento\",\n    'Santa Bárbara do Sul',\n    'Santa Cecília do Sul',\n    'Santa Clara do Sul',\n    'Santa Cruz do Sul',\n    'Santa Margarida do Sul',\n    'Santa Maria',\n    'Santa Maria do Herval',\n    'Santa Rosa',\n    'Santa Tereza',\n    'Santa Vitória do Palmar',\n    'Santana da Boa Vista',\n    'Santiago',\n    'Santo Antônio da Patrulha',\n    'Santo Antônio das Missões',\n    'Santo Antônio do Palma',\n    'Santo Antônio do Planalto',\n    'Santo Augusto',\n    'Santo Cristo',\n    'Santo Expedito do Sul',\n    'Santo Ângelo',\n    'Sapiranga',\n    'Sapucaia do Sul',\n    'Sarandi',\n    'Seberi',\n    'Sede Nova',\n    'Segredo',\n    'Selbach',\n    'Senador Salgado Filho',\n    'Sentinela do Sul',\n    'Serafina Corrêa',\n    'Sertão',\n    'Sertão Santana',\n    'Sete de Setembro',\n    'Severiano de Almeida',\n    'Silveira Martins',\n    'Sinimbu',\n    'Sobradinho',\n    'Soledade',\n    'São Borja',\n    'São Domingos do Sul',\n    'São Francisco de Assis',\n    'São Francisco de Paula',\n    'São Gabriel',\n    'São Jerônimo',\n    'São Jorge',\n    'São José das Missões',\n    'São José do Herval',\n    'São José do Hortêncio',\n    'São José do Inhacorá',\n    'São José do Norte',\n    'São José do Ouro',\n    'São José do Sul',\n    'São José dos Ausentes',\n    'São João da Urtiga',\n    'São João do Polêsine',\n    'São Leopoldo',\n    'São Lourenço do Sul',\n    'São Luiz Gonzaga',\n    'São Marcos',\n    'São Martinho',\n    'São Martinho da Serra',\n    'São Miguel das Missões',\n    'São Nicolau',\n    'São Paulo das Missões',\n    'São Pedro da Serra',\n    'São Pedro das Missões',\n    'São Pedro do Butiá',\n    'São Pedro do Sul',\n    'São Sebastião do Caí',\n    'São Sepé',\n    'São Valentim',\n    'São Valentim do Sul',\n    'São Valério do Sul',\n    'São Vendelino',\n    'São Vicente do Sul',\n    'Sério',\n    'Tabaí',\n    'Tapejara',\n    'Tapera',\n    'Tapes',\n    'Taquara',\n    'Taquari',\n    'Taquaruçu do Sul',\n    'Tavares',\n    'Tenente Portela',\n    'Terra de Areia',\n    'Teutônia',\n    'Tio Hugo',\n    'Tiradentes do Sul',\n    'Toropi',\n    'Torres',\n    'Tramandaí',\n    'Travesseiro',\n    'Trindade do Sul',\n    'Triunfo',\n    'Três Arroios',\n    'Três Cachoeiras',\n    'Três Coroas',\n    'Três Forquilhas',\n    'Três Palmeiras',\n    'Três Passos',\n    'Três de Maio',\n    'Tucunduva',\n    'Tunas',\n    'Tupanci do Sul',\n    'Tupanciretã',\n    'Tupandi',\n    'Tuparendi',\n    'Turuçu',\n    'Ubiretama',\n    'Unistalda',\n    'União da Serra',\n    'Uruguaiana',\n    'Vacaria',\n    'Vale Real',\n    'Vale Verde',\n    'Vale do Sol',\n    'Vanini',\n    'Venâncio Aires',\n    'Vera Cruz',\n    'Veranópolis',\n    'Vespasiano Corrêa',\n    'Viadutos',\n    'Viamão',\n    'Vicente Dutra',\n    'Victor Graeff',\n    'Vila Flores',\n    'Vila Lângaro',\n    'Vila Maria',\n    'Vila Nova do Sul',\n    'Vista Alegre',\n    'Vista Alegre do Prata',\n    'Vista Gaúcha',\n    'Vitória das Missões',\n    'Westfália',\n    'Xangri-lá',\n    'Água Santa',\n    'Áurea',\n  ],\n  MT: [\n    'Acorizal',\n    'Alta Floresta',\n    'Alto Araguaia',\n    'Alto Boa Vista',\n    'Alto Garças',\n    'Alto Paraguai',\n    'Alto Taquari',\n    'Apiacás',\n    'Araguaiana',\n    'Araguainha',\n    'Araputanga',\n    'Arenápolis',\n    'Aripuanã',\n    'Barra do Bugres',\n    'Barra do Garças',\n    'Barão de Melgaço',\n    'Bom Jesus do Araguaia',\n    'Brasnorte',\n    'Campinápolis',\n    'Campo Novo do Parecis',\n    'Campo Verde',\n    'Campos de Júlio',\n    'Canabrava do Norte',\n    'Canarana',\n    'Carlinda',\n    'Castanheira',\n    'Chapada dos Guimarães',\n    'Cláudia',\n    'Cocalinho',\n    'Colniza',\n    'Colíder',\n    'Comodoro',\n    'Confresa',\n    \"Conquista D'Oeste\",\n    'Cotriguaçu',\n    'Cuiabá',\n    'Curvelândia',\n    'Cáceres',\n    'Denise',\n    'Diamantino',\n    'Dom Aquino',\n    'Feliz Natal',\n    \"Figueirópolis D'Oeste\",\n    'Gaúcha do Norte',\n    'General Carneiro',\n    \"Glória D'Oeste\",\n    'Guarantã do Norte',\n    'Guiratinga',\n    'Indiavaí',\n    'Ipiranga do Norte',\n    'Itanhangá',\n    'Itaúba',\n    'Itiquira',\n    'Jaciara',\n    'Jangada',\n    'Jauru',\n    'Juara',\n    'Juruena',\n    'Juscimeira',\n    'Juína',\n    \"Lambari D'Oeste\",\n    'Lucas do Rio Verde',\n    'Luciara',\n    'Marcelândia',\n    'Matupá',\n    \"Mirassol d'Oeste\",\n    'Nobres',\n    'Nortelândia',\n    'Nossa Senhora do Livramento',\n    'Nova Bandeirantes',\n    'Nova Brasilândia',\n    'Nova Canaã do Norte',\n    'Nova Guarita',\n    'Nova Lacerda',\n    'Nova Marilândia',\n    'Nova Maringá',\n    'Nova Monte Verde',\n    'Nova Mutum',\n    'Nova Nazaré',\n    'Nova Olímpia',\n    'Nova Santa Helena',\n    'Nova Ubiratã',\n    'Nova Xavantina',\n    'Novo Horizonte do Norte',\n    'Novo Mundo',\n    'Novo Santo Antônio',\n    'Novo São Joaquim',\n    'Paranatinga',\n    'Paranaíta',\n    'Pedra Preta',\n    'Peixoto de Azevedo',\n    'Planalto da Serra',\n    'Poconé',\n    'Pontal do Araguaia',\n    'Ponte Branca',\n    'Pontes e Lacerda',\n    'Porto Alegre do Norte',\n    'Porto Esperidião',\n    'Porto Estrela',\n    'Porto dos Gaúchos',\n    'Poxoréu',\n    'Primavera do Leste',\n    'Querência',\n    'Reserva do Cabaçal',\n    'Ribeirão Cascalheira',\n    'Ribeirãozinho',\n    'Rio Branco',\n    'Rondolândia',\n    'Rondonópolis',\n    'Rosário Oeste',\n    'Salto do Céu',\n    'Santa Carmem',\n    'Santa Cruz do Xingu',\n    'Santa Rita do Trivelato',\n    'Santa Terezinha',\n    'Santo Afonso',\n    'Santo Antônio do Leste',\n    'Santo Antônio do Leverger',\n    'Sapezal',\n    'Serra Nova Dourada',\n    'Sinop',\n    'Sorriso',\n    'São Félix do Araguaia',\n    'São José do Povo',\n    'São José do Rio Claro',\n    'São José do Xingu',\n    'São José dos Quatro Marcos',\n    'São Pedro da Cipa',\n    'Tabaporã',\n    'Tangará da Serra',\n    'Tapurah',\n    'Terra Nova do Norte',\n    'Tesouro',\n    'Torixoréu',\n    'União do Sul',\n    'Vale de São Domingos',\n    'Vera',\n    'Vila Bela da Santíssima Trindade',\n    'Vila Rica',\n    'Várzea Grande',\n    'Água Boa',\n  ],\n  AC: [\n    'Acrelândia',\n    'Assis Brasil',\n    'Brasiléia',\n    'Bujari',\n    'Capixaba',\n    'Cruzeiro do Sul',\n    'Epitaciolândia',\n    'Feijó',\n    'Jordão',\n    'Manoel Urbano',\n    'Marechal Thaumaturgo',\n    'Mâncio Lima',\n    'Plácido de Castro',\n    'Porto Acre',\n    'Porto Walter',\n    'Rio Branco',\n    'Rodrigues Alves',\n    'Santa Rosa do Purus',\n    'Sena Madureira',\n    'Senador Guiomard',\n    'Tarauacá',\n    'Xapuri',\n  ],\n  SP: [\n    'Adamantina',\n    'Adolfo',\n    'Aguaí',\n    'Agudos',\n    'Alambari',\n    'Alfredo Marcondes',\n    'Altair',\n    'Altinópolis',\n    'Alto Alegre',\n    'Alumínio',\n    'Alvinlândia',\n    'Americana',\n    'Amparo',\n    'Américo Brasiliense',\n    'Américo de Campos',\n    'Analândia',\n    'Andradina',\n    'Angatuba',\n    'Anhembi',\n    'Anhumas',\n    'Aparecida',\n    \"Aparecida d'Oeste\",\n    'Apiaí',\n    'Aramina',\n    'Arandu',\n    'Arapeí',\n    'Araraquara',\n    'Araras',\n    'Araçariguama',\n    'Araçatuba',\n    'Araçoiaba da Serra',\n    'Arco-Íris',\n    'Arealva',\n    'Areias',\n    'Areiópolis',\n    'Ariranha',\n    'Artur Nogueira',\n    'Arujá',\n    'Aspásia',\n    'Assis',\n    'Atibaia',\n    'Auriflama',\n    'Avanhandava',\n    'Avaré',\n    'Avaí',\n    'Bady Bassitt',\n    'Balbinos',\n    'Bananal',\n    'Barbosa',\n    'Bariri',\n    'Barra Bonita',\n    'Barra do Chapéu',\n    'Barra do Turvo',\n    'Barretos',\n    'Barrinha',\n    'Barueri',\n    'Barão de Antonina',\n    'Bastos',\n    'Batatais',\n    'Bauru',\n    'Bebedouro',\n    'Bento de Abreu',\n    'Bernardino de Campos',\n    'Bertioga',\n    'Bilac',\n    'Birigui',\n    'Biritiba Mirim',\n    'Boa Esperança do Sul',\n    'Bocaina',\n    'Bofete',\n    'Boituva',\n    'Bom Jesus dos Perdões',\n    'Bom Sucesso de Itararé',\n    'Boracéia',\n    'Borborema',\n    'Borebi',\n    'Borá',\n    'Botucatu',\n    'Bragança Paulista',\n    'Braúna',\n    'Brejo Alegre',\n    'Brodowski',\n    'Brotas',\n    'Buri',\n    'Buritama',\n    'Buritizal',\n    'Bálsamo',\n    'Cabreúva',\n    'Cabrália Paulista',\n    'Cachoeira Paulista',\n    'Caconde',\n    'Cafelândia',\n    'Caiabu',\n    'Caieiras',\n    'Caiuá',\n    'Cajamar',\n    'Cajati',\n    'Cajobi',\n    'Cajuru',\n    'Campina do Monte Alegre',\n    'Campinas',\n    'Campo Limpo Paulista',\n    'Campos Novos Paulista',\n    'Campos do Jordão',\n    'Cananéia',\n    'Canas',\n    'Canitar',\n    'Capela do Alto',\n    'Capivari',\n    'Capão Bonito',\n    'Caraguatatuba',\n    'Carapicuíba',\n    'Cardoso',\n    'Casa Branca',\n    'Castilho',\n    'Catanduva',\n    'Catiguá',\n    'Caçapava',\n    'Cedral',\n    'Cerqueira César',\n    'Cerquilho',\n    'Cesário Lange',\n    'Charqueada',\n    'Chavantes',\n    'Clementina',\n    'Colina',\n    'Colômbia',\n    'Conchal',\n    'Conchas',\n    'Cordeirópolis',\n    'Coroados',\n    'Coronel Macedo',\n    'Corumbataí',\n    'Cosmorama',\n    'Cosmópolis',\n    'Cotia',\n    'Cravinhos',\n    'Cristais Paulista',\n    'Cruzeiro',\n    'Cruzália',\n    'Cubatão',\n    'Cunha',\n    'Cássia dos Coqueiros',\n    'Cândido Mota',\n    'Cândido Rodrigues',\n    'Descalvado',\n    'Diadema',\n    'Dirce Reis',\n    'Divinolândia',\n    'Dobrada',\n    'Dois Córregos',\n    'Dolcinópolis',\n    'Dourado',\n    'Dracena',\n    'Duartina',\n    'Dumont',\n    'Echaporã',\n    'Eldorado',\n    'Elias Fausto',\n    'Elisiário',\n    'Embaúba',\n    'Embu das Artes',\n    'Embu-Guaçu',\n    'Emilianópolis',\n    'Engenheiro Coelho',\n    'Espírito Santo do Pinhal',\n    'Espírito Santo do Turvo',\n    'Estiva Gerbi',\n    \"Estrela d'Oeste\",\n    'Estrela do Norte',\n    'Euclides da Cunha Paulista',\n    'Fartura',\n    'Fernando Prestes',\n    'Fernandópolis',\n    'Fernão',\n    'Ferraz de Vasconcelos',\n    'Flora Rica',\n    'Floreal',\n    'Florínea',\n    'Flórida Paulista',\n    'Franca',\n    'Francisco Morato',\n    'Franco da Rocha',\n    'Gabriel Monteiro',\n    'Garça',\n    'Gastão Vidigal',\n    'Gavião Peixoto',\n    'General Salgado',\n    'Getulina',\n    'Glicério',\n    'Guaimbê',\n    'Guaiçara',\n    'Guapiara',\n    'Guapiaçu',\n    'Guaraci',\n    \"Guarani d'Oeste\",\n    'Guarantã',\n    'Guararapes',\n    'Guararema',\n    'Guaratinguetá',\n    'Guaraçaí',\n    'Guareí',\n    'Guariba',\n    'Guarujá',\n    'Guarulhos',\n    'Guará',\n    'Guatapará',\n    'Guaíra',\n    'Guzolândia',\n    'Gália',\n    'Herculândia',\n    'Holambra',\n    'Hortolândia',\n    'Iacanga',\n    'Iacri',\n    'Iaras',\n    'Ibaté',\n    'Ibirarema',\n    'Ibirá',\n    'Ibitinga',\n    'Ibiúna',\n    'Icém',\n    'Iepê',\n    'Igarapava',\n    'Igaratá',\n    'Igaraçu do Tietê',\n    'Iguape',\n    'Ilha Comprida',\n    'Ilha Solteira',\n    'Ilhabela',\n    'Indaiatuba',\n    'Indiana',\n    'Indiaporã',\n    'Inúbia Paulista',\n    'Ipaussu',\n    'Iperó',\n    'Ipeúna',\n    'Ipiguá',\n    'Iporanga',\n    'Ipuã',\n    'Iracemápolis',\n    'Irapuru',\n    'Irapuã',\n    'Itaberá',\n    'Itajobi',\n    'Itaju',\n    'Itanhaém',\n    'Itaoca',\n    'Itapecerica da Serra',\n    'Itapetininga',\n    'Itapeva',\n    'Itapevi',\n    'Itapira',\n    'Itapirapuã Paulista',\n    'Itaporanga',\n    'Itapura',\n    'Itapuí',\n    'Itaquaquecetuba',\n    'Itararé',\n    'Itariri',\n    'Itatiba',\n    'Itatinga',\n    'Itaí',\n    'Itirapina',\n    'Itirapuã',\n    'Itobi',\n    'Itu',\n    'Itupeva',\n    'Ituverava',\n    'Itápolis',\n    'Jaborandi',\n    'Jaboticabal',\n    'Jacareí',\n    'Jaci',\n    'Jacupiranga',\n    'Jaguariúna',\n    'Jales',\n    'Jambeiro',\n    'Jandira',\n    'Jardinópolis',\n    'Jarinu',\n    'Jaú',\n    'Jeriquara',\n    'Joanópolis',\n    'José Bonifácio',\n    'João Ramalho',\n    'Jumirim',\n    'Jundiaí',\n    'Junqueirópolis',\n    'Juquitiba',\n    'Juquiá',\n    'Júlio Mesquita',\n    'Lagoinha',\n    'Laranjal Paulista',\n    'Lavrinhas',\n    'Lavínia',\n    'Leme',\n    'Lençóis Paulista',\n    'Limeira',\n    'Lindóia',\n    'Lins',\n    'Lorena',\n    'Lourdes',\n    'Louveira',\n    'Lucianópolis',\n    'Lucélia',\n    'Luiziânia',\n    'Lupércio',\n    'Lutécia',\n    'Luís Antônio',\n    'Macatuba',\n    'Macaubal',\n    'Macedônia',\n    'Magda',\n    'Mairinque',\n    'Mairiporã',\n    'Manduri',\n    'Marabá Paulista',\n    'Maracaí',\n    'Marapoama',\n    'Marinópolis',\n    'Mariápolis',\n    'Martinópolis',\n    'Marília',\n    'Matão',\n    'Mauá',\n    'Mendonça',\n    'Meridiano',\n    'Mesópolis',\n    'Miguelópolis',\n    'Mineiros do Tietê',\n    'Mira Estrela',\n    'Miracatu',\n    'Mirandópolis',\n    'Mirante do Paranapanema',\n    'Mirassol',\n    'Mirassolândia',\n    'Mococa',\n    'Mogi Guaçu',\n    'Mogi Mirim',\n    'Mogi das Cruzes',\n    'Mombuca',\n    'Mongaguá',\n    'Monte Alegre do Sul',\n    'Monte Alto',\n    'Monte Aprazível',\n    'Monte Azul Paulista',\n    'Monte Castelo',\n    'Monte Mor',\n    'Monteiro Lobato',\n    'Monções',\n    'Morro Agudo',\n    'Morungaba',\n    'Motuca',\n    'Murutinga do Sul',\n    'Nantes',\n    'Narandiba',\n    'Natividade da Serra',\n    'Nazaré Paulista',\n    'Neves Paulista',\n    'Nhandeara',\n    'Nipoã',\n    'Nova Aliança',\n    'Nova Campina',\n    'Nova Canaã Paulista',\n    'Nova Castilho',\n    'Nova Europa',\n    'Nova Granada',\n    'Nova Guataporanga',\n    'Nova Independência',\n    'Nova Luzitânia',\n    'Nova Odessa',\n    'Novais',\n    'Novo Horizonte',\n    'Nuporanga',\n    'Ocauçu',\n    'Olímpia',\n    'Onda Verde',\n    'Oriente',\n    'Orindiúva',\n    'Orlândia',\n    'Osasco',\n    'Oscar Bressane',\n    'Osvaldo Cruz',\n    'Ourinhos',\n    'Ouro Verde',\n    'Ouroeste',\n    'Pacaembu',\n    'Palestina',\n    'Palmares Paulista',\n    \"Palmeira d'Oeste\",\n    'Palmital',\n    'Panorama',\n    'Paraguaçu Paulista',\n    'Paraibuna',\n    'Paranapanema',\n    'Paranapuã',\n    'Parapuã',\n    'Paraíso',\n    'Pardinho',\n    'Pariquera-Açu',\n    'Parisi',\n    'Patrocínio Paulista',\n    'Paulicéia',\n    'Paulistânia',\n    'Paulo de Faria',\n    'Paulínia',\n    'Pederneiras',\n    'Pedra Bela',\n    'Pedranópolis',\n    'Pedregulho',\n    'Pedreira',\n    'Pedrinhas Paulista',\n    'Pedro de Toledo',\n    'Penápolis',\n    'Pereira Barreto',\n    'Pereiras',\n    'Peruíbe',\n    'Piacatu',\n    'Piedade',\n    'Pilar do Sul',\n    'Pindamonhangaba',\n    'Pindorama',\n    'Pinhalzinho',\n    'Piquerobi',\n    'Piquete',\n    'Piracaia',\n    'Piracicaba',\n    'Piraju',\n    'Pirajuí',\n    'Pirangi',\n    'Pirapora do Bom Jesus',\n    'Pirapozinho',\n    'Pirassununga',\n    'Piratininga',\n    'Pitangueiras',\n    'Planalto',\n    'Platina',\n    'Poloni',\n    'Pompéia',\n    'Pongaí',\n    'Pontal',\n    'Pontalinda',\n    'Pontes Gestal',\n    'Populina',\n    'Porangaba',\n    'Porto Feliz',\n    'Porto Ferreira',\n    'Potim',\n    'Potirendaba',\n    'Poá',\n    'Pracinha',\n    'Pradópolis',\n    'Praia Grande',\n    'Pratânia',\n    'Presidente Alves',\n    'Presidente Bernardes',\n    'Presidente Epitácio',\n    'Presidente Prudente',\n    'Presidente Venceslau',\n    'Promissão',\n    'Quadra',\n    'Quatá',\n    'Queiroz',\n    'Queluz',\n    'Quintana',\n    'Rafard',\n    'Rancharia',\n    'Redenção da Serra',\n    'Regente Feijó',\n    'Reginópolis',\n    'Registro',\n    'Restinga',\n    'Ribeira',\n    'Ribeirão Bonito',\n    'Ribeirão Branco',\n    'Ribeirão Corrente',\n    'Ribeirão Grande',\n    'Ribeirão Pires',\n    'Ribeirão Preto',\n    'Ribeirão do Sul',\n    'Ribeirão dos Índios',\n    'Rifaina',\n    'Rincão',\n    'Rinópolis',\n    'Rio Claro',\n    'Rio Grande da Serra',\n    'Rio das Pedras',\n    'Riolândia',\n    'Riversul',\n    'Rosana',\n    'Roseira',\n    'Rubinéia',\n    'Rubiácea',\n    'Sabino',\n    'Sagres',\n    'Sales',\n    'Sales Oliveira',\n    'Salesópolis',\n    'Salmourão',\n    'Saltinho',\n    'Salto',\n    'Salto Grande',\n    'Salto de Pirapora',\n    'Sandovalina',\n    'Santa Adélia',\n    'Santa Albertina',\n    'Santa Branca',\n    \"Santa Bárbara d'Oeste\",\n    \"Santa Clara d'Oeste\",\n    'Santa Cruz da Conceição',\n    'Santa Cruz da Esperança',\n    'Santa Cruz das Palmeiras',\n    'Santa Cruz do Rio Pardo',\n    'Santa Ernestina',\n    'Santa Fé do Sul',\n    'Santa Gertrudes',\n    'Santa Isabel',\n    'Santa Lúcia',\n    'Santa Maria da Serra',\n    'Santa Mercedes',\n    \"Santa Rita d'Oeste\",\n    'Santa Rita do Passa Quatro',\n    'Santa Rosa de Viterbo',\n    'Santa Salete',\n    'Santana da Ponte Pensa',\n    'Santana de Parnaíba',\n    'Santo Anastácio',\n    'Santo André',\n    'Santo Antônio da Alegria',\n    'Santo Antônio de Posse',\n    'Santo Antônio do Aracanguá',\n    'Santo Antônio do Jardim',\n    'Santo Antônio do Pinhal',\n    'Santo Expedito',\n    'Santos',\n    'Santópolis do Aguapeí',\n    'Sarapuí',\n    'Sarutaiá',\n    'Sebastianópolis do Sul',\n    'Serra Azul',\n    'Serra Negra',\n    'Serrana',\n    'Sertãozinho',\n    'Sete Barras',\n    'Severínia',\n    'Silveiras',\n    'Socorro',\n    'Sorocaba',\n    'Sud Mennucci',\n    'Sumaré',\n    'Suzano',\n    'Suzanápolis',\n    'São Bento do Sapucaí',\n    'São Bernardo do Campo',\n    'São Caetano do Sul',\n    'São Carlos',\n    'São Francisco',\n    'São Joaquim da Barra',\n    'São José da Bela Vista',\n    'São José do Barreiro',\n    'São José do Rio Pardo',\n    'São José do Rio Preto',\n    'São José dos Campos',\n    'São João da Boa Vista',\n    'São João das Duas Pontes',\n    'São João de Iracema',\n    \"São João do Pau d'Alho\",\n    'São Lourenço da Serra',\n    'São Luiz do Paraitinga',\n    'São Manuel',\n    'São Miguel Arcanjo',\n    'São Paulo',\n    'São Pedro',\n    'São Pedro do Turvo',\n    'São Roque',\n    'São Sebastião',\n    'São Sebastião da Grama',\n    'São Simão',\n    'São Vicente',\n    'Tabapuã',\n    'Tabatinga',\n    'Taboão da Serra',\n    'Taciba',\n    'Taguaí',\n    'Taiaçu',\n    'Taiúva',\n    'Tambaú',\n    'Tanabi',\n    'Tapiratiba',\n    'Tapiraí',\n    'Taquaral',\n    'Taquaritinga',\n    'Taquarituba',\n    'Taquarivaí',\n    'Tarabai',\n    'Tarumã',\n    'Tatuí',\n    'Taubaté',\n    'Tejupá',\n    'Teodoro Sampaio',\n    'Terra Roxa',\n    'Tietê',\n    'Timburi',\n    'Torre de Pedra',\n    'Torrinha',\n    'Trabiju',\n    'Tremembé',\n    'Três Fronteiras',\n    'Tuiuti',\n    'Tupi Paulista',\n    'Tupã',\n    'Turiúba',\n    'Turmalina',\n    'Ubarana',\n    'Ubatuba',\n    'Ubirajara',\n    'Uchoa',\n    'União Paulista',\n    'Uru',\n    'Urupês',\n    'Urânia',\n    'Valentim Gentil',\n    'Valinhos',\n    'Valparaíso',\n    'Vargem',\n    'Vargem Grande Paulista',\n    'Vargem Grande do Sul',\n    'Vera Cruz',\n    'Vinhedo',\n    'Viradouro',\n    'Vista Alegre do Alto',\n    'Vitória Brasil',\n    'Votorantim',\n    'Votuporanga',\n    'Várzea Paulista',\n    'Zacarias',\n    'Águas da Prata',\n    'Águas de Lindóia',\n    'Águas de Santa Bárbara',\n    'Águas de São Pedro',\n    'Álvares Florence',\n    'Álvares Machado',\n    'Álvaro de Carvalho',\n    'Óleo',\n  ],\n  ES: [\n    'Afonso Cláudio',\n    'Alegre',\n    'Alfredo Chaves',\n    'Alto Rio Novo',\n    'Anchieta',\n    'Apiacá',\n    'Aracruz',\n    'Atílio Vivacqua',\n    'Baixo Guandu',\n    'Barra de São Francisco',\n    'Boa Esperança',\n    'Bom Jesus do Norte',\n    'Brejetuba',\n    'Cachoeiro de Itapemirim',\n    'Cariacica',\n    'Castelo',\n    'Colatina',\n    'Conceição da Barra',\n    'Conceição do Castelo',\n    'Divino de São Lourenço',\n    'Domingos Martins',\n    'Dores do Rio Preto',\n    'Ecoporanga',\n    'Fundão',\n    'Governador Lindenberg',\n    'Guarapari',\n    'Guaçuí',\n    'Ibatiba',\n    'Ibiraçu',\n    'Ibitirama',\n    'Iconha',\n    'Irupi',\n    'Itaguaçu',\n    'Itapemirim',\n    'Itarana',\n    'Iúna',\n    'Jaguaré',\n    'Jerônimo Monteiro',\n    'João Neiva',\n    'Laranja da Terra',\n    'Linhares',\n    'Mantenópolis',\n    'Marataízes',\n    'Marechal Floriano',\n    'Marilândia',\n    'Mimoso do Sul',\n    'Montanha',\n    'Mucurici',\n    'Muniz Freire',\n    'Muqui',\n    'Nova Venécia',\n    'Pancas',\n    'Pedro Canário',\n    'Pinheiros',\n    'Piúma',\n    'Ponto Belo',\n    'Presidente Kennedy',\n    'Rio Bananal',\n    'Rio Novo do Sul',\n    'Santa Leopoldina',\n    'Santa Maria de Jetibá',\n    'Santa Teresa',\n    'Serra',\n    'Sooretama',\n    'São Domingos do Norte',\n    'São Gabriel da Palha',\n    'São José do Calçado',\n    'São Mateus',\n    'São Roque do Canaã',\n    'Vargem Alta',\n    'Venda Nova do Imigrante',\n    'Viana',\n    'Vila Pavão',\n    'Vila Valério',\n    'Vila Velha',\n    'Vitória',\n    'Água Doce do Norte',\n    'Águia Branca',\n  ],\n  MA: [\n    'Afonso Cunha',\n    'Alcântara',\n    'Aldeias Altas',\n    'Altamira do Maranhão',\n    'Alto Alegre do Maranhão',\n    'Alto Alegre do Pindaré',\n    'Alto Parnaíba',\n    'Amapá do Maranhão',\n    'Amarante do Maranhão',\n    'Anajatuba',\n    'Anapurus',\n    'Apicum-Açu',\n    'Araguanã',\n    'Araioses',\n    'Arame',\n    'Arari',\n    'Axixá',\n    'Açailândia',\n    'Bacabal',\n    'Bacabeira',\n    'Bacuri',\n    'Bacurituba',\n    'Balsas',\n    'Barra do Corda',\n    'Barreirinhas',\n    'Barão de Grajaú',\n    'Bela Vista do Maranhão',\n    'Belágua',\n    'Benedito Leite',\n    'Bequimão',\n    'Bernardo do Mearim',\n    'Boa Vista do Gurupi',\n    'Bom Jardim',\n    'Bom Jesus das Selvas',\n    'Bom Lugar',\n    'Brejo',\n    'Brejo de Areia',\n    'Buriti',\n    'Buriti Bravo',\n    'Buriticupu',\n    'Buritirana',\n    'Cachoeira Grande',\n    'Cajapió',\n    'Cajari',\n    'Campestre do Maranhão',\n    'Cantanhede',\n    'Capinzal do Norte',\n    'Carolina',\n    'Carutapera',\n    'Caxias',\n    'Cedral',\n    'Central do Maranhão',\n    'Centro Novo do Maranhão',\n    'Centro do Guilherme',\n    'Chapadinha',\n    'Cidelândia',\n    'Codó',\n    'Coelho Neto',\n    'Colinas',\n    'Conceição do Lago-Açu',\n    'Coroatá',\n    'Cururupu',\n    'Cândido Mendes',\n    'Davinópolis',\n    'Dom Pedro',\n    'Duque Bacelar',\n    'Esperantinópolis',\n    'Estreito',\n    'Feira Nova do Maranhão',\n    'Fernando Falcão',\n    'Formosa da Serra Negra',\n    'Fortaleza dos Nogueiras',\n    'Fortuna',\n    'Godofredo Viana',\n    'Gonçalves Dias',\n    'Governador Archer',\n    'Governador Edison Lobão',\n    'Governador Eugênio Barros',\n    'Governador Luiz Rocha',\n    'Governador Newton Bello',\n    'Governador Nunes Freire',\n    'Grajaú',\n    'Graça Aranha',\n    'Guimarães',\n    'Humberto de Campos',\n    'Icatu',\n    'Igarapé Grande',\n    'Igarapé do Meio',\n    'Imperatriz',\n    'Itaipava do Grajaú',\n    'Itapecuru Mirim',\n    'Itinga do Maranhão',\n    'Jatobá',\n    'Jenipapo dos Vieiras',\n    'Joselândia',\n    'João Lisboa',\n    'Junco do Maranhão',\n    'Lago Verde',\n    'Lago da Pedra',\n    'Lago do Junco',\n    'Lago dos Rodrigues',\n    'Lagoa Grande do Maranhão',\n    'Lagoa do Mato',\n    'Lajeado Novo',\n    'Lima Campos',\n    'Loreto',\n    'Luís Domingues',\n    'Magalhães de Almeida',\n    'Maracaçumé',\n    'Marajá do Sena',\n    'Maranhãozinho',\n    'Mata Roma',\n    'Matinha',\n    'Matões',\n    'Matões do Norte',\n    'Milagres do Maranhão',\n    'Mirador',\n    'Miranda do Norte',\n    'Mirinzal',\n    'Montes Altos',\n    'Monção',\n    'Morros',\n    'Nina Rodrigues',\n    'Nova Colinas',\n    'Nova Iorque',\n    'Nova Olinda do Maranhão',\n    \"Olho d'Água das Cunhãs\",\n    'Olinda Nova do Maranhão',\n    'Palmeirândia',\n    'Paraibano',\n    'Parnarama',\n    'Passagem Franca',\n    'Pastos Bons',\n    'Paulino Neves',\n    'Paulo Ramos',\n    'Paço do Lumiar',\n    'Pedreiras',\n    'Pedro do Rosário',\n    'Penalva',\n    'Peri Mirim',\n    'Peritoró',\n    'Pindaré-Mirim',\n    'Pinheiro',\n    'Pio XII',\n    'Pirapemas',\n    'Porto Franco',\n    'Porto Rico do Maranhão',\n    'Poção de Pedras',\n    'Presidente Dutra',\n    'Presidente Juscelino',\n    'Presidente Médici',\n    'Presidente Sarney',\n    'Presidente Vargas',\n    'Primeira Cruz',\n    'Raposa',\n    'Riachão',\n    'Ribamar Fiquene',\n    'Rosário',\n    'Sambaíba',\n    'Santa Filomena do Maranhão',\n    'Santa Helena',\n    'Santa Inês',\n    'Santa Luzia',\n    'Santa Luzia do Paruá',\n    'Santa Quitéria do Maranhão',\n    'Santa Rita',\n    'Santana do Maranhão',\n    'Santo Amaro do Maranhão',\n    'Santo Antônio dos Lopes',\n    'Satubinha',\n    'Senador Alexandre Costa',\n    'Senador La Rocque',\n    'Serrano do Maranhão',\n    'Sucupira do Norte',\n    'Sucupira do Riachão',\n    'São Benedito do Rio Preto',\n    'São Bento',\n    'São Bernardo',\n    'São Domingos do Azeitão',\n    'São Domingos do Maranhão',\n    'São Francisco do Brejão',\n    'São Francisco do Maranhão',\n    'São Félix de Balsas',\n    'São José de Ribamar',\n    'São José dos Basílios',\n    'São João Batista',\n    'São João do Carú',\n    'São João do Paraíso',\n    'São João do Soter',\n    'São João dos Patos',\n    'São Luís',\n    'São Luís Gonzaga do Maranhão',\n    'São Mateus do Maranhão',\n    'São Pedro da Água Branca',\n    'São Pedro dos Crentes',\n    'São Raimundo das Mangabeiras',\n    'São Raimundo do Doca Bezerra',\n    'São Roberto',\n    'São Vicente Ferrer',\n    'Sítio Novo',\n    'Tasso Fragoso',\n    'Timbiras',\n    'Timon',\n    'Trizidela do Vale',\n    'Tufilândia',\n    'Tuntum',\n    'Turiaçu',\n    'Turilândia',\n    'Tutóia',\n    'Urbano Santos',\n    'Vargem Grande',\n    'Viana',\n    'Vila Nova dos Martírios',\n    'Vitorino Freire',\n    'Vitória do Mearim',\n    'Zé Doca',\n    'Água Doce do Maranhão',\n  ],\n  PB: [\n    'Aguiar',\n    'Alagoa Grande',\n    'Alagoa Nova',\n    'Alagoinha',\n    'Alcantil',\n    'Algodão de Jandaíra',\n    'Alhandra',\n    'Amparo',\n    'Aparecida',\n    'Arara',\n    'Araruna',\n    'Araçagi',\n    'Areia',\n    'Areia de Baraúnas',\n    'Areial',\n    'Aroeiras',\n    'Assunção',\n    'Bananeiras',\n    'Baraúna',\n    'Barra de Santa Rosa',\n    'Barra de Santana',\n    'Barra de São Miguel',\n    'Bayeux',\n    'Baía da Traição',\n    'Belém',\n    'Belém do Brejo do Cruz',\n    'Bernardino Batista',\n    'Boa Ventura',\n    'Boa Vista',\n    'Bom Jesus',\n    'Bom Sucesso',\n    'Bonito de Santa Fé',\n    'Boqueirão',\n    'Borborema',\n    'Brejo do Cruz',\n    'Brejo dos Santos',\n    'Caaporã',\n    'Cabaceiras',\n    'Cabedelo',\n    'Cachoeira dos Índios',\n    'Cacimba de Areia',\n    'Cacimba de Dentro',\n    'Cacimbas',\n    'Caiçara',\n    'Cajazeiras',\n    'Cajazeirinhas',\n    'Caldas Brandão',\n    'Camalaú',\n    'Campina Grande',\n    'Capim',\n    'Caraúbas',\n    'Carrapateira',\n    'Casserengue',\n    'Catingueira',\n    'Catolé do Rocha',\n    'Caturité',\n    'Conceição',\n    'Condado',\n    'Conde',\n    'Congo',\n    'Coremas',\n    'Coxixola',\n    'Cruz do Espírito Santo',\n    'Cubati',\n    'Cuitegi',\n    'Cuité',\n    'Cuité de Mamanguape',\n    'Curral Velho',\n    'Curral de Cima',\n    'Damião',\n    'Desterro',\n    'Diamante',\n    'Dona Inês',\n    'Duas Estradas',\n    'Emas',\n    'Esperança',\n    'Fagundes',\n    'Frei Martinho',\n    'Gado Bravo',\n    'Guarabira',\n    'Gurinhém',\n    'Gurjão',\n    'Ibiara',\n    'Igaracy',\n    'Imaculada',\n    'Ingá',\n    'Itabaiana',\n    'Itaporanga',\n    'Itapororoca',\n    'Itatuba',\n    'Jacaraú',\n    'Jericó',\n    'Joca Claudino',\n    'João Pessoa',\n    'Juarez Távora',\n    'Juazeirinho',\n    'Junco do Seridó',\n    'Juripiranga',\n    'Juru',\n    'Lagoa',\n    'Lagoa Seca',\n    'Lagoa de Dentro',\n    'Lastro',\n    'Livramento',\n    'Logradouro',\n    'Lucena',\n    'Malta',\n    'Mamanguape',\n    'Manaíra',\n    'Marcação',\n    'Mari',\n    'Marizópolis',\n    'Massaranduba',\n    'Mataraca',\n    'Matinhas',\n    'Mato Grosso',\n    'Maturéia',\n    'Mogeiro',\n    'Montadas',\n    'Monte Horebe',\n    'Monteiro',\n    'Mulungu',\n    \"Mãe d'Água\",\n    'Natuba',\n    'Nazarezinho',\n    'Nova Floresta',\n    'Nova Olinda',\n    'Nova Palmeira',\n    \"Olho d'Água\",\n    'Olivedos',\n    'Ouro Velho',\n    'Parari',\n    'Passagem',\n    'Patos',\n    'Paulista',\n    'Pedra Branca',\n    'Pedra Lavrada',\n    'Pedras de Fogo',\n    'Pedro Régis',\n    'Piancó',\n    'Picuí',\n    'Pilar',\n    'Pilões',\n    'Pilõezinhos',\n    'Pirpirituba',\n    'Pitimbu',\n    'Pocinhos',\n    'Pombal',\n    'Poço Dantas',\n    'Poço de José de Moura',\n    'Prata',\n    'Princesa Isabel',\n    'Puxinanã',\n    'Queimadas',\n    'Quixaba',\n    'Remígio',\n    'Riacho de Santo Antônio',\n    'Riacho dos Cavalos',\n    'Riachão',\n    'Riachão do Bacamarte',\n    'Riachão do Poço',\n    'Rio Tinto',\n    'Salgadinho',\n    'Salgado de São Félix',\n    'Santa Cecília',\n    'Santa Cruz',\n    'Santa Helena',\n    'Santa Inês',\n    'Santa Luzia',\n    'Santa Rita',\n    'Santa Teresinha',\n    'Santana de Mangueira',\n    'Santana dos Garrotes',\n    'Santo André',\n    'Sapé',\n    'Serra Branca',\n    'Serra Grande',\n    'Serra Redonda',\n    'Serra da Raiz',\n    'Serraria',\n    'Sertãozinho',\n    'Sobrado',\n    'Soledade',\n    'Solânea',\n    'Sossêgo',\n    'Sousa',\n    'Sumé',\n    'São Bentinho',\n    'São Bento',\n    'São Domingos',\n    'São Domingos do Cariri',\n    'São Francisco',\n    'São José da Lagoa Tapada',\n    'São José de Caiana',\n    'São José de Espinharas',\n    'São José de Piranhas',\n    'São José de Princesa',\n    'São José do Bonfim',\n    'São José do Brejo do Cruz',\n    'São José do Sabugi',\n    'São José dos Cordeiros',\n    'São José dos Ramos',\n    'São João do Cariri',\n    'São João do Rio do Peixe',\n    'São João do Tigre',\n    'São Mamede',\n    'São Miguel de Taipu',\n    'São Sebastião de Lagoa de Roça',\n    'São Sebastião do Umbuzeiro',\n    'São Vicente do Seridó',\n    'Tacima',\n    'Taperoá',\n    'Tavares',\n    'Teixeira',\n    'Tenório',\n    'Triunfo',\n    'Uiraúna',\n    'Umbuzeiro',\n    'Vieirópolis',\n    'Vista Serrana',\n    'Várzea',\n    'Zabelê',\n    'Água Branca',\n  ],\n  MS: [\n    'Alcinópolis',\n    'Amambai',\n    'Anastácio',\n    'Anaurilândia',\n    'Angélica',\n    'Antônio João',\n    'Aparecida do Taboado',\n    'Aquidauana',\n    'Aral Moreira',\n    'Bandeirantes',\n    'Bataguassu',\n    'Batayporã',\n    'Bela Vista',\n    'Bodoquena',\n    'Bonito',\n    'Brasilândia',\n    'Caarapó',\n    'Camapuã',\n    'Campo Grande',\n    'Caracol',\n    'Cassilândia',\n    'Chapadão do Sul',\n    'Corguinho',\n    'Coronel Sapucaia',\n    'Corumbá',\n    'Costa Rica',\n    'Coxim',\n    'Deodápolis',\n    'Dois Irmãos do Buriti',\n    'Douradina',\n    'Dourados',\n    'Eldorado',\n    'Figueirão',\n    'Fátima do Sul',\n    'Glória de Dourados',\n    'Guia Lopes da Laguna',\n    'Iguatemi',\n    'Inocência',\n    'Itaporã',\n    'Itaquiraí',\n    'Ivinhema',\n    'Japorã',\n    'Jaraguari',\n    'Jardim',\n    'Jateí',\n    'Juti',\n    'Ladário',\n    'Laguna Carapã',\n    'Maracaju',\n    'Miranda',\n    'Mundo Novo',\n    'Naviraí',\n    'Nioaque',\n    'Nova Alvorada do Sul',\n    'Nova Andradina',\n    'Novo Horizonte do Sul',\n    'Paranaíba',\n    'Paranhos',\n    'Paraíso das Águas',\n    'Pedro Gomes',\n    'Ponta Porã',\n    'Porto Murtinho',\n    'Ribas do Rio Pardo',\n    'Rio Brilhante',\n    'Rio Negro',\n    'Rio Verde de Mato Grosso',\n    'Rochedo',\n    'Santa Rita do Pardo',\n    'Selvíria',\n    'Sete Quedas',\n    'Sidrolândia',\n    'Sonora',\n    'São Gabriel do Oeste',\n    'Tacuru',\n    'Taquarussu',\n    'Terenos',\n    'Três Lagoas',\n    'Vicentina',\n    'Água Clara',\n  ],\n  RO: [\n    \"Alta Floresta D'Oeste\",\n    'Alto Alegre dos Parecis',\n    'Alto Paraíso',\n    \"Alvorada D'Oeste\",\n    'Ariquemes',\n    'Buritis',\n    'Cabixi',\n    'Cacaulândia',\n    'Cacoal',\n    'Campo Novo de Rondônia',\n    'Candeias do Jamari',\n    'Castanheiras',\n    'Cerejeiras',\n    'Chupinguaia',\n    'Colorado do Oeste',\n    'Corumbiara',\n    'Costa Marques',\n    'Cujubim',\n    \"Espigão D'Oeste\",\n    'Governador Jorge Teixeira',\n    'Guajará-Mirim',\n    'Itapuã do Oeste',\n    'Jaru',\n    'Ji-Paraná',\n    \"Machadinho D'Oeste\",\n    'Ministro Andreazza',\n    'Mirante da Serra',\n    'Monte Negro',\n    \"Nova Brasilândia D'Oeste\",\n    'Nova Mamoré',\n    'Nova União',\n    'Novo Horizonte do Oeste',\n    'Ouro Preto do Oeste',\n    'Parecis',\n    'Pimenta Bueno',\n    'Pimenteiras do Oeste',\n    'Porto Velho',\n    'Presidente Médici',\n    'Primavera de Rondônia',\n    'Rio Crespo',\n    'Rolim de Moura',\n    \"Santa Luzia D'Oeste\",\n    'Seringueiras',\n    \"São Felipe D'Oeste\",\n    'São Francisco do Guaporé',\n    'São Miguel do Guaporé',\n    'Teixeirópolis',\n    'Theobroma',\n    'Urupá',\n    'Vale do Anari',\n    'Vale do Paraíso',\n    'Vilhena',\n  ],\n  RR: [\n    'Alto Alegre',\n    'Amajari',\n    'Boa Vista',\n    'Bonfim',\n    'Cantá',\n    'Caracaraí',\n    'Caroebe',\n    'Iracema',\n    'Mucajaí',\n    'Normandia',\n    'Pacaraima',\n    'Rorainópolis',\n    'São João da Baliza',\n    'São Luiz',\n    'Uiramutã',\n  ],\n  AM: [\n    'Alvarães',\n    'Amaturá',\n    'Anamã',\n    'Anori',\n    'Apuí',\n    'Atalaia do Norte',\n    'Autazes',\n    'Barcelos',\n    'Barreirinha',\n    'Benjamin Constant',\n    'Beruri',\n    'Boa Vista do Ramos',\n    'Boca do Acre',\n    'Borba',\n    'Caapiranga',\n    'Canutama',\n    'Carauari',\n    'Careiro',\n    'Careiro da Várzea',\n    'Coari',\n    'Codajás',\n    'Eirunepé',\n    'Envira',\n    'Fonte Boa',\n    'Guajará',\n    'Humaitá',\n    'Ipixuna',\n    'Iranduba',\n    'Itacoatiara',\n    'Itamarati',\n    'Itapiranga',\n    'Japurá',\n    'Juruá',\n    'Jutaí',\n    'Lábrea',\n    'Manacapuru',\n    'Manaquiri',\n    'Manaus',\n    'Manicoré',\n    'Maraã',\n    'Maués',\n    'Nhamundá',\n    'Nova Olinda do Norte',\n    'Novo Airão',\n    'Novo Aripuanã',\n    'Parintins',\n    'Pauini',\n    'Presidente Figueiredo',\n    'Rio Preto da Eva',\n    'Santa Isabel do Rio Negro',\n    'Santo Antônio do Içá',\n    'Silves',\n    'São Gabriel da Cachoeira',\n    'São Paulo de Olivença',\n    'São Sebastião do Uatumã',\n    'Tabatinga',\n    'Tapauá',\n    'Tefé',\n    'Tonantins',\n    'Uarini',\n    'Urucará',\n    'Urucurituba',\n  ],\n  AP: [\n    'Amapá',\n    'Calçoene',\n    'Cutias',\n    'Ferreira Gomes',\n    'Itaubal',\n    'Laranjal do Jari',\n    'Macapá',\n    'Mazagão',\n    'Oiapoque',\n    'Pedra Branca do Amapari',\n    'Porto Grande',\n    'Pracuúba',\n    'Santana',\n    'Serra do Navio',\n    'Tartarugalzinho',\n    'Vitória do Jari',\n  ],\n  SE: [\n    'Amparo do São Francisco',\n    'Aquidabã',\n    'Aracaju',\n    'Arauá',\n    'Areia Branca',\n    'Barra dos Coqueiros',\n    'Boquim',\n    'Brejo Grande',\n    'Campo do Brito',\n    'Canhoba',\n    'Canindé de São Francisco',\n    'Capela',\n    'Carira',\n    'Carmópolis',\n    'Cedro de São João',\n    'Cristinápolis',\n    'Cumbe',\n    'Divina Pastora',\n    'Estância',\n    'Feira Nova',\n    'Frei Paulo',\n    'Gararu',\n    'General Maynard',\n    'Gracho Cardoso',\n    'Ilha das Flores',\n    'Indiaroba',\n    'Itabaiana',\n    'Itabaianinha',\n    'Itabi',\n    \"Itaporanga d'Ajuda\",\n    'Japaratuba',\n    'Japoatã',\n    'Lagarto',\n    'Laranjeiras',\n    'Macambira',\n    'Malhada dos Bois',\n    'Malhador',\n    'Maruim',\n    'Moita Bonita',\n    'Monte Alegre de Sergipe',\n    'Muribeca',\n    'Neópolis',\n    'Nossa Senhora Aparecida',\n    'Nossa Senhora da Glória',\n    'Nossa Senhora das Dores',\n    'Nossa Senhora de Lourdes',\n    'Nossa Senhora do Socorro',\n    'Pacatuba',\n    'Pedra Mole',\n    'Pedrinhas',\n    'Pinhão',\n    'Pirambu',\n    'Porto da Folha',\n    'Poço Redondo',\n    'Poço Verde',\n    'Propriá',\n    'Riachuelo',\n    'Riachão do Dantas',\n    'Ribeirópolis',\n    'Rosário do Catete',\n    'Salgado',\n    'Santa Luzia do Itanhy',\n    'Santa Rosa de Lima',\n    'Santana do São Francisco',\n    'Santo Amaro das Brotas',\n    'Simão Dias',\n    'Siriri',\n    'São Cristóvão',\n    'São Domingos',\n    'São Francisco',\n    'São Miguel do Aleixo',\n    'Telha',\n    'Tobias Barreto',\n    'Tomar do Geru',\n    'Umbaúba',\n  ],\n  AL: [\n    'Anadia',\n    'Arapiraca',\n    'Atalaia',\n    'Barra de Santo Antônio',\n    'Barra de São Miguel',\n    'Batalha',\n    'Belo Monte',\n    'Belém',\n    'Boca da Mata',\n    'Branquinha',\n    'Cacimbinhas',\n    'Cajueiro',\n    'Campestre',\n    'Campo Alegre',\n    'Campo Grande',\n    'Canapi',\n    'Capela',\n    'Carneiros',\n    'Chã Preta',\n    'Coité do Nóia',\n    'Colônia Leopoldina',\n    'Coqueiro Seco',\n    'Coruripe',\n    'Craíbas',\n    'Delmiro Gouveia',\n    'Dois Riachos',\n    'Estrela de Alagoas',\n    'Feira Grande',\n    'Feliz Deserto',\n    'Flexeiras',\n    'Girau do Ponciano',\n    'Ibateguara',\n    'Igaci',\n    'Igreja Nova',\n    'Inhapi',\n    'Jacaré dos Homens',\n    'Jacuípe',\n    'Japaratinga',\n    'Jaramataia',\n    'Jequiá da Praia',\n    'Joaquim Gomes',\n    'Jundiá',\n    'Junqueiro',\n    'Lagoa da Canoa',\n    'Limoeiro de Anadia',\n    'Maceió',\n    'Major Isidoro',\n    'Mar Vermelho',\n    'Maragogi',\n    'Maravilha',\n    'Marechal Deodoro',\n    'Maribondo',\n    'Mata Grande',\n    'Matriz de Camaragibe',\n    'Messias',\n    'Minador do Negrão',\n    'Monteirópolis',\n    'Murici',\n    'Novo Lino',\n    \"Olho d'Água Grande\",\n    \"Olho d'Água das Flores\",\n    \"Olho d'Água do Casado\",\n    'Olivença',\n    'Ouro Branco',\n    'Palestina',\n    'Palmeira dos Índios',\n    'Pariconha',\n    'Paripueira',\n    'Passo de Camaragibe',\n    'Paulo Jacinto',\n    'Penedo',\n    'Piaçabuçu',\n    'Pilar',\n    'Pindoba',\n    'Piranhas',\n    'Porto Calvo',\n    'Porto Real do Colégio',\n    'Porto de Pedras',\n    'Poço das Trincheiras',\n    'Pão de Açúcar',\n    'Quebrangulo',\n    'Rio Largo',\n    'Roteiro',\n    'Santa Luzia do Norte',\n    'Santana do Ipanema',\n    'Santana do Mundaú',\n    'Satuba',\n    'Senador Rui Palmeira',\n    'São Brás',\n    'São José da Laje',\n    'São José da Tapera',\n    'São Luís do Quitunde',\n    'São Miguel dos Campos',\n    'São Miguel dos Milagres',\n    'São Sebastião',\n    \"Tanque d'Arca\",\n    'Taquarana',\n    'Teotônio Vilela',\n    'Traipu',\n    'União dos Palmares',\n    'Viçosa',\n    'Água Branca',\n  ],\n  RJ: [\n    'Angra dos Reis',\n    'Aperibé',\n    'Araruama',\n    'Areal',\n    'Armação dos Búzios',\n    'Arraial do Cabo',\n    'Barra Mansa',\n    'Barra do Piraí',\n    'Belford Roxo',\n    'Bom Jardim',\n    'Bom Jesus do Itabapoana',\n    'Cabo Frio',\n    'Cachoeiras de Macacu',\n    'Cambuci',\n    'Campos dos Goytacazes',\n    'Cantagalo',\n    'Carapebus',\n    'Cardoso Moreira',\n    'Carmo',\n    'Casimiro de Abreu',\n    'Comendador Levy Gasparian',\n    'Conceição de Macabu',\n    'Cordeiro',\n    'Duas Barras',\n    'Duque de Caxias',\n    'Engenheiro Paulo de Frontin',\n    'Guapimirim',\n    'Iguaba Grande',\n    'Itaboraí',\n    'Itaguaí',\n    'Italva',\n    'Itaocara',\n    'Itaperuna',\n    'Itatiaia',\n    'Japeri',\n    'Laje do Muriaé',\n    'Macaé',\n    'Macuco',\n    'Magé',\n    'Mangaratiba',\n    'Maricá',\n    'Mendes',\n    'Mesquita',\n    'Miguel Pereira',\n    'Miracema',\n    'Natividade',\n    'Nilópolis',\n    'Niterói',\n    'Nova Friburgo',\n    'Nova Iguaçu',\n    'Paracambi',\n    'Paraty',\n    'Paraíba do Sul',\n    'Paty do Alferes',\n    'Petrópolis',\n    'Pinheiral',\n    'Piraí',\n    'Porciúncula',\n    'Porto Real',\n    'Quatis',\n    'Queimados',\n    'Quissamã',\n    'Resende',\n    'Rio Bonito',\n    'Rio Claro',\n    'Rio das Flores',\n    'Rio das Ostras',\n    'Rio de Janeiro',\n    'Santa Maria Madalena',\n    'Santo Antônio de Pádua',\n    'Sapucaia',\n    'Saquarema',\n    'Seropédica',\n    'Silva Jardim',\n    'Sumidouro',\n    'São Fidélis',\n    'São Francisco de Itabapoana',\n    'São Gonçalo',\n    'São José de Ubá',\n    'São José do Vale do Rio Preto',\n    'São João da Barra',\n    'São João de Meriti',\n    'São Pedro da Aldeia',\n    'São Sebastião do Alto',\n    'Tanguá',\n    'Teresópolis',\n    'Trajano de Moraes',\n    'Três Rios',\n    'Valença',\n    'Varre-Sai',\n    'Vassouras',\n    'Volta Redonda',\n  ],\n  DF: ['Brasília'],\n};\n","/*\n  fake.js - generator method for combining faker methods based on string input\n\n*/\n\nfunction Fake (faker) {\n  \n  /**\n   * Generator method for combining faker methods based on string input\n   *\n   * __Example:__\n   *\n   * ```\n   * console.log(faker.fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'));\n   * //outputs: \"Marks, Dean Sr.\"\n   * ```\n   *\n   * This will interpolate the format string with the value of methods\n   * [name.lastName]{@link faker.name.lastName}, [name.firstName]{@link faker.name.firstName},\n   * and [name.suffix]{@link faker.name.suffix}\n   *\n   * @method faker.fake\n   * @param {string} str\n   */\n  this.fake = function fake (str) {\n    // setup default response as empty string\n    var res = '';\n\n    // if incoming str parameter is not provided, return error message\n    if (typeof str !== 'string' || str.length === 0) {\n      throw new Error('string parameter is required!');\n    }\n\n    // find first matching {{ and }}\n    var start = str.search('{{');\n    var end = str.search('}}');\n\n    // if no {{ and }} is found, we are done\n    if (start === -1 && end === -1) {\n      return str;\n    }\n\n    // console.log('attempting to parse', str);\n\n    // extract method name from between the {{ }} that we found\n    // for example: {{name.firstName}}\n    var token = str.substr(start + 2,  end - start - 2);\n    var method = token.replace('}}', '').replace('{{', '');\n\n    // console.log('method', method)\n\n    // extract method parameters\n    var regExp = /\\(([^)]+)\\)/;\n    var matches = regExp.exec(method);\n    var parameters = '';\n    if (matches) {\n      method = method.replace(regExp, '');\n      parameters = matches[1];\n    }\n\n    // split the method into module and function\n    var parts = method.split('.');\n\n    if (typeof faker[parts[0]] === \"undefined\") {\n      throw new Error('Invalid module: ' + parts[0]);\n    }\n\n    if (typeof faker[parts[0]][parts[1]] === \"undefined\") {\n      throw new Error('Invalid method: ' + parts[0] + \".\" + parts[1]);\n    }\n\n    // assign the function from the module.function namespace\n    var fn = faker[parts[0]][parts[1]];\n\n    // If parameters are populated here, they are always going to be of string type\n    // since we might actually be dealing with an object or array,\n    // we always attempt to the parse the incoming parameters into JSON\n    var params;\n    // Note: we experience a small performance hit here due to JSON.parse try / catch\n    // If anyone actually needs to optimize this specific code path, please open a support issue on github\n    try {\n      params = JSON.parse(parameters)\n    } catch (err) {\n      // since JSON.parse threw an error, assume parameters was actually a string\n      params = parameters;\n    }\n\n    var result;\n    if (typeof params === \"string\" && params.length === 0) {\n      result = fn.call(this);\n    } else {\n      result = fn.call(this, params);\n    }\n\n    // replace the found tag with the returned fake value\n    res = str.replace('{{' + token + '}}', result);\n\n    // return the response recursively until we are done finding all tags\n    return fake(res);    \n  }\n  \n  return this;\n  \n  \n}\n\nmodule['exports'] = Fake;","// the `unique` module\nvar unique = {};\n\n// global results store\n// currently uniqueness is global to entire faker instance\n// this means that faker should currently *never* return duplicate values across all API methods when using `Faker.unique`\n// it's possible in the future that some users may want to scope found per function call instead of faker instance\nvar found = {};\n\n// global exclude list of results\n// defaults to nothing excluded\nvar exclude = [];\n\n// current iteration or retries of unique.exec ( current loop depth )\nvar currentIterations = 0;\n\n// uniqueness compare function\n// default behavior is to check value as key against object hash\nvar defaultCompare = function(obj, key) {\n  if (typeof obj[key] === 'undefined') {\n    return -1;\n  }\n  return 0;\n};\n\n// common error handler for messages\nunique.errorMessage = function (now, code, opts) {\n  console.error('error', code);\n  console.log('found', Object.keys(found).length, 'unique entries before throwing error. \\nretried:', currentIterations, '\\ntotal time:', now - opts.startTime, 'ms');\n  throw new Error(code + ' for uniqueness check \\n\\nMay not be able to generate any more unique values with current settings. \\nTry adjusting maxTime or maxRetries parameters for faker.unique()')\n};\n\nunique.exec = function (method, args, opts) {\n  //console.log(currentIterations)\n\n  var now = new Date().getTime();\n\n  opts = opts || {};\n  opts.maxTime = opts.maxTime || 3;\n  opts.maxRetries = opts.maxRetries || 50;\n  opts.exclude = opts.exclude || exclude;\n  opts.compare = opts.compare || defaultCompare;\n\n  if (typeof opts.currentIterations !== 'number') {\n    opts.currentIterations = 0;\n  }\n\n  if (typeof opts.startTime === 'undefined') {\n    opts.startTime = new Date().getTime();\n  }\n\n  var startTime = opts.startTime;\n\n  // support single exclude argument as string\n  if (typeof opts.exclude === 'string') {\n    opts.exclude = [opts.exclude];\n  }\n\n  if (opts.currentIterations > 0) {\n    // console.log('iterating', currentIterations)\n  }\n\n  // console.log(now - startTime)\n  if (now - startTime >= opts.maxTime) {\n    return unique.errorMessage(now, 'Exceeded maxTime:' + opts.maxTime, opts);\n  }\n\n  if (opts.currentIterations >= opts.maxRetries) {\n    return unique.errorMessage(now, 'Exceeded maxRetries:' + opts.maxRetries, opts);\n  }\n\n  // execute the provided method to find a potential satifised value\n  var result = method.apply(this, args);\n\n  // if the result has not been previously found, add it to the found array and return the value as it's unique\n  if (opts.compare(found, result) === -1 && opts.exclude.indexOf(result) === -1) {\n    found[result] = result;\n    opts.currentIterations = 0;\n    return result;\n  } else {\n    // console.log('conflict', result);\n    opts.currentIterations++;\n    return unique.exec(method, args, opts);\n  }\n};\n\nmodule.exports = unique;\n","var uniqueExec = require('../vendor/unique');\n/**\n *\n * @namespace faker.unique\n */\nfunction Unique (faker) {\n\n  // initialize unique module class variables\n\n  // maximum time unique.exec will attempt to run before aborting\n  var maxTime = 10;\n\n  // maximum retries unique.exec will recurse before abortings ( max loop depth )\n  var maxRetries = 10;\n\n  // time the script started\n  // var startTime = 0;\n\n  /**\n   * unique\n   *\n   * @method unique\n   */\n  this.unique = function unique (method, args, opts) {\n    opts = opts || {};\n    opts.startTime = new Date().getTime();\n    if (typeof opts.maxTime !== 'number') {\n      opts.maxTime = maxTime;\n    }\n    if (typeof opts.maxRetries !== 'number') {\n      opts.maxRetries = maxRetries;\n    }\n    opts.currentIterations = 0;\n    return uniqueExec.exec(method, args, opts);\n  }\n}\n\nmodule['exports'] = Unique;","// this program is a JavaScript version of Mersenne Twister, with concealment and encapsulation in class,\n// an almost straight conversion from the original program, mt19937ar.c,\n// translated by y. okada on July 17, 2006.\n// and modified a little at july 20, 2006, but there are not any substantial differences.\n// in this program, procedure descriptions and comments of original source code were not removed.\n// lines commented with //c// were originally descriptions of c procedure. and a few following lines are appropriate JavaScript descriptions.\n// lines commented with /* and */ are original comments.\n// lines commented with // are additional comments in this JavaScript version.\n// before using this version, create at least one instance of MersenneTwister19937 class, and initialize the each state, given below in c comments, of all the instances.\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n\n   Before using, initialize the state by using init_genrand(seed)\n   or init_by_array(init_key, key_length).\n\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\n\nfunction MersenneTwister19937()\n{\n\t/* constants should be scoped inside the class */\n\tvar N, M, MATRIX_A, UPPER_MASK, LOWER_MASK;\n\t/* Period parameters */\n\t//c//#define N 624\n\t//c//#define M 397\n\t//c//#define MATRIX_A 0x9908b0dfUL   /* constant vector a */\n\t//c//#define UPPER_MASK 0x80000000UL /* most significant w-r bits */\n\t//c//#define LOWER_MASK 0x7fffffffUL /* least significant r bits */\n\tN = 624;\n\tM = 397;\n\tMATRIX_A = 0x9908b0df;   /* constant vector a */\n\tUPPER_MASK = 0x80000000; /* most significant w-r bits */\n\tLOWER_MASK = 0x7fffffff; /* least significant r bits */\n\t//c//static unsigned long mt[N]; /* the array for the state vector  */\n\t//c//static int mti=N+1; /* mti==N+1 means mt[N] is not initialized */\n\tvar mt = new Array(N);   /* the array for the state vector  */\n\tvar mti = N+1;           /* mti==N+1 means mt[N] is not initialized */\n\n\tfunction unsigned32 (n1) // returns a 32-bits unsiged integer from an operand to which applied a bit operator.\n\t{\n\t\treturn n1 < 0 ? (n1 ^ UPPER_MASK) + UPPER_MASK : n1;\n\t}\n\n\tfunction subtraction32 (n1, n2) // emulates lowerflow of a c 32-bits unsiged integer variable, instead of the operator -. these both arguments must be non-negative integers expressible using unsigned 32 bits.\n\t{\n\t\treturn n1 < n2 ? unsigned32((0x100000000 - (n2 - n1)) & 0xffffffff) : n1 - n2;\n\t}\n\n\tfunction addition32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator +. these both arguments must be non-negative integers expressible using unsigned 32 bits.\n\t{\n\t\treturn unsigned32((n1 + n2) & 0xffffffff)\n\t}\n\n\tfunction multiplication32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator *. these both arguments must be non-negative integers expressible using unsigned 32 bits.\n\t{\n\t\tvar sum = 0;\n\t\tfor (var i = 0; i < 32; ++i){\n\t\t\tif ((n1 >>> i) & 0x1){\n\t\t\t\tsum = addition32(sum, unsigned32(n2 << i));\n\t\t\t}\n\t\t}\n\t\treturn sum;\n\t}\n\n\t/* initializes mt[N] with a seed */\n\t//c//void init_genrand(unsigned long s)\n\tthis.init_genrand = function (s)\n\t{\n\t\t//c//mt[0]= s & 0xffffffff;\n\t\tmt[0]= unsigned32(s & 0xffffffff);\n\t\tfor (mti=1; mti<N; mti++) {\n\t\t\tmt[mti] =\n\t\t\t//c//(1812433253 * (mt[mti-1] ^ (mt[mti-1] >> 30)) + mti);\n\t\t\taddition32(multiplication32(1812433253, unsigned32(mt[mti-1] ^ (mt[mti-1] >>> 30))), mti);\n\t\t\t/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t\t\t/* In the previous versions, MSBs of the seed affect   */\n\t\t\t/* only MSBs of the array mt[].                        */\n\t\t\t/* 2002/01/09 modified by Makoto Matsumoto             */\n\t\t\t//c//mt[mti] &= 0xffffffff;\n\t\t\tmt[mti] = unsigned32(mt[mti] & 0xffffffff);\n\t\t\t/* for >32 bit machines */\n\t\t}\n\t}\n\n\t/* initialize by an array with array-length */\n\t/* init_key is the array for initializing keys */\n\t/* key_length is its length */\n\t/* slight change for C++, 2004/2/26 */\n\t//c//void init_by_array(unsigned long init_key[], int key_length)\n\tthis.init_by_array = function (init_key, key_length)\n\t{\n\t\t//c//int i, j, k;\n\t\tvar i, j, k;\n\t\t//c//init_genrand(19650218);\n\t\tthis.init_genrand(19650218);\n\t\ti=1; j=0;\n\t\tk = (N>key_length ? N : key_length);\n\t\tfor (; k; k--) {\n\t\t\t//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1664525))\n\t\t\t//c//\t+ init_key[j] + j; /* non linear */\n\t\t\tmt[i] = addition32(addition32(unsigned32(mt[i] ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1664525)), init_key[j]), j);\n\t\t\tmt[i] =\n\t\t\t//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */\n\t\t\tunsigned32(mt[i] & 0xffffffff);\n\t\t\ti++; j++;\n\t\t\tif (i>=N) { mt[0] = mt[N-1]; i=1; }\n\t\t\tif (j>=key_length) j=0;\n\t\t}\n\t\tfor (k=N-1; k; k--) {\n\t\t\t//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1566083941))\n\t\t\t//c//- i; /* non linear */\n\t\t\tmt[i] = subtraction32(unsigned32((dbg=mt[i]) ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1566083941)), i);\n\t\t\t//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */\n\t\t\tmt[i] = unsigned32(mt[i] & 0xffffffff);\n\t\t\ti++;\n\t\t\tif (i>=N) { mt[0] = mt[N-1]; i=1; }\n\t\t}\n\t\tmt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n\t}\n\n    /* moved outside of genrand_int32() by jwatte 2010-11-17; generate less garbage */\n    var mag01 = [0x0, MATRIX_A];\n\n\t/* generates a random number on [0,0xffffffff]-interval */\n\t//c//unsigned long genrand_int32(void)\n\tthis.genrand_int32 = function ()\n\t{\n\t\t//c//unsigned long y;\n\t\t//c//static unsigned long mag01[2]={0x0UL, MATRIX_A};\n\t\tvar y;\n\t\t/* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n\t\tif (mti >= N) { /* generate N words at one time */\n\t\t\t//c//int kk;\n\t\t\tvar kk;\n\n\t\t\tif (mti == N+1)   /* if init_genrand() has not been called, */\n\t\t\t\t//c//init_genrand(5489); /* a default initial seed is used */\n\t\t\t\tthis.init_genrand(5489); /* a default initial seed is used */\n\n\t\t\tfor (kk=0;kk<N-M;kk++) {\n\t\t\t\t//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);\n\t\t\t\t//c//mt[kk] = mt[kk+M] ^ (y >> 1) ^ mag01[y & 0x1];\n\t\t\t\ty = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));\n\t\t\t\tmt[kk] = unsigned32(mt[kk+M] ^ (y >>> 1) ^ mag01[y & 0x1]);\n\t\t\t}\n\t\t\tfor (;kk<N-1;kk++) {\n\t\t\t\t//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);\n\t\t\t\t//c//mt[kk] = mt[kk+(M-N)] ^ (y >> 1) ^ mag01[y & 0x1];\n\t\t\t\ty = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));\n\t\t\t\tmt[kk] = unsigned32(mt[kk+(M-N)] ^ (y >>> 1) ^ mag01[y & 0x1]);\n\t\t\t}\n\t\t\t//c//y = (mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK);\n\t\t\t//c//mt[N-1] = mt[M-1] ^ (y >> 1) ^ mag01[y & 0x1];\n\t\t\ty = unsigned32((mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK));\n\t\t\tmt[N-1] = unsigned32(mt[M-1] ^ (y >>> 1) ^ mag01[y & 0x1]);\n\t\t\tmti = 0;\n\t\t}\n\n\t\ty = mt[mti++];\n\n\t\t/* Tempering */\n\t\t//c//y ^= (y >> 11);\n\t\t//c//y ^= (y << 7) & 0x9d2c5680;\n\t\t//c//y ^= (y << 15) & 0xefc60000;\n\t\t//c//y ^= (y >> 18);\n\t\ty = unsigned32(y ^ (y >>> 11));\n\t\ty = unsigned32(y ^ ((y << 7) & 0x9d2c5680));\n\t\ty = unsigned32(y ^ ((y << 15) & 0xefc60000));\n\t\ty = unsigned32(y ^ (y >>> 18));\n\n\t\treturn y;\n\t}\n\n\t/* generates a random number on [0,0x7fffffff]-interval */\n\t//c//long genrand_int31(void)\n\tthis.genrand_int31 = function ()\n\t{\n\t\t//c//return (genrand_int32()>>1);\n\t\treturn (this.genrand_int32()>>>1);\n\t}\n\n\t/* generates a random number on [0,1]-real-interval */\n\t//c//double genrand_real1(void)\n\tthis.genrand_real1 = function ()\n\t{\n\t\t//c//return genrand_int32()*(1.0/4294967295.0);\n\t\treturn this.genrand_int32()*(1.0/4294967295.0);\n\t\t/* divided by 2^32-1 */\n\t}\n\n\t/* generates a random number on [0,1)-real-interval */\n\t//c//double genrand_real2(void)\n\tthis.genrand_real2 = function ()\n\t{\n\t\t//c//return genrand_int32()*(1.0/4294967296.0);\n\t\treturn this.genrand_int32()*(1.0/4294967296.0);\n\t\t/* divided by 2^32 */\n\t}\n\n\t/* generates a random number on (0,1)-real-interval */\n\t//c//double genrand_real3(void)\n\tthis.genrand_real3 = function ()\n\t{\n\t\t//c//return ((genrand_int32()) + 0.5)*(1.0/4294967296.0);\n\t\treturn ((this.genrand_int32()) + 0.5)*(1.0/4294967296.0);\n\t\t/* divided by 2^32 */\n\t}\n\n\t/* generates a random number on [0,1) with 53-bit resolution*/\n\t//c//double genrand_res53(void)\n\tthis.genrand_res53 = function ()\n\t{\n\t\t//c//unsigned long a=genrand_int32()>>5, b=genrand_int32()>>6;\n\t\tvar a=this.genrand_int32()>>>5, b=this.genrand_int32()>>>6;\n\t\treturn(a*67108864.0+b)*(1.0/9007199254740992.0);\n\t}\n\t/* These real versions are due to Isaku Wada, 2002/01/09 added */\n}\n\n//  Exports: Public API\n\n//  Export the twister class\nexports.MersenneTwister19937 = MersenneTwister19937;\n\n//  Export a simplified function to generate random numbers\nvar gen = new MersenneTwister19937;\ngen.init_genrand((new Date).getTime() % 1000000000);\n\n// Added max, min range functionality, Marak Squires Sept 11 2014\nexports.rand = function(max, min) {\n    if (max === undefined)\n        {\n        min = 0;\n        max = 32768;\n        }\n    return Math.floor(gen.genrand_real2() * (max - min) + min);\n}\nexports.seed = function(S) {\n    if (typeof(S) != 'number')\n        {\n        throw new Error(\"seed(S) must take numeric argument; is \" + typeof(S));\n        }\n    gen.init_genrand(S);\n}\nexports.seed_array = function(A) {\n    if (typeof(A) != 'object')\n        {\n        throw new Error(\"seed_array(A) must take array of numbers; is \" + typeof(A));\n        }\n    gen.init_by_array(A, A.length);\n}","var mersenne = require('../vendor/mersenne');\n\n/**\n *\n * @namespace faker.random\n */\nfunction Random (faker, seed) {\n  // Use a user provided seed if it is an array or number\n  if (Array.isArray(seed) && seed.length) {\n    mersenne.seed_array(seed);\n  }\n  else if(!isNaN(seed)) {\n    mersenne.seed(seed);\n  }\n\n  /**\n   * returns a single random number based on a max number or range\n   *\n   * @method faker.random.number\n   * @param {mixed} options {min, max, precision}\n   */\n  this.number = function (options) {\n\n    if (typeof options === \"number\") {\n      options = {\n        max: options\n      };\n    }\n\n    options = options || {};\n\n    if (typeof options.min === \"undefined\") {\n      options.min = 0;\n    }\n\n    if (typeof options.max === \"undefined\") {\n      options.max = 99999;\n    }\n    if (typeof options.precision === \"undefined\") {\n      options.precision = 1;\n    }\n\n    // Make the range inclusive of the max value\n    var max = options.max;\n    if (max >= 0) {\n      max += options.precision;\n    }\n\n    var randomNumber = Math.floor(\n      mersenne.rand(max / options.precision, options.min / options.precision));\n    // Workaround problem in Float point arithmetics for e.g. 6681493 / 0.01\n    randomNumber = randomNumber / (1 / options.precision);\n\n    return randomNumber;\n\n  }\n\n  /**\n   * returns a single random floating-point number based on a max number or range\n   *\n   * @method faker.random.float\n   * @param {mixed} options\n   */\n  this.float = function (options) {\n      if (typeof options === \"number\") {\n        options = {\n          precision: options\n        };\n      }\n      options = options || {};\n      var opts = {};\n      for (var p in options) {\n        opts[p] = options[p];\n      }\n      if (typeof opts.precision === 'undefined') {\n        opts.precision = 0.01;\n      }\n      return faker.random.number(opts);\n  }\n  \n  /**\n   * takes an array and returns a random element of the array\n   *\n   * @method faker.random.arrayElement\n   * @param {array} array\n   */\n  this.arrayElement = function (array) {\n      array = array || [\"a\", \"b\", \"c\"];\n      var r = faker.random.number({ max: array.length - 1 });\n      return array[r];\n  }\n\n  /**\n   * takes an array and returns a subset with random elements of the array\n   *\n   * @method faker.random.arrayElements\n   * @param {array} array\n   * @param {number} count number of elements to pick\n   */\n  this.arrayElements = function (array, count) {\n      array = array || [\"a\", \"b\", \"c\"];\n\n      if (typeof count !== 'number') {\n        count = faker.random.number({ min: 1, max: array.length });\n      } else if (count > array.length) {\n        count = array.length;\n      } else if (count < 0) {\n        count = 0;\n      }\n\n      var arrayCopy = array.slice();\n      var countToRemove = arrayCopy.length - count;\n      for (var i = 0; i < countToRemove; i++) {\n        var indexToRemove = faker.random.number({ max: arrayCopy.length - 1 });\n        arrayCopy.splice(indexToRemove, 1);\n      }\n\n      return arrayCopy;\n  }\n\n  /**\n   * takes an object and returns the randomly key or value\n   *\n   * @method faker.random.objectElement\n   * @param {object} object\n   * @param {mixed} field\n   */\n  this.objectElement = function (object, field) {\n      object = object || { \"foo\": \"bar\", \"too\": \"car\" };\n      var array = Object.keys(object);\n      var key = faker.random.arrayElement(array);\n\n      return field === \"key\" ? key : object[key];\n  }\n\n  /**\n   * uuid\n   *\n   * @method faker.random.uuid\n   */\n  this.uuid = function () {\n      var RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n      var replacePlaceholders = function (placeholder) {\n          var random = faker.random.number({ min: 0, max: 15 });\n          var value = placeholder == 'x' ? random : (random &0x3 | 0x8);\n          return value.toString(16);\n      };\n      return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders);\n  }\n\n  /**\n   * boolean\n   *\n   * @method faker.random.boolean\n   */\n  this.boolean = function () {\n      return !!faker.random.number(1)\n  }\n\n  // TODO: have ability to return specific type of word? As in: noun, adjective, verb, etc\n  /**\n   * word\n   *\n   * @method faker.random.word\n   * @param {string} type\n   */\n  this.word = function randomWord (type) {\n\n    var wordMethods = [\n    'commerce.department',\n    'commerce.productName',\n    'commerce.productAdjective',\n    'commerce.productMaterial',\n    'commerce.product',\n    'commerce.color',\n\n    'company.catchPhraseAdjective',\n    'company.catchPhraseDescriptor',\n    'company.catchPhraseNoun',\n    'company.bsAdjective',\n    'company.bsBuzz',\n    'company.bsNoun',\n    'address.streetSuffix',\n    'address.county',\n    'address.country',\n    'address.state',\n\n    'finance.accountName',\n    'finance.transactionType',\n    'finance.currencyName',\n\n    'hacker.noun',\n    'hacker.verb',\n    'hacker.adjective',\n    'hacker.ingverb',\n    'hacker.abbreviation',\n\n    'name.jobDescriptor',\n    'name.jobArea',\n    'name.jobType'];\n\n    // randomly pick from the many faker methods that can generate words\n    var randomWordMethod = faker.random.arrayElement(wordMethods);\n    var result = faker.fake('{{' + randomWordMethod + '}}');\n    return faker.random.arrayElement(result.split(' '));\n  }\n\n  /**\n   * randomWords\n   *\n   * @method faker.random.words\n   * @param {number} count defaults to a random value between 1 and 3\n   */\n  this.words = function randomWords (count) {\n    var words = [];\n    if (typeof count === \"undefined\") {\n      count = faker.random.number({min:1, max: 3});\n    }\n    for (var i = 0; i<count; i++) {\n      words.push(faker.random.word());\n    }\n    return words.join(' ');\n  }\n\n  /**\n   * locale\n   *\n   * @method faker.random.image\n   */\n  this.image = function randomImage () {\n    return faker.image.image();\n  }\n\n  /**\n   * locale\n   *\n   * @method faker.random.locale\n   */\n  this.locale = function randomLocale () {\n    return faker.random.arrayElement(Object.keys(faker.locales));\n  };\n\n    /**\n   * alpha. returns lower/upper alpha characters based count and upcase options\n   *\n   * @method faker.random.alpha\n   * @param {mixed} options // defaults to { count: 1, upcase: false }\n   */\n  this.alpha = function alpha(options) {\n    if (typeof options === \"undefined\") {\n      options = {\n        count: 1\n      }\n    } else if (typeof options === \"number\") {\n      options = {\n        count: options,\n      }\n    } else if (typeof options.count === \"undefined\") {\n      options.count = 1\n    }\n\n    if (typeof options.upcase === \"undefined\") {\n      options.upcase = false;\n    }\n\n    var wholeString = \"\";\n    for(var i = 0; i < options.count; i++) {\n      wholeString += faker.random.arrayElement([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]);\n    }\n\n    return options.upcase ? wholeString.toUpperCase() : wholeString;\n  };\n\n  /**\n   * alphaNumeric\n   *\n   * @method faker.random.alphaNumeric\n   * @param {number} count defaults to 1\n   */\n  this.alphaNumeric = function alphaNumeric(count) {\n    if (typeof count === \"undefined\") {\n      count = 1;\n    }\n\n    var wholeString = \"\";\n    for(var i = 0; i < count; i++) {\n      wholeString += faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]);\n    }\n\n    return wholeString;\n  };\n\n  /**\n   * hexaDecimal\n   *\n   * @method faker.random.hexaDecimal\n   * @param {number} count defaults to 1\n   */\n  this.hexaDecimal = function hexaDecimal(count) {\n    if (typeof count === \"undefined\") {\n      count = 1;\n    }\n\n    var wholeString = \"\";\n    for(var i = 0; i < count; i++) {\n      wholeString += faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"]);\n    }\n\n    return \"0x\"+wholeString;\n  };\n\n  return this;\n\n}\n\nmodule['exports'] = Random;\n","/**\n *\n * @namespace faker.helpers\n */\nvar Helpers = function (faker) {\n\n  var self = this;\n\n  /**\n   * backward-compatibility\n   *\n   * @method faker.helpers.randomize\n   * @param {array} array\n   */\n  self.randomize = function (array) {\n      array = array || [\"a\", \"b\", \"c\"];\n      return faker.random.arrayElement(array);\n  };\n\n  /**\n   * slugifies string\n   *\n   * @method faker.helpers.slugify\n   * @param {string} string\n   */\n  self.slugify = function (string) {\n      string = string || \"\";\n      return string.replace(/ /g, '-').replace(/[^\\一-龠\\ぁ-ゔ\\ァ-ヴー\\w\\.\\-]+/g, '');\n  };\n\n  /**\n   * parses string for a symbol and replace it with a random number from 1-10\n   *\n   * @method faker.helpers.replaceSymbolWithNumber\n   * @param {string} string\n   * @param {string} symbol defaults to `\"#\"`\n   */\n  self.replaceSymbolWithNumber = function (string, symbol) {\n      string = string || \"\";\n      // default symbol is '#'\n      if (symbol === undefined) {\n          symbol = '#';\n      }\n\n      var str = '';\n      for (var i = 0; i < string.length; i++) {\n          if (string.charAt(i) == symbol) {\n              str += faker.random.number(9);\n          } else if (string.charAt(i) == \"!\"){\n              str += faker.random.number({min: 2, max: 9});\n          } else {\n              str += string.charAt(i);\n          }\n      }\n      return str;\n  };\n\n  /**\n   * parses string for symbols (numbers or letters) and replaces them appropriately (# will be replaced with number,\n   * ? with letter and * will be replaced with number or letter)\n   *\n   * @method faker.helpers.replaceSymbols\n   * @param {string} string\n   */\n  self.replaceSymbols = function (string) {\n      string = string || \"\";\n      var alpha = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n      var str = '';\n\n      for (var i = 0; i < string.length; i++) {\n          if (string.charAt(i) == \"#\") {\n              str += faker.random.number(9);\n          } else if (string.charAt(i) == \"?\") {\n              str += faker.random.arrayElement(alpha);\n          } else if (string.charAt(i) == \"*\") {\n            str += faker.random.boolean() ? faker.random.arrayElement(alpha) : faker.random.number(9);\n          } else {\n              str += string.charAt(i);\n          }\n      }\n      return str;\n  };\n\n  /**\n   * replace symbols in a credit card schems including Luhn checksum\n   *\n   * @method faker.helpers.replaceCreditCardSymbols\n   * @param {string} string\n   * @param {string} symbol\n   */\n\n   self.replaceCreditCardSymbols = function(string, symbol) {\n\n     // default values required for calling method without arguments\n     string = string || \"6453-####-####-####-###L\";\n     symbol = symbol || \"#\";\n\n     // Function calculating the Luhn checksum of a number string\n     var getCheckBit = function(number) {\n       number.reverse();\n       number = number.map(function(num, index){\n         if (index%2 === 0) {\n           num *= 2;\n           if(num>9) {\n             num -= 9;\n           }\n         }\n         return num;\n       });\n       var sum = number.reduce(function(prev,curr){return prev + curr;});\n       return sum % 10;\n     };\n\n     string = faker.helpers.regexpStyleStringParse(string); // replace [4-9] with a random number in range etc...\n     string = faker.helpers.replaceSymbolWithNumber(string, symbol); // replace ### with random numbers\n\n     var numberList = string.replace(/\\D/g,\"\").split(\"\").map(function(num){return parseInt(num);});\n     var checkNum = getCheckBit(numberList);\n     return string.replace(\"L\",checkNum);\n   };\n\n   /** string repeat helper, alternative to String.prototype.repeat.... See PR #382\n   *\n   * @method faker.helpers.repeatString\n   * @param {string} string\n   * @param {number} num\n   */\n   self.repeatString = function(string, num) {\n     if(typeof num ===\"undefined\") {\n       num = 0;\n     }\n     var text = \"\";\n     for(var i = 0; i < num; i++){\n       text += string.toString();\n     }\n     return text;\n   };\n\n   /**\n    * parse string patterns in a similar way to RegExp\n    *\n    * e.g. \"#{3}test[1-5]\" -> \"###test4\"\n    *\n    * @method faker.helpers.regexpStyleStringParse\n    * @param {string} string\n    */\n   self.regexpStyleStringParse = function(string){\n     string = string || \"\";\n     // Deal with range repeat `{min,max}`\n     var RANGE_REP_REG = /(.)\\{(\\d+)\\,(\\d+)\\}/;\n     var REP_REG = /(.)\\{(\\d+)\\}/;\n     var RANGE_REG = /\\[(\\d+)\\-(\\d+)\\]/;\n     var min, max, tmp, repetitions;\n     var token = string.match(RANGE_REP_REG);\n     while(token !== null){\n       min = parseInt(token[2]);\n       max =  parseInt(token[3]);\n       // switch min and max\n       if(min>max) {\n         tmp = max;\n         max = min;\n         min = tmp;\n       }\n       repetitions = faker.random.number({min:min,max:max});\n       string = string.slice(0,token.index) + faker.helpers.repeatString(token[1], repetitions) + string.slice(token.index+token[0].length);\n       token = string.match(RANGE_REP_REG);\n     }\n     // Deal with repeat `{num}`\n     token = string.match(REP_REG);\n     while(token !== null){\n       repetitions = parseInt(token[2]);\n       string = string.slice(0,token.index)+ faker.helpers.repeatString(token[1], repetitions) + string.slice(token.index+token[0].length);\n       token = string.match(REP_REG);\n     }\n     // Deal with range `[min-max]` (only works with numbers for now)\n     //TODO: implement for letters e.g. [0-9a-zA-Z] etc.\n\n     token = string.match(RANGE_REG);\n     while(token !== null){\n       min = parseInt(token[1]); // This time we are not capturing the char before `[]`\n       max =  parseInt(token[2]);\n       // switch min and max\n       if(min>max) {\n         tmp = max;\n         max = min;\n         min = tmp;\n       }\n        string = string.slice(0,token.index) +\n          faker.random.number({min:min, max:max}).toString() +\n          string.slice(token.index+token[0].length);\n        token = string.match(RANGE_REG);\n     }\n     return string;\n   };\n\n  /**\n   * takes an array and randomizes it in place then returns it\n   * \n   * uses the modern version of the Fisher–Yates algorithm\n   *\n   * @method faker.helpers.shuffle\n   * @param {array} o\n   */\n  self.shuffle = function (o) {\n      if (typeof o === 'undefined' || o.length === 0) {\n        return o || [];\n      }\n      o = o || [\"a\", \"b\", \"c\"];\n      for (var x, j, i = o.length - 1; i > 0; --i) {\n        j = faker.random.number(i);\n        x = o[i];\n        o[i] = o[j];\n        o[j] = x;\n      }\n      return o;\n  };\n\n  /**\n   * mustache\n   *\n   * @method faker.helpers.mustache\n   * @param {string} str\n   * @param {object} data\n   */\n  self.mustache = function (str, data) {\n    if (typeof str === 'undefined') {\n      return '';\n    }\n    for(var p in data) {\n      var re = new RegExp('{{' + p + '}}', 'g')\n      str = str.replace(re, data[p]);\n    }\n    return str;\n  };\n\n  /**\n   * createCard\n   *\n   * @method faker.helpers.createCard\n   */\n  self.createCard = function () {\n      return {\n          \"name\": faker.name.findName(),\n          \"username\": faker.internet.userName(),\n          \"email\": faker.internet.email(),\n          \"address\": {\n              \"streetA\": faker.address.streetName(),\n              \"streetB\": faker.address.streetAddress(),\n              \"streetC\": faker.address.streetAddress(true),\n              \"streetD\": faker.address.secondaryAddress(),\n              \"city\": faker.address.city(),\n              \"state\": faker.address.state(),\n              \"country\": faker.address.country(),\n              \"zipcode\": faker.address.zipCode(),\n              \"geo\": {\n                  \"lat\": faker.address.latitude(),\n                  \"lng\": faker.address.longitude()\n              }\n          },\n          \"phone\": faker.phone.phoneNumber(),\n          \"website\": faker.internet.domainName(),\n          \"company\": {\n              \"name\": faker.company.companyName(),\n              \"catchPhrase\": faker.company.catchPhrase(),\n              \"bs\": faker.company.bs()\n          },\n          \"posts\": [\n              {\n                  \"words\": faker.lorem.words(),\n                  \"sentence\": faker.lorem.sentence(),\n                  \"sentences\": faker.lorem.sentences(),\n                  \"paragraph\": faker.lorem.paragraph()\n              },\n              {\n                  \"words\": faker.lorem.words(),\n                  \"sentence\": faker.lorem.sentence(),\n                  \"sentences\": faker.lorem.sentences(),\n                  \"paragraph\": faker.lorem.paragraph()\n              },\n              {\n                  \"words\": faker.lorem.words(),\n                  \"sentence\": faker.lorem.sentence(),\n                  \"sentences\": faker.lorem.sentences(),\n                  \"paragraph\": faker.lorem.paragraph()\n              }\n          ],\n          \"accountHistory\": [faker.helpers.createTransaction(), faker.helpers.createTransaction(), faker.helpers.createTransaction()]\n      };\n  };\n\n  /**\n   * contextualCard\n   *\n   * @method faker.helpers.contextualCard\n   */\n  self.contextualCard = function () {\n    var name = faker.name.firstName(),\n        userName = faker.internet.userName(name);\n    return {\n        \"name\": name,\n        \"username\": userName,\n        \"avatar\": faker.internet.avatar(),\n        \"email\": faker.internet.email(userName),\n        \"dob\": faker.date.past(50, new Date(\"Sat Sep 20 1992 21:35:02 GMT+0200 (CEST)\")),\n        \"phone\": faker.phone.phoneNumber(),\n        \"address\": {\n            \"street\": faker.address.streetName(true),\n            \"suite\": faker.address.secondaryAddress(),\n            \"city\": faker.address.city(),\n            \"zipcode\": faker.address.zipCode(),\n            \"geo\": {\n                \"lat\": faker.address.latitude(),\n                \"lng\": faker.address.longitude()\n            }\n        },\n        \"website\": faker.internet.domainName(),\n        \"company\": {\n            \"name\": faker.company.companyName(),\n            \"catchPhrase\": faker.company.catchPhrase(),\n            \"bs\": faker.company.bs()\n        }\n    };\n  };\n\n\n  /**\n   * userCard\n   *\n   * @method faker.helpers.userCard\n   */\n  self.userCard = function () {\n      return {\n          \"name\": faker.name.findName(),\n          \"username\": faker.internet.userName(),\n          \"email\": faker.internet.email(),\n          \"address\": {\n              \"street\": faker.address.streetName(true),\n              \"suite\": faker.address.secondaryAddress(),\n              \"city\": faker.address.city(),\n              \"zipcode\": faker.address.zipCode(),\n              \"geo\": {\n                  \"lat\": faker.address.latitude(),\n                  \"lng\": faker.address.longitude()\n              }\n          },\n          \"phone\": faker.phone.phoneNumber(),\n          \"website\": faker.internet.domainName(),\n          \"company\": {\n              \"name\": faker.company.companyName(),\n              \"catchPhrase\": faker.company.catchPhrase(),\n              \"bs\": faker.company.bs()\n          }\n      };\n  };\n\n  /**\n   * createTransaction\n   *\n   * @method faker.helpers.createTransaction\n   */\n  self.createTransaction = function(){\n    return {\n      \"amount\" : faker.finance.amount(),\n      \"date\" : new Date(2012, 1, 2),  //TODO: add a ranged date method\n      \"business\": faker.company.companyName(),\n      \"name\": [faker.finance.accountName(), faker.finance.mask()].join(' '),\n      \"type\" : self.randomize(faker.definitions.finance.transaction_type),\n      \"account\" : faker.finance.account()\n    };\n  };\n\n  return self;\n\n};\n\n\n/*\nString.prototype.capitalize = function () { //v1.0\n    return this.replace(/\\w+/g, function (a) {\n        return a.charAt(0).toUpperCase() + a.substr(1).toLowerCase();\n    });\n};\n*/\n\nmodule['exports'] = Helpers;\n","/**\n *\n * @namespace faker.name\n */\nfunction Name (faker) {\n\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n\n      if(typeof gender === 'string') {\n        if(gender.toLowerCase() === 'male') {\n          gender = 0;\n        }\n        else if(gender.toLowerCase() === 'female') {\n          gender = 1;\n        }\n      }\n\n      if (typeof gender !== 'number') {\n        if(typeof faker.definitions.name.first_name === \"undefined\") {\n          gender = faker.random.number(1);\n        }\n        else {\n          //Fall back to non-gendered names if they exist and gender wasn't specified\n          return faker.random.arrayElement(faker.definitions.name.first_name);\n        }\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.definitions.name.male_first_name)\n      } else {\n        return faker.random.arrayElement(faker.definitions.name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n   /**\n   * middleName\n   *\n   * @method middleName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.middleName = function (gender) {\n    if (typeof faker.definitions.name.male_middle_name !== \"undefined\" && typeof faker.definitions.name.female_middle_name !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_middle_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_middle_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.middle_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n      var r = faker.random.number(8);\n      var prefix, suffix;\n      // in particular locales first and last names split by gender,\n      // thus we keep consistency by passing 0 as male and 1 as female\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      firstName = firstName || faker.name.firstName(gender);\n      lastName = lastName || faker.name.lastName(gender);\n      switch (r) {\n      case 0:\n          prefix = faker.name.prefix(gender);\n          if (prefix) {\n              return prefix + \" \" + firstName + \" \" + lastName;\n          }\n      case 1:\n          suffix = faker.name.suffix(gender);\n          if (suffix) {\n              return firstName + \" \" + lastName + \" \" + suffix;\n          }\n      }\n\n      return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return  faker.name.jobDescriptor() + \" \" +\n      faker.name.jobArea() + \" \" +\n      faker.name.jobType();\n  };\n\n  /**\n   * gender\n   *\n   * @method gender\n   * @memberof faker.name\n   */\n  this.gender = function () {\n    return faker.random.arrayElement(faker.definitions.name.gender);\n  }\n  \n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n      return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function() {\n      var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n          level       = faker.random.arrayElement(faker.definitions.name.title.level),\n          job         = faker.random.arrayElement(faker.definitions.name.title.job);\n\n      return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n\n}\n\nmodule['exports'] = Name;\n","/**\n *\n * @namespace faker.address\n */\nfunction Address (faker) {\n  var f = faker.fake,\n      Helpers = faker.helpers;\n\n  /**\n   * Generates random zipcode from format. If format is not specified, the\n   * locale's zip format is used.\n   *\n   * @method faker.address.zipCode\n   * @param {String} format\n   */\n  this.zipCode = function(format) {\n    // if zip format is not specified, use the zip format defined for the locale\n    if (typeof format === 'undefined') {\n      var localeFormat = faker.definitions.address.postcode;\n      if (typeof localeFormat === 'string') {\n        format = localeFormat;\n      } else {\n        format = faker.random.arrayElement(localeFormat);\n      }\n    }\n    return Helpers.replaceSymbols(format);\n  }\n\n  /**\n   * Generates random zipcode from state abbreviation. If state abbreviation is\n   * not specified, a random zip code is generated according to the locale's zip format.\n   * Only works for locales with postcode_by_state definition. If a locale does not\n   * have a postcode_by_state definition, a random zip code is generated according\n   * to the locale's zip format.\n   *\n   * @method faker.address.zipCodeByState\n   * @param {String} state\n   */\n  this.zipCodeByState = function (state) {\n    var zipRange = faker.definitions.address.postcode_by_state[state];\n    if (zipRange) {\n      return faker.random.number(zipRange);\n    }\n    return faker.address.zipCode();\n  }\n\n  /**\n   * Generates a random localized city name. The format string can contain any\n   * method provided by faker wrapped in `{{}}`, e.g. `{{name.firstName}}` in\n   * order to build the city name.\n   *\n   * If no format string is provided one of the following is randomly used:\n   *\n   * * `{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}`\n   * * `{{address.cityPrefix}} {{name.firstName}}`\n   * * `{{name.firstName}}{{address.citySuffix}}`\n   * * `{{name.lastName}}{{address.citySuffix}}`\n   *\n   * @method faker.address.city\n   * @param {String} format\n   */\n  this.city = function (format) {\n    var formats = [\n      '{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}',\n      '{{address.cityPrefix}} {{name.firstName}}',\n      '{{name.firstName}}{{address.citySuffix}}',\n      '{{name.lastName}}{{address.citySuffix}}'\n    ];\n\n    if (typeof format !== \"number\") {\n      format = faker.random.number(formats.length - 1);\n    }\n\n    return f(formats[format]);\n\n  }\n\n  /**\n   * Return a random localized city prefix\n   * @method faker.address.cityPrefix\n   */\n  this.cityPrefix = function () {\n    return faker.random.arrayElement(faker.definitions.address.city_prefix);\n  }\n\n  /**\n   * Return a random localized city suffix\n   *\n   * @method faker.address.citySuffix\n   */\n  this.citySuffix = function () {\n    return faker.random.arrayElement(faker.definitions.address.city_suffix);\n  }\n\n  /**\n   * Returns a random localized street name\n   *\n   * @method faker.address.streetName\n   */\n  this.streetName = function () {\n      var result;\n      var suffix = faker.address.streetSuffix();\n      if (suffix !== \"\") {\n          suffix = \" \" + suffix\n      }\n\n      switch (faker.random.number(1)) {\n      case 0:\n          result = faker.name.lastName() + suffix;\n          break;\n      case 1:\n          result = faker.name.firstName() + suffix;\n          break;\n      }\n      return result;\n  }\n\n  //\n  // TODO: change all these methods that accept a boolean to instead accept an options hash.\n  //\n  /**\n   * Returns a random localized street address\n   *\n   * @method faker.address.streetAddress\n   * @param {Boolean} useFullAddress\n   */\n  this.streetAddress = function (useFullAddress) {\n      if (useFullAddress === undefined) { useFullAddress = false; }\n      var address = \"\";\n      switch (faker.random.number(2)) {\n      case 0:\n          address = Helpers.replaceSymbolWithNumber(\"#####\") + \" \" + faker.address.streetName();\n          break;\n      case 1:\n          address = Helpers.replaceSymbolWithNumber(\"####\") +  \" \" + faker.address.streetName();\n          break;\n      case 2:\n          address = Helpers.replaceSymbolWithNumber(\"###\") + \" \" + faker.address.streetName();\n          break;\n      }\n      return useFullAddress ? (address + \" \" + faker.address.secondaryAddress()) : address;\n  }\n\n  /**\n   * streetSuffix\n   *\n   * @method faker.address.streetSuffix\n   */\n  this.streetSuffix = function () {\n      return faker.random.arrayElement(faker.definitions.address.street_suffix);\n  }\n\n  /**\n   * streetPrefix\n   *\n   * @method faker.address.streetPrefix\n   */\n  this.streetPrefix = function () {\n      return faker.random.arrayElement(faker.definitions.address.street_prefix);\n  }\n\n  /**\n   * secondaryAddress\n   *\n   * @method faker.address.secondaryAddress\n   */\n  this.secondaryAddress = function () {\n      return Helpers.replaceSymbolWithNumber(faker.random.arrayElement(\n          [\n              'Apt. ###',\n              'Suite ###'\n          ]\n      ));\n  }\n\n  /**\n   * county\n   *\n   * @method faker.address.county\n   */\n  this.county = function () {\n    return faker.random.arrayElement(faker.definitions.address.county);\n  }\n\n  /**\n   * country\n   *\n   * @method faker.address.country\n   */\n  this.country = function () {\n    return faker.random.arrayElement(faker.definitions.address.country);\n  }\n\n  /**\n   * countryCode\n   *\n   * @method faker.address.countryCode\n   * @param {string} alphaCode default alpha-2\n   */\n  this.countryCode = function (alphaCode) {\n    \n    if (typeof alphaCode === 'undefined' || alphaCode === 'alpha-2') {\n        return faker.random.arrayElement(faker.definitions.address.country_code);\n    }\n\n    if (alphaCode === 'alpha-3') {\n        return faker.random.arrayElement(faker.definitions.address.country_code_alpha_3);\n    }\n      \n    return faker.random.arrayElement(faker.definitions.address.country_code);\n\n  }\n\n  /**\n   * state\n   *\n   * @method faker.address.state\n   * @param {Boolean} useAbbr\n   */\n  this.state = function (useAbbr) {\n      return faker.random.arrayElement(faker.definitions.address.state);\n  }\n\n  /**\n   * stateAbbr\n   *\n   * @method faker.address.stateAbbr\n   */\n  this.stateAbbr = function () {\n      return faker.random.arrayElement(faker.definitions.address.state_abbr);\n  }\n\n  /**\n   * latitude\n   *\n   * @method faker.address.latitude\n   * @param {Double} max default is 90\n   * @param {Double} min default is -90\n   * @param {number} precision default is 4\n   */\n  this.latitude = function (max, min, precision) {\n      max       = max || 90\n      min       = min || -90\n      precision = precision || 4\n\n      return faker.random.number({\n        max: max,\n        min: min,\n        precision: parseFloat((0.0).toPrecision(precision) + '1')\n      }).toFixed(precision);\n  }\n\n  /**\n   * longitude\n   *\n   * @method faker.address.longitude\n   * @param {Double} max default is 180\n   * @param {Double} min default is -180\n   * @param {number} precision default is 4\n   */\n  this.longitude = function (max, min, precision) {\n      max       = max || 180\n      min       = min || -180\n      precision = precision || 4\n\n      return faker.random.number({\n        max: max,\n        min: min,\n        precision: parseFloat((0.0).toPrecision(precision) + '1')\n      }).toFixed(precision);\n  }\n\n  /**\n   *  direction\n   *\n   * @method faker.address.direction\n   * @param {Boolean} useAbbr return direction abbreviation. defaults to false\n   */\n  this.direction = function (useAbbr) {\n    if (typeof useAbbr === 'undefined' || useAbbr === false) {\n      return faker.random.arrayElement(faker.definitions.address.direction);\n    }\n    return faker.random.arrayElement(faker.definitions.address.direction_abbr);\n  }\n\n  this.direction.schema = {\n    \"description\": \"Generates a direction. Use optional useAbbr bool to return abbreviation\",\n    \"sampleResults\": [\"Northwest\", \"South\", \"SW\", \"E\"]\n  };\n\n  /**\n   * cardinal direction\n   *\n   * @method faker.address.cardinalDirection\n   * @param {Boolean} useAbbr return direction abbreviation. defaults to false\n   */\n  this.cardinalDirection = function (useAbbr) {\n    if (typeof useAbbr === 'undefined' || useAbbr === false) {\n      return (\n        faker.random.arrayElement(faker.definitions.address.direction.slice(0, 4))\n      );\n    }\n    return (\n      faker.random.arrayElement(faker.definitions.address.direction_abbr.slice(0, 4))\n    );\n  }\n\n  this.cardinalDirection.schema = {\n    \"description\": \"Generates a cardinal direction. Use optional useAbbr boolean to return abbreviation\",\n    \"sampleResults\": [\"North\", \"South\", \"E\", \"W\"]\n  };\n\n  /**\n   * ordinal direction\n   *\n   * @method faker.address.ordinalDirection\n   * @param {Boolean} useAbbr return direction abbreviation. defaults to false\n   */\n  this.ordinalDirection = function (useAbbr) {\n    if (typeof useAbbr === 'undefined' || useAbbr === false) {\n      return (\n        faker.random.arrayElement(faker.definitions.address.direction.slice(4, 8))\n      );\n    }\n    return (\n      faker.random.arrayElement(faker.definitions.address.direction_abbr.slice(4, 8))\n    );\n  }\n\n  this.ordinalDirection.schema = {\n    \"description\": \"Generates an ordinal direction. Use optional useAbbr boolean to return abbreviation\",\n    \"sampleResults\": [\"Northwest\", \"Southeast\", \"SW\", \"NE\"]\n  };\n\n  this.nearbyGPSCoordinate = function(coordinate, radius, isMetric) {\n        function randomFloat(min, max) {\n            return Math.random() * (max-min) + min;\n        }\n        function degreesToRadians(degrees) {\n            return degrees * (Math.PI/180.0);\n        }\n        function radiansToDegrees(radians) {\n            return radians * (180.0/Math.PI);\n        }\n        function kilometersToMiles(miles) {\n            return miles * 0.621371;\n        }\n        function coordinateWithOffset(coordinate, bearing, distance, isMetric) {\n            var R = 6378.137; // Radius of the Earth (http://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html)\n            var d = isMetric ? distance : kilometersToMiles(distance); // Distance in km\n\n            var lat1 = degreesToRadians(coordinate[0]); //Current lat point converted to radians\n            var lon1 = degreesToRadians(coordinate[1]); //Current long point converted to radians\n\n            var lat2 = Math.asin(Math.sin(lat1) * Math.cos(d/R) +\n                Math.cos(lat1) * Math.sin(d/R) * Math.cos(bearing));\n\n            var lon2 = lon1 + Math.atan2(\n                Math.sin(bearing) * Math.sin(d/R) * Math.cos(lat1),\n                Math.cos(d/R) - Math.sin(lat1) * Math.sin(lat2));\n\n            // Keep longitude in range [-180, 180]\n            if (lon2 > degreesToRadians(180)) {\n                lon2 = lon2 - degreesToRadians(360);\n            } else if (lon2 < degreesToRadians(-180)) {\n                lon2 = lon2 + degreesToRadians(360);\n            }\n\n            return [radiansToDegrees(lat2), radiansToDegrees(lon2)];\n        }\n\n        // If there is no coordinate, the best we can do is return a random GPS coordinate.\n        if (coordinate === undefined) {\n            return [faker.address.latitude(), faker.address.longitude()]\n        }\n        radius = radius || 10.0;\n        isMetric = isMetric || false;\n\n        // TODO: implement either a gaussian/uniform distribution of points in cicular region.\n        // Possibly include param to function that allows user to choose between distributions.\n\n        // This approach will likely result in a higher density of points near the center.\n        var randomCoord = coordinateWithOffset(coordinate, degreesToRadians(Math.random() * 360.0), radius, isMetric);\n        return [randomCoord[0].toFixed(4), randomCoord[1].toFixed(4)];\n    }\n\n    /**\n     * Return a random time zone\n     * @method faker.address.timeZone\n     */\n    this.timeZone = function() {\n      return faker.random.arrayElement(faker.definitions.address.time_zone);\n    }\n\n  return this;\n}\n\nmodule.exports = Address;\n","/**\n *\n * @namespace faker.company\n */\nvar Company = function (faker) {\n  \n  var self = this;\n  var f = faker.fake;\n  \n  /**\n   * suffixes\n   *\n   * @method faker.company.suffixes\n   */\n  this.suffixes = function () {\n    // Don't want the source array exposed to modification, so return a copy\n    return faker.definitions.company.suffix.slice(0);\n  }\n\n  /**\n   * companyName\n   *\n   * @method faker.company.companyName\n   * @param {string} format\n   */\n  this.companyName = function (format) {\n\n    var formats = [\n      '{{name.lastName}} {{company.companySuffix}}',\n      '{{name.lastName}} - {{name.lastName}}',\n      '{{name.lastName}}, {{name.lastName}} and {{name.lastName}}'\n    ];\n\n    if (typeof format !== \"number\") {\n      format = faker.random.number(formats.length - 1);\n    }\n\n    return f(formats[format]);\n  }\n\n  /**\n   * companySuffix\n   *\n   * @method faker.company.companySuffix\n   */\n  this.companySuffix = function () {\n      return faker.random.arrayElement(faker.company.suffixes());\n  }\n\n  /**\n   * catchPhrase\n   *\n   * @method faker.company.catchPhrase\n   */\n  this.catchPhrase = function () {\n    return f('{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}')\n  }\n\n  /**\n   * bs\n   *\n   * @method faker.company.bs\n   */\n  this.bs = function () {\n    return f('{{company.bsBuzz}} {{company.bsAdjective}} {{company.bsNoun}}');\n  }\n\n  /**\n   * catchPhraseAdjective\n   *\n   * @method faker.company.catchPhraseAdjective\n   */\n  this.catchPhraseAdjective = function () {\n      return faker.random.arrayElement(faker.definitions.company.adjective);\n  }\n\n  /**\n   * catchPhraseDescriptor\n   *\n   * @method faker.company.catchPhraseDescriptor\n   */\n  this.catchPhraseDescriptor = function () {\n      return faker.random.arrayElement(faker.definitions.company.descriptor);\n  }\n\n  /**\n   * catchPhraseNoun\n   *\n   * @method faker.company.catchPhraseNoun\n   */\n  this.catchPhraseNoun = function () {\n      return faker.random.arrayElement(faker.definitions.company.noun);\n  }\n\n  /**\n   * bsAdjective\n   *\n   * @method faker.company.bsAdjective\n   */\n  this.bsAdjective = function () {\n      return faker.random.arrayElement(faker.definitions.company.bs_adjective);\n  }\n\n  /**\n   * bsBuzz\n   *\n   * @method faker.company.bsBuzz\n   */\n  this.bsBuzz = function () {\n      return faker.random.arrayElement(faker.definitions.company.bs_verb);\n  }\n\n  /**\n   * bsNoun\n   *\n   * @method faker.company.bsNoun\n   */\n  this.bsNoun = function () {\n      return faker.random.arrayElement(faker.definitions.company.bs_noun);\n  }\n  \n}\n\nmodule['exports'] = Company;","module[\"exports\"] = {\n  alpha: [\n    'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'\n  ],\n  pattern10: [\n    \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\"\n  ],\n  pattern100: [\n    \"001\", \"002\", \"003\", \"004\", \"005\", \"006\", \"007\", \"008\", \"009\"\n  ],\n  toDigitString: function (str) {\n      return str.replace(/[A-Z]/gi, function(match) {\n          return match.toUpperCase().charCodeAt(0) - 55;\n      });\n  },\n  mod97: function (digitStr) {\n      var m = 0;\n      for (var i = 0; i < digitStr.length; i++) {\n          m = ((m * 10) + (digitStr[i] |0)) % 97;\n      }\n      return m;\n  },\n  formats: [\n    {\n      country: \"AL\",\n      total: 28,\n      bban: [\n        {\n          type: \"n\",\n          count: 8\n        },\n        {\n          type: \"c\",\n          count: 16\n        }\n      ],\n      format: \"ALkk bbbs sssx cccc cccc cccc cccc\"\n    },\n    {\n      country: \"AD\",\n      total: 24,\n      bban: [\n        {\n          type: \"n\",\n          count: 8\n        },\n        {\n          type: \"c\",\n          count: 12\n        }\n      ],\n      format: \"ADkk bbbb ssss cccc cccc cccc\"\n    },\n    {\n      country: \"AT\",\n      total: 20,\n      bban: [\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"n\",\n          count: 11\n        }\n      ],\n      format: \"ATkk bbbb bccc cccc cccc\"\n    },\n    {\n      country: \"AZ\",\n      total: 28,\n      bban: [\n        {\n          type: \"c\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 20\n        }\n      ],\n      format: \"AZkk bbbb cccc cccc cccc cccc cccc\"\n    },\n    {\n      country: \"BH\",\n      total: 22,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 14\n        }\n      ],\n      format: \"BHkk bbbb cccc cccc cccc cc\"\n    },\n    {\n      country: \"BE\",\n      total: 16,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"n\",\n          count: 9\n        }\n      ],\n      format: \"BEkk bbbc cccc ccxx\"\n    },\n    {\n      country: \"BA\",\n      total: 20,\n      bban: [\n        {\n          type: \"n\",\n          count: 6\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"BAkk bbbs sscc cccc ccxx\"\n    },\n    {\n      country: \"BR\",\n      total: 29,\n      bban: [\n        {\n          type: \"n\",\n          count: 13\n        },\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"a\",\n          count: 1\n        },\n        {\n          type: \"c\",\n          count: 1\n        }\n      ],\n      format: \"BRkk bbbb bbbb ssss sccc cccc ccct n\"\n    },\n    {\n      country: \"BG\",\n      total: 22,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 6\n        },\n        {\n          type: \"c\",\n          count: 8\n        }\n      ],\n      format: \"BGkk bbbb ssss ddcc cccc cc\"\n    },\n    {\n      country: \"CR\",\n      total: 21,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"n\",\n          count: 14\n        }\n      ],\n      format: \"CRkk bbbc cccc cccc cccc c\"\n    },\n    {\n      country: \"HR\",\n      total: 21,\n      bban: [\n        {\n          type: \"n\",\n          count: 7\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"HRkk bbbb bbbc cccc cccc c\"\n    },\n    {\n      country: \"CY\",\n      total: 28,\n      bban: [\n        {\n          type: \"n\",\n          count: 8\n        },\n        {\n          type: \"c\",\n          count: 16\n        }\n      ],\n      format: \"CYkk bbbs ssss cccc cccc cccc cccc\"\n    },\n    {\n      country: \"CZ\",\n      total: 24,\n      bban: [\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"CZkk bbbb ssss sscc cccc cccc\"\n    },\n    {\n      country: \"DK\",\n      total: 18,\n      bban: [\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"DKkk bbbb cccc cccc cc\"\n    },\n    {\n      country: \"DO\",\n      total: 28,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 20\n        }\n      ],\n      format: \"DOkk bbbb cccc cccc cccc cccc cccc\"\n    },\n    {\n      country: \"TL\",\n      total: 23,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"TLkk bbbc cccc cccc cccc cxx\"\n    },\n    {\n      country: \"EE\",\n      total: 20,\n      bban: [\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 12\n        }\n      ],\n      format: \"EEkk bbss cccc cccc cccx\"\n    },\n    {\n      country: \"FO\",\n      total: 18,\n      bban: [\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"FOkk bbbb cccc cccc cx\"\n    },\n    {\n      country: \"FI\",\n      total: 18,\n      bban: [\n        {\n          type: \"n\",\n          count: 6\n        },\n        {\n          type: \"n\",\n          count: 8\n        }\n      ],\n      format: \"FIkk bbbb bbcc cccc cx\"\n    },\n    {\n      country: \"FR\",\n      total: 27,\n      bban: [\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"c\",\n          count: 11\n        },\n        {\n          type: \"n\",\n          count: 2\n        }\n      ],\n      format: \"FRkk bbbb bggg ggcc cccc cccc cxx\"\n    },\n    {\n      country: \"GE\",\n      total: 22,\n      bban: [\n        {\n          type: \"c\",\n          count: 2\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"GEkk bbcc cccc cccc cccc cc\"\n    },\n    {\n      country: \"DE\",\n      total: 22,\n      bban: [\n        {\n          type: \"n\",\n          count: 8\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"DEkk bbbb bbbb cccc cccc cc\"\n    },\n    {\n      country: \"GI\",\n      total: 23,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 15\n        }\n      ],\n      format: \"GIkk bbbb cccc cccc cccc ccc\"\n    },\n    {\n      country: \"GR\",\n      total: 27,\n      bban: [\n        {\n          type: \"n\",\n          count: 7\n        },\n        {\n          type: \"c\",\n          count: 16\n        }\n      ],\n      format: \"GRkk bbbs sssc cccc cccc cccc ccc\"\n    },\n    {\n      country: \"GL\",\n      total: 18,\n      bban: [\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"GLkk bbbb cccc cccc cc\"\n    },\n    {\n      country: \"GT\",\n      total: 28,\n      bban: [\n        {\n          type: \"c\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 16\n        }\n      ],\n      format: \"GTkk bbbb mmtt cccc cccc cccc cccc\"\n    },\n    {\n      country: \"HU\",\n      total: 28,\n      bban: [\n        {\n          type: \"n\",\n          count: 8\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"HUkk bbbs sssk cccc cccc cccc cccx\"\n    },\n    {\n      country: \"IS\",\n      total: 26,\n      bban: [\n        {\n          type: \"n\",\n          count: 6\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"ISkk bbbb sscc cccc iiii iiii ii\"\n    },\n    {\n      country: \"IE\",\n      total: 22,\n      bban: [\n        {\n          type: \"c\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 6\n        },\n        {\n          type: \"n\",\n          count: 8\n        }\n      ],\n      format: \"IEkk aaaa bbbb bbcc cccc cc\"\n    },\n    {\n      country: \"IL\",\n      total: 23,\n      bban: [\n        {\n          type: \"n\",\n          count: 6\n        },\n        {\n          type: \"n\",\n          count: 13\n        }\n      ],\n      format: \"ILkk bbbn nncc cccc cccc ccc\"\n    },\n    {\n      country: \"IT\",\n      total: 27,\n      bban: [\n        {\n          type: \"a\",\n          count: 1\n        },\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"c\",\n          count: 12\n        }\n      ],\n      format: \"ITkk xaaa aabb bbbc cccc cccc ccc\"\n    },\n    {\n      country: \"JO\",\n      total: 30,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 18\n        }\n      ],\n      format: \"JOkk bbbb nnnn cccc cccc cccc cccc cc\"\n    },\n    {\n      country: \"KZ\",\n      total: 20,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"c\",\n          count: 13\n        }\n      ],\n      format: \"KZkk bbbc cccc cccc cccc\"\n    },\n    {\n      country: \"XK\",\n      total: 20,\n      bban: [\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 12\n        }\n      ],\n      format: \"XKkk bbbb cccc cccc cccc\"\n    },\n    {\n      country: \"KW\",\n      total: 30,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 22\n        }\n      ],\n      format: \"KWkk bbbb cccc cccc cccc cccc cccc cc\"\n    },\n    {\n      country: \"LV\",\n      total: 21,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 13\n        }\n      ],\n      format: \"LVkk bbbb cccc cccc cccc c\"\n    },\n    {\n      country: \"LB\",\n      total: 28,\n      bban: [\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 20\n        }\n      ],\n      format: \"LBkk bbbb cccc cccc cccc cccc cccc\"\n    },\n    {\n      country: \"LI\",\n      total: 21,\n      bban: [\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"c\",\n          count: 12\n        }\n      ],\n      format: \"LIkk bbbb bccc cccc cccc c\"\n    },\n    {\n      country: \"LT\",\n      total: 20,\n      bban: [\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"n\",\n          count: 11\n        }\n      ],\n      format: \"LTkk bbbb bccc cccc cccc\"\n    },\n    {\n      country: \"LU\",\n      total: 20,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"c\",\n          count: 13\n        }\n      ],\n      format: \"LUkk bbbc cccc cccc cccc\"\n    },\n    {\n      country: \"MK\",\n      total: 19,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"c\",\n          count: 10\n        },\n        {\n          type: \"n\",\n          count: 2\n        }\n      ],\n      format: \"MKkk bbbc cccc cccc cxx\"\n    },\n    {\n      country: \"MT\",\n      total: 31,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"c\",\n          count: 18\n        }\n      ],\n      format: \"MTkk bbbb ssss sccc cccc cccc cccc ccc\"\n    },\n    {\n      country: \"MR\",\n      total: 27,\n      bban: [\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"n\",\n          count: 13\n        }\n      ],\n      format: \"MRkk bbbb bsss sscc cccc cccc cxx\"\n    },\n    {\n      country: \"MU\",\n      total: 30,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 15\n        },\n        {\n          type: \"a\",\n          count: 3\n        }\n      ],\n      format: \"MUkk bbbb bbss cccc cccc cccc 000d dd\"\n    },\n    {\n      country: \"MC\",\n      total: 27,\n      bban: [\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"c\",\n          count: 11\n        },\n        {\n          type: \"n\",\n          count: 2\n        }\n      ],\n      format: \"MCkk bbbb bsss sscc cccc cccc cxx\"\n    },\n    {\n      country: \"MD\",\n      total: 24,\n      bban: [\n        {\n          type: \"c\",\n          count: 2\n        },\n        {\n          type: \"c\",\n          count: 18\n        }\n      ],\n      format: \"MDkk bbcc cccc cccc cccc cccc\"\n    },\n    {\n      country: \"ME\",\n      total: 22,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"n\",\n          count: 15\n        }\n      ],\n      format: \"MEkk bbbc cccc cccc cccc xx\"\n    },\n    {\n      country: \"NL\",\n      total: 18,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"NLkk bbbb cccc cccc cc\"\n    },\n    {\n      country: \"NO\",\n      total: 15,\n      bban: [\n        {\n          type: \"n\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 7\n        }\n      ],\n      format: \"NOkk bbbb cccc ccx\"\n    },\n    {\n      country: \"PK\",\n      total: 24,\n      bban: [\n        {\n          type: \"c\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"PKkk bbbb cccc cccc cccc cccc\"\n    },\n    {\n      country: \"PS\",\n      total: 29,\n      bban: [\n        {\n          type: \"c\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 9\n        },\n        {\n          type: \"n\",\n          count: 12\n        }\n      ],\n      format: \"PSkk bbbb xxxx xxxx xccc cccc cccc c\"\n    },\n    {\n      country: \"PL\",\n      total: 28,\n      bban: [\n        {\n          type: \"n\",\n          count: 8\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"PLkk bbbs sssx cccc cccc cccc cccc\"\n    },\n    {\n      country: \"PT\",\n      total: 25,\n      bban: [\n        {\n          type: \"n\",\n          count: 8\n        },\n        {\n          type: \"n\",\n          count: 13\n        }\n      ],\n      format: \"PTkk bbbb ssss cccc cccc cccx x\"\n    },\n    {\n      country: \"QA\",\n      total: 29,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 21\n        }\n      ],\n      format: \"QAkk bbbb cccc cccc cccc cccc cccc c\"\n    },\n    {\n      country: \"RO\",\n      total: 24,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"c\",\n          count: 16\n        }\n      ],\n      format: \"ROkk bbbb cccc cccc cccc cccc\"\n    },\n    {\n      country: \"SM\",\n      total: 27,\n      bban: [\n        {\n          type: \"a\",\n          count: 1\n        },\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"c\",\n          count: 12\n        }\n      ],\n      format: \"SMkk xaaa aabb bbbc cccc cccc ccc\"\n    },\n    {\n      country: \"SA\",\n      total: 24,\n      bban: [\n        {\n          type: \"n\",\n          count: 2\n        },\n        {\n          type: \"c\",\n          count: 18\n        }\n      ],\n      format: \"SAkk bbcc cccc cccc cccc cccc\"\n    },\n    {\n      country: \"RS\",\n      total: 22,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"n\",\n          count: 15\n        }\n      ],\n      format: \"RSkk bbbc cccc cccc cccc xx\"\n    },\n    {\n      country: \"SK\",\n      total: 24,\n      bban: [\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"SKkk bbbb ssss sscc cccc cccc\"\n    },\n    {\n      country: \"SI\",\n      total: 19,\n      bban: [\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"SIkk bbss sccc cccc cxx\"\n    },\n    {\n      country: \"ES\",\n      total: 24,\n      bban: [\n        {\n          type: \"n\",\n          count: 10\n        },\n        {\n          type: \"n\",\n          count: 10\n        }\n      ],\n      format: \"ESkk bbbb gggg xxcc cccc cccc\"\n    },\n    {\n      country: \"SE\",\n      total: 24,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"n\",\n          count: 17\n        }\n      ],\n      format: \"SEkk bbbc cccc cccc cccc cccc\"\n    },\n    {\n      country: \"CH\",\n      total: 21,\n      bban: [\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"c\",\n          count: 12\n        }\n      ],\n      format: \"CHkk bbbb bccc cccc cccc c\"\n    },\n    {\n      country: \"TN\",\n      total: 24,\n      bban: [\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"n\",\n          count: 15\n        }\n      ],\n      format: \"TNkk bbss sccc cccc cccc cccc\"\n    },\n    {\n      country: \"TR\",\n      total: 26,\n      bban: [\n        {\n          type: \"n\",\n          count: 5\n        },\n        {\n          type: \"c\",\n          count: 1\n        },\n        {\n          type: \"c\",\n          count: 16\n        }\n      ],\n      format: \"TRkk bbbb bxcc cccc cccc cccc cc\"\n    },\n    {\n      country: \"AE\",\n      total: 23,\n      bban: [\n        {\n          type: \"n\",\n          count: 3\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"AEkk bbbc cccc cccc cccc ccc\"\n    },\n    {\n      country: \"GB\",\n      total: 22,\n      bban: [\n        {\n          type: \"a\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 6\n        },\n        {\n          type: \"n\",\n          count: 8\n        }\n      ],\n      format: \"GBkk bbbb ssss sscc cccc cc\"\n    },\n    {\n      country: \"VG\",\n      total: 24,\n      bban: [\n        {\n          type: \"c\",\n          count: 4\n        },\n        {\n          type: \"n\",\n          count: 16\n        }\n      ],\n      format: \"VGkk bbbb cccc cccc cccc cccc\"\n    }\n  ],\n  iso3166: [\n    \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AI\", \"AL\", \"AM\", \"AN\", \"AO\", \"AQ\", \"AR\", \"AS\",\n    \"AT\", \"AU\", \"AW\", \"AX\", \"AZ\", \"BA\", \"BB\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\",\n    \"BJ\", \"BL\", \"BM\", \"BN\", \"BO\", \"BQ\", \"BR\", \"BS\", \"BT\", \"BU\", \"BV\", \"BW\", \"BY\",\n    \"BZ\", \"CA\", \"CC\", \"CD\", \"CE\", \"CF\", \"CG\", \"CH\", \"CI\", \"CK\", \"CL\", \"CM\", \"CN\",\n    \"CO\", \"CP\", \"CR\", \"CS\", \"CS\", \"CU\", \"CV\", \"CW\", \"CX\", \"CY\", \"CZ\", \"DD\", \"DE\",\n    \"DG\", \"DJ\", \"DK\", \"DM\", \"DO\", \"DZ\", \"EA\", \"EC\", \"EE\", \"EG\", \"EH\", \"ER\", \"ES\",\n    \"ET\", \"EU\", \"FI\", \"FJ\", \"FK\", \"FM\", \"FO\", \"FR\", \"FX\", \"GA\", \"GB\", \"GD\", \"GE\",\n    \"GF\", \"GG\", \"GH\", \"GI\", \"GL\", \"GM\", \"GN\", \"GP\", \"GQ\", \"GR\", \"GS\", \"GT\", \"GU\",\n    \"GW\", \"GY\", \"HK\", \"HM\", \"HN\", \"HR\", \"HT\", \"HU\", \"IC\", \"ID\", \"IE\", \"IL\", \"IM\",\n    \"IN\", \"IO\", \"IQ\", \"IR\", \"IS\", \"IT\", \"JE\", \"JM\", \"JO\", \"JP\", \"KE\", \"KG\", \"KH\",\n    \"KI\", \"KM\", \"KN\", \"KP\", \"KR\", \"KW\", \"KY\", \"KZ\", \"LA\", \"LB\", \"LC\", \"LI\", \"LK\",\n    \"LR\", \"LS\", \"LT\", \"LU\", \"LV\", \"LY\", \"MA\", \"MC\", \"MD\", \"ME\", \"MF\", \"MG\", \"MH\",\n    \"MK\", \"ML\", \"MM\", \"MN\", \"MO\", \"MP\", \"MQ\", \"MR\", \"MS\", \"MT\", \"MU\", \"MV\", \"MW\",\n    \"MX\", \"MY\", \"MZ\", \"NA\", \"NC\", \"NE\", \"NF\", \"NG\", \"NI\", \"NL\", \"NO\", \"NP\", \"NR\",\n    \"NT\", \"NU\", \"NZ\", \"OM\", \"PA\", \"PE\", \"PF\", \"PG\", \"PH\", \"PK\", \"PL\", \"PM\", \"PN\",\n    \"PR\", \"PS\", \"PT\", \"PW\", \"PY\", \"QA\", \"RE\", \"RO\", \"RS\", \"RU\", \"RW\", \"SA\", \"SB\",\n    \"SC\", \"SD\", \"SE\", \"SG\", \"SH\", \"SI\", \"SJ\", \"SK\", \"SL\", \"SM\", \"SN\", \"SO\", \"SR\",\n    \"SS\", \"ST\", \"SU\", \"SV\", \"SX\", \"SY\", \"SZ\", \"TA\", \"TC\", \"TD\", \"TF\", \"TG\", \"TH\",\n    \"TJ\", \"TK\", \"TL\", \"TM\", \"TN\", \"TO\", \"TR\", \"TT\", \"TV\", \"TW\", \"TZ\", \"UA\", \"UG\",\n    \"UM\", \"US\", \"UY\", \"UZ\", \"VA\", \"VC\", \"VE\", \"VG\", \"VI\", \"VN\", \"VU\", \"WF\", \"WS\",\n    \"YE\", \"YT\", \"YU\", \"ZA\", \"ZM\", \"ZR\", \"ZW\"\n  ]\n}","/**\n * @namespace faker.finance\n */\nvar Finance = function (faker) {\n  var ibanLib = require(\"./iban\");\n  var Helpers = faker.helpers,\n      self = this;\n\n  /**\n   * account\n   *\n   * @method faker.finance.account\n   * @param {number} length\n   */\n  self.account = function (length) {\n\n      length = length || 8;\n\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n      length = null;\n      return Helpers.replaceSymbolWithNumber(template);\n  };\n\n  /**\n   * accountName\n   *\n   * @method faker.finance.accountName\n   */\n  self.accountName = function () {\n\n      return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');\n  };\n\n  /**\n   * routingNumber\n   *\n   * @method faker.finance.routingNumber\n   */\n  self.routingNumber = function () {\n\n      var routingNumber = Helpers.replaceSymbolWithNumber('########');\n\n      // Modules 10 straight summation.\n      var sum = 0;\n\n      for (var i = 0; i < routingNumber.length; i += 3) {\n        sum += Number(routingNumber[i]) * 3;\n        sum += Number(routingNumber[i + 1]) * 7;\n        sum += Number(routingNumber[i + 2]) || 0;\n      }\n\n      return routingNumber + (Math.ceil(sum / 10) * 10 - sum);\n  }\n\n  /**\n   * mask\n   *\n   * @method faker.finance.mask\n   * @param {number} length\n   * @param {boolean} parens\n   * @param {boolean} ellipsis\n   */\n  self.mask = function (length, parens, ellipsis) {\n\n      //set defaults\n      length = (length == 0 || !length || typeof length == 'undefined') ? 4 : length;\n      parens = (parens === null) ? true : parens;\n      ellipsis = (ellipsis === null) ? true : ellipsis;\n\n      //create a template for length\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n\n      //prefix with ellipsis\n      template = (ellipsis) ? ['...', template].join('') : template;\n\n      template = (parens) ? ['(', template, ')'].join('') : template;\n\n      //generate random numbers\n      template = Helpers.replaceSymbolWithNumber(template);\n\n      return template;\n  };\n\n  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc\n  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol\n\n  /**\n   * amount\n   *\n   * @method faker.finance.amount\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n  self.amount = function (min, max, dec, symbol) {\n\n      min = min || 0;\n      max = max || 1000;\n      dec = dec === undefined ? 2 : dec;\n      symbol = symbol || '';\n      var randValue = faker.random.number({ max: max, min: min, precision: Math.pow(10, -dec) });\n      var stringNumber = symbol + randValue.toFixed(dec);\n\n      return symbol + randValue.toFixed(dec);\n  };\n\n  /**\n   * transactionType\n   *\n   * @method faker.finance.transactionType\n   */\n  self.transactionType = function () {\n      return Helpers.randomize(faker.definitions.finance.transaction_type);\n  };\n\n  /**\n   * currencyCode\n   *\n   * @method faker.finance.currencyCode\n   */\n  self.currencyCode = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency)['code'];\n  };\n\n  /**\n   * currencyName\n   *\n   * @method faker.finance.currencyName\n   */\n  self.currencyName = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency, 'key');\n  };\n\n  /**\n   * currencySymbol\n   *\n   * @method faker.finance.currencySymbol\n   */\n  self.currencySymbol = function () {\n      var symbol;\n\n      while (!symbol) {\n          symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];\n      }\n      return symbol;\n  };\n\n  /**\n   * bitcoinAddress\n   *\n   * @method  faker.finance.bitcoinAddress\n   */\n  self.bitcoinAddress = function () {\n    var addressLength = faker.random.number({ min: 25, max: 34 });\n\n    var address = faker.random.arrayElement(['1', '3']);\n\n    for (var i = 0; i < addressLength - 1; i++)\n      address += faker.random.arrayElement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'.split(''));\n\n    return address;\n  }\n\n/**\n * litecoinAddress\n *\n * @method  faker.finance.litecoinAddress\n */\nself.litecoinAddress = function () {\n  var addressLength = faker.random.number({ min: 26, max: 33 });\n\n  var address = faker.random.arrayElement(['L', 'M', '3']);\n\n  for (var i = 0; i < addressLength - 1; i++)\n    address += faker.random.arrayElement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'.split(''));\n\n  return address;\n}\n\n  /**\n   * Credit card number\n   * @method faker.finance.creditCardNumber\n   * @param {string} provider | scheme\n  */\n  self.creditCardNumber = function(provider){\n    provider = provider || \"\";\n    var format, formats;\n    var localeFormat = faker.definitions.finance.credit_card;\n    if (provider in localeFormat) {\n      formats = localeFormat[provider]; // there chould be multiple formats\n      if (typeof formats === \"string\") {\n        format = formats;\n      } else {\n        format = faker.random.arrayElement(formats);\n      }\n    } else if (provider.match(/#/)) { // The user chose an optional scheme\n      format = provider;\n    } else { // Choose a random provider\n      if (typeof localeFormat === 'string') {\n        format = localeFormat;\n      } else if( typeof localeFormat === \"object\") {\n        // Credit cards are in a object structure\n        formats = faker.random.objectElement(localeFormat, \"value\"); // There chould be multiple formats\n        if (typeof formats === \"string\") {\n          format = formats;\n        } else {\n          format = faker.random.arrayElement(formats);\n        }\n      }\n    }\n    format = format.replace(/\\//g,\"\")\n    return Helpers.replaceCreditCardSymbols(format);\n  };\n  /**\n   * Credit card CVV\n   * @method faker.finance.creditCardCVV\n  */\n  self.creditCardCVV = function() {\n    var cvv = \"\";\n    for (var i = 0; i < 3; i++) {\n      cvv += faker.random.number({max:9}).toString();\n    }\n    return cvv;\n  };\n\n  /**\n   * ethereumAddress\n   *\n   * @method  faker.finance.ethereumAddress\n   */\n  self.ethereumAddress = function () {\n    var address = faker.random.hexaDecimal(40).toLowerCase();\n\n    return address;\n  };\n\n  /**\n   * iban\n   *\n   * @param {boolean} [formatted=false] - Return a formatted version of the generated IBAN.\n   * @param {string} [countryCode] - The country code from which you want to generate an IBAN, if none is provided a random country will be used.\n   * @throws Will throw an error if the passed country code is not supported.\n   *\n   * @method  faker.finance.iban\n   */\n  self.iban = function (formatted, countryCode) {\n      var ibanFormat;\n      if (countryCode) {\n          var findFormat = function(currentFormat) { return currentFormat.country === countryCode; };\n          ibanFormat = ibanLib.formats.find(findFormat);\n      } else {\n          ibanFormat = faker.random.arrayElement(ibanLib.formats);\n      }\n\n      if (!ibanFormat) {\n          throw new Error('Country code ' + countryCode + ' not supported.');\n      }\n\n      var s = \"\";\n      var count = 0;\n      for (var b = 0; b < ibanFormat.bban.length; b++) {\n          var bban = ibanFormat.bban[b];\n          var c = bban.count;\n          count += bban.count;\n          while (c > 0) {\n              if (bban.type == \"a\") {\n                  s += faker.random.arrayElement(ibanLib.alpha);\n              } else if (bban.type == \"c\") {\n                  if (faker.random.number(100) < 80) {\n                      s += faker.random.number(9);\n                  } else {\n                      s += faker.random.arrayElement(ibanLib.alpha);\n                  }\n              } else {\n                  if (c >= 3 && faker.random.number(100) < 30) {\n                      if (faker.random.boolean()) {\n                          s += faker.random.arrayElement(ibanLib.pattern100);\n                          c -= 2;\n                      } else {\n                          s += faker.random.arrayElement(ibanLib.pattern10);\n                          c--;\n                      }\n                  } else {\n                      s += faker.random.number(9);\n                  }\n              }\n              c--;\n          }\n          s = s.substring(0, count);\n      }\n      var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + \"00\"));\n      if (checksum < 10) {\n          checksum = \"0\" + checksum;\n      }\n      var iban = ibanFormat.country + checksum + s;\n      return formatted ? iban.match(/.{1,4}/g).join(\" \") : iban;\n  };\n\n  /**\n   * bic\n   *\n   * @method  faker.finance.bic\n   */\n  self.bic = function () {\n      var vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n      var prob = faker.random.number(100);\n      return Helpers.replaceSymbols(\"???\") +\n          faker.random.arrayElement(vowels) +\n          faker.random.arrayElement(ibanLib.iso3166) +\n          Helpers.replaceSymbols(\"?\") + \"1\" +\n          (prob < 10 ?\n              Helpers.replaceSymbols(\"?\" + faker.random.arrayElement(vowels) + \"?\") :\n          prob < 40 ?\n              Helpers.replaceSymbols(\"###\") : \"\");\n  };\n\n  /**\n   * description\n   *\n   * @method  faker.finance.transactionDescription\n   */\n  self.transactionDescription = function() {\n    var account = Helpers.createTransaction().account\n    var card = faker.finance.mask();\n    var currency = faker.finance.currencyCode();\n    var amount = Helpers.createTransaction().amount\n    var transactionType = Helpers.createTransaction().type\n    var company = Helpers.createTransaction().business\n    return transactionType + \" transaction at \" + company + \" using card ending with ***\" + card + \" for \" + currency + \" \" + amount + \" in account ***\" + account\n  }\n\n};\n\nmodule['exports'] = Finance;\n","/**\n *\n * @namespace lorempixel\n * @memberof faker.image\n */\nvar Lorempixel = function (faker) {\n\n  var self = this;\n\n  /**\n   * image\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.image\n   */\n  self.image = function (width, height, randomize) {\n    var categories = [\"abstract\", \"animals\", \"business\", \"cats\", \"city\", \"food\", \"nightlife\", \"fashion\", \"people\", \"nature\", \"sports\", \"technics\", \"transport\"];\n    return self[faker.random.arrayElement(categories)](width, height, randomize);\n  };\n  /**\n   * avatar\n   *\n   * @method faker.image.lorempixel.avatar\n   */\n  self.avatar = function () {\n    return faker.internet.avatar();\n  };\n  /**\n   * imageUrl\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} category\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.imageUrl\n   */\n  self.imageUrl = function (width, height, category, randomize) {\n      var width = width || 640;\n      var height = height || 480;\n\n      var url ='https://lorempixel.com/' + width + '/' + height;\n      if (typeof category !== 'undefined') {\n        url += '/' + category;\n      }\n\n      if (randomize) {\n        url += '?' + faker.random.number()\n      }\n\n      return url;\n  };\n  /**\n   * abstract\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.abstract\n   */\n  self.abstract = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'abstract', randomize);\n  };\n  /**\n   * animals\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.animals\n   */\n  self.animals = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'animals', randomize);\n  };\n  /**\n   * business\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.business\n   */\n  self.business = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'business', randomize);\n  };\n  /**\n   * cats\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.cats\n   */\n  self.cats = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'cats', randomize);\n  };\n  /**\n   * city\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.city\n   */\n  self.city = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'city', randomize);\n  };\n  /**\n   * food\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.food\n   */\n  self.food = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'food', randomize);\n  };\n  /**\n   * nightlife\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.nightlife\n   */\n  self.nightlife = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'nightlife', randomize);\n  };\n  /**\n   * fashion\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.fashion\n   */\n  self.fashion = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'fashion', randomize);\n  };\n  /**\n   * people\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.people\n   */\n  self.people = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'people', randomize);\n  };\n  /**\n   * nature\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.nature\n   */\n  self.nature = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'nature', randomize);\n  };\n  /**\n   * sports\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.sports\n   */\n  self.sports = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'sports', randomize);\n  };\n  /**\n   * technics\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.technics\n   */\n  self.technics = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'technics', randomize);\n  };\n  /**\n   * transport\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.lorempixel.transport\n   */\n  self.transport = function (width, height, randomize) {\n    return faker.image.lorempixel.imageUrl(width, height, 'transport', randomize);\n  }\n}\n\nmodule[\"exports\"] = Lorempixel;\n","/**\n *\n * @namespace unsplash\n * @memberof faker.image\n */\nvar Unsplash = function (faker) {\n\n  var self = this;\n  var categories = [\"food\", \"nature\", \"people\", \"technology\", \"objects\", \"buildings\"];\n\n  /**\n   * image\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} keyword\n   * @method faker.image.unsplash.image\n   * @description search image from unsplash\n   */\n  self.image = function (width, height, keyword) {\n    return self.imageUrl(width, height, undefined, keyword);\n  };\n  /**\n   * avatar\n   *\n   * @method faker.image.unsplash.avatar\n   */\n  self.avatar = function () {\n    return faker.internet.avatar();\n  };\n  /**\n   * imageUrl\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} category\n   * @param {string} keyword\n   * @method faker.image.unsplash.imageUrl\n   */\n  self.imageUrl = function (width, height, category, keyword) {\n      var width = width || 640;\n      var height = height || 480;\n\n      var url ='https://source.unsplash.com';\n\n      if (typeof category !== 'undefined') {\n          url += '/category/' + category;\n      }\n\n      url += '/' + width + 'x' + height;\n\n      if (typeof keyword !== 'undefined') {\n          var keywordFormat = new RegExp('^([A-Za-z0-9].+,[A-Za-z0-9]+)$|^([A-Za-z0-9]+)$');\n          if (keywordFormat.test(keyword)) {\n            url += '?' + keyword;\n          }\n      }\n\n      return url;\n  };\n  /**\n   * food\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} keyword\n   * @method faker.image.unsplash.food\n   */\n  self.food = function (width, height, keyword) {\n    return faker.image.unsplash.imageUrl(width, height, 'food', keyword);\n  };\n  /**\n   * people\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} keyword\n   * @method faker.image.unsplash.people\n   */\n  self.people = function (width, height, keyword) {\n    return faker.image.unsplash.imageUrl(width, height, 'people', keyword);\n  };\n  /**\n   * nature\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} keyword\n   * @method faker.image.unsplash.nature\n   */\n  self.nature = function (width, height, keyword) {\n    return faker.image.unsplash.imageUrl(width, height, 'nature', keyword);\n  };\n  /**\n   * technology\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} keyword\n   * @method faker.image.unsplash.technology\n   */\n  self.technology = function (width, height, keyword) {\n    return faker.image.unsplash.imageUrl(width, height, 'technology', keyword);\n  };\n  /**\n   * objects\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} keyword\n   * @method faker.image.unsplash.objects\n   */\n  self.objects = function (width, height, keyword) {\n    return faker.image.unsplash.imageUrl(width, height, 'objects', keyword);\n  };\n  /**\n   * buildings\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} keyword\n   * @method faker.image.unsplash.buildings\n   */\n  self.buildings = function (width, height, keyword) {\n    return faker.image.unsplash.imageUrl(width, height, 'buildings', keyword);\n  };\n}\n\nmodule[\"exports\"] = Unsplash;\n","/**\n *\n * @namespace lorempicsum\n * @memberof faker.image\n */\nvar LoremPicsum = function (faker) {\n\n    var self = this;\n\n    /**\n     * image\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {boolean} grayscale\n     * @param {number} blur 1-10\n     * @method faker.image.lorempicsum.image\n     * @description search image from unsplash\n     */\n    self.image = function (width, height, grayscale, blur) {\n      return self.imageUrl(width, height, grayscale, blur);\n    };\n    /**\n     * imageGrayscaled\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {boolean} grayscale\n     * @method faker.image.lorempicsum.imageGrayscaled\n     * @description search grayscale image from unsplash\n     */\n    self.imageGrayscale = function (width, height, grayscale) {\n      return self.imageUrl(width, height, grayscale);\n    };\n    /**\n     * imageBlurred\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {number} blur 1-10\n     * @method faker.image.lorempicsum.imageBlurred\n     * @description search blurred image from unsplash\n     */\n    self.imageBlurred = function (width, height, blur) {\n      return self.imageUrl(width, height, undefined, blur);\n    };\n    /**\n     * imageRandomSeeded\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {boolean} grayscale\n     * @param {number} blur 1-10\n     * @param {string} seed\n     * @method faker.image.lorempicsum.imageRandomSeeded\n     * @description search same random image from unsplash, based on a seed\n     */\n    self.imageRandomSeeded = function (width, height, grayscale, blur, seed) {\n      return self.imageUrl(width, height, grayscale, blur, seed);\n    };\n    /**\n     * avatar\n     *\n     * @method faker.image.lorempicsum.avatar\n     */\n    self.avatar = function () {\n      return faker.internet.avatar();\n    };\n    /**\n     * imageUrl\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {boolean} grayscale\n     * @param {number} blur 1-10\n     * @param {string} seed\n     * @method faker.image.lorempicsum.imageUrl\n     */\n    self.imageUrl = function (width, height, grayscale, blur, seed) {\n        var width = width || 640;\n        var height = height || 480;\n  \n        var url = 'https://picsum.photos';\n          \n        if (seed) {\n          url += '/seed/' + seed;\n        }\n\n        url += '/' + width + '/' + height;\n        \n        if (grayscale && blur) {\n          return url + '?grayscale' + '&blur=' + blur;\n        }\n\n        if (grayscale) {\n          return url + '?grayscale';\n        }\n\n        if (blur) {\n          return url + '?blur=' + blur;\n        }\n    \n        return url;\n    };\n  }\n  \n  module[\"exports\"] = LoremPicsum;\n  ","/**\n *\n * @namespace faker.image\n * @property {object} lorempixel - faker.image.lorempixel\n * @property {object} unsplash - faker.image.unsplash\n * @property {object} unsplash - faker.image.lorempicsum\n * @default Default provider is unsplash image provider\n */\nvar Image = function (faker) {\n\n  var self = this;\n  var Lorempixel = require('./image_providers/lorempixel');\n  var Unsplash = require('./image_providers/unsplash');\n  var LoremPicsum = require('./image_providers/lorempicsum');\n\n  /**\n   * image\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.image\n   */\n  self.image = function (width, height, randomize) {\n    var categories = [\"abstract\", \"animals\", \"business\", \"cats\", \"city\", \"food\", \"nightlife\", \"fashion\", \"people\", \"nature\", \"sports\", \"technics\", \"transport\"];\n    return self[faker.random.arrayElement(categories)](width, height, randomize);\n  };\n  /**\n   * avatar\n   *\n   * @method faker.image.avatar\n   */\n  self.avatar = function () {\n    return faker.internet.avatar();\n  };\n  /**\n   * imageUrl\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} category\n   * @param {boolean} randomize\n   * @method faker.image.imageUrl\n   */\n  self.imageUrl = function (width, height, category, randomize, https) {\n      var width = width || 640;\n      var height = height || 480;\n      var protocol = 'http://';\n      if (typeof https !== 'undefined' && https === true) {\n        protocol = 'https://';\n      }\n      var url = protocol + 'placeimg.com/' + width + '/' + height;\n      if (typeof category !== 'undefined') {\n        url += '/' + category;\n      }\n\n      if (randomize) {\n        url += '?' + faker.random.number()\n      }\n\n      return url;\n  };\n  /**\n   * abstract\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.abstract\n   */\n  self.abstract = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'abstract', randomize);\n  };\n  /**\n   * animals\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.animals\n   */\n  self.animals = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'animals', randomize);\n  };\n  /**\n   * business\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.business\n   */\n  self.business = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'business', randomize);\n  };\n  /**\n   * cats\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.cats\n   */\n  self.cats = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'cats', randomize);\n  };\n  /**\n   * city\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.city\n   */\n  self.city = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'city', randomize);\n  };\n  /**\n   * food\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.food\n   */\n  self.food = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'food', randomize);\n  };\n  /**\n   * nightlife\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.nightlife\n   */\n  self.nightlife = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'nightlife', randomize);\n  };\n  /**\n   * fashion\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.fashion\n   */\n  self.fashion = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'fashion', randomize);\n  };\n  /**\n   * people\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.people\n   */\n  self.people = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'people', randomize);\n  };\n  /**\n   * nature\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.nature\n   */\n  self.nature = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'nature', randomize);\n  };\n  /**\n   * sports\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.sports\n   */\n  self.sports = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'sports', randomize);\n  };\n  /**\n   * technics\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.technics\n   */\n  self.technics = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'technics', randomize);\n  };\n  /**\n   * transport\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {boolean} randomize\n   * @method faker.image.transport\n   */\n  self.transport = function (width, height, randomize) {\n    return faker.image.imageUrl(width, height, 'transport', randomize);\n  };\n  /**\n   * dataUri\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {string} color\n   * @method faker.image.dataUri\n   */\n  self.dataUri = function (width, height, color) {\n    color = color || 'grey';\n    var svgString = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" baseProfile=\"full\" width=\"' + width + '\" height=\"' + height + '\"><rect width=\"100%\" height=\"100%\" fill=\"' + color + '\"/><text x=\"' + width / 2 + '\" y=\"' + height / 2 + '\" font-size=\"20\" alignment-baseline=\"middle\" text-anchor=\"middle\" fill=\"white\">' + width + 'x' + height + '</text></svg>';\n    var rawPrefix = 'data:image/svg+xml;charset=UTF-8,';\n    return rawPrefix + encodeURIComponent(svgString);\n  };\n\n  self.lorempixel = new Lorempixel(faker);\n  self.unsplash = new Unsplash(faker);\n  self.lorempicsum = new LoremPicsum(faker);\n\n  // Object.assign(self, self.unsplash);\n  // How to set default as unsplash? should be image.default?\n}\n\n\nmodule[\"exports\"] = Image;\n","\n/**\n *\n * @namespace faker.lorem\n */\nvar Lorem = function (faker) {\n  var self = this;\n  var Helpers = faker.helpers;\n\n  /**\n   * generates a word of a specified length\n   *\n   * @method faker.lorem.word\n   * @param {number} length length of the word that should be returned. Defaults to a random length\n   */\n  self.word = function (length) {\n    var hasRightLength = function(word) { return word.length === length; };\n    var properLengthWords;\n    if(typeof length === 'undefined') {\n      properLengthWords = faker.definitions.lorem.words;\n    } else {\n      properLengthWords = faker.definitions.lorem.words.filter(hasRightLength);\n    }\n    return faker.random.arrayElement(properLengthWords);\n  };\n\n  /**\n   * generates a space separated list of words\n   *\n   * @method faker.lorem.words\n   * @param {number} num number of words, defaults to 3\n   */\n  self.words = function (num) {\n      if (typeof num == 'undefined') { num = 3; }\n      var words = [];\n      for (var i = 0; i < num; i++) {\n        words.push(faker.lorem.word());\n      }\n      return words.join(' ');\n  };\n\n  /**\n   * sentence\n   *\n   * @method faker.lorem.sentence\n   * @param {number} wordCount defaults to a random number between 3 and 10\n   * @param {number} range\n   */\n  self.sentence = function (wordCount, range) {\n      if (typeof wordCount == 'undefined') { wordCount = faker.random.number({ min: 3, max: 10 }); }\n      // if (typeof range == 'undefined') { range = 7; }\n\n      // strange issue with the node_min_test failing for captialize, please fix and add faker.lorem.back\n      //return  faker.lorem.words(wordCount + Helpers.randomNumber(range)).join(' ').capitalize();\n\n      var sentence = faker.lorem.words(wordCount);\n      return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';\n  };\n\n  /**\n   * slug\n   *\n   * @method faker.lorem.slug\n   * @param {number} wordCount number of words, defaults to 3\n   */\n  self.slug = function (wordCount) {\n      var words = faker.lorem.words(wordCount);\n      return Helpers.slugify(words);\n  };\n\n  /**\n   * sentences\n   *\n   * @method faker.lorem.sentences\n   * @param {number} sentenceCount defautls to a random number between 2 and 6\n   * @param {string} separator defaults to `' '`\n   */\n  self.sentences = function (sentenceCount, separator) {\n      if (typeof sentenceCount === 'undefined') { sentenceCount = faker.random.number({ min: 2, max: 6 });}\n      if (typeof separator == 'undefined') { separator = \" \"; }\n      var sentences = [];\n      for (sentenceCount; sentenceCount > 0; sentenceCount--) {\n        sentences.push(faker.lorem.sentence());\n      }\n      return sentences.join(separator);\n  };\n\n  /**\n   * paragraph\n   *\n   * @method faker.lorem.paragraph\n   * @param {number} sentenceCount defaults to 3\n   */\n  self.paragraph = function (sentenceCount) {\n      if (typeof sentenceCount == 'undefined') { sentenceCount = 3; }\n      return faker.lorem.sentences(sentenceCount + faker.random.number(3));\n  };\n\n  /**\n   * paragraphs\n   *\n   * @method faker.lorem.paragraphs\n   * @param {number} paragraphCount defaults to 3\n   * @param {string} separator defaults to `'\\n \\r'`\n   */\n  self.paragraphs = function (paragraphCount, separator) {\n    if (typeof separator === \"undefined\") {\n      separator = \"\\n \\r\";\n    }\n    if (typeof paragraphCount == 'undefined') { paragraphCount = 3; }\n    var paragraphs = [];\n    for (paragraphCount; paragraphCount > 0; paragraphCount--) {\n        paragraphs.push(faker.lorem.paragraph());\n    }\n    return paragraphs.join(separator);\n  }\n\n  /**\n   * returns random text based on a random lorem method\n   *\n   * @method faker.lorem.text\n   * @param {number} times\n   */\n  self.text = function loremText (times) {\n    var loremMethods = ['lorem.word', 'lorem.words', 'lorem.sentence', 'lorem.sentences', 'lorem.paragraph', 'lorem.paragraphs', 'lorem.lines'];\n    var randomLoremMethod = faker.random.arrayElement(loremMethods);\n    return faker.fake('{{' + randomLoremMethod + '}}');\n  };\n\n  /**\n   * returns lines of lorem separated by `'\\n'`\n   *\n   * @method faker.lorem.lines\n   * @param {number} lineCount defaults to a random number between 1 and 5\n   */\n  self.lines = function lines (lineCount) {\n    if (typeof lineCount === 'undefined') { lineCount = faker.random.number({ min: 1, max: 5 });}\n    return faker.lorem.sentences(lineCount, '\\n')\n  };\n\n  return self;\n};\n\n\nmodule[\"exports\"] = Lorem;\n","/**\n *\n * @namespace faker.hacker\n */\nvar Hacker = function (faker) {\n  var self = this;\n  \n  /**\n   * abbreviation\n   *\n   * @method faker.hacker.abbreviation\n   */\n  self.abbreviation = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.abbreviation);\n  };\n\n  /**\n   * adjective\n   *\n   * @method faker.hacker.adjective\n   */\n  self.adjective = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.adjective);\n  };\n\n  /**\n   * noun\n   *\n   * @method faker.hacker.noun\n   */\n  self.noun = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.noun);\n  };\n\n  /**\n   * verb\n   *\n   * @method faker.hacker.verb\n   */\n  self.verb = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.verb);\n  };\n\n  /**\n   * ingverb\n   *\n   * @method faker.hacker.ingverb\n   */\n  self.ingverb = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.ingverb);\n  };\n\n  /**\n   * phrase\n   *\n   * @method faker.hacker.phrase\n   */\n  self.phrase = function () {\n\n    var data = {\n      abbreviation: self.abbreviation,\n      adjective: self.adjective,\n      ingverb: self.ingverb,\n      noun: self.noun,\n      verb: self.verb\n    };\n\n    var phrase = faker.random.arrayElement(faker.definitions.hacker.phrase);\n    return faker.helpers.mustache(phrase, data);\n  };\n  \n  return self;\n};\n\nmodule['exports'] = Hacker;","/*\n\nCopyright (c) 2012-2014 Jeffrey Mealo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\nto permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n------------------------------------------------------------------------------------------------------------------------\n\nBased loosely on Luka Pusic's PHP Script: http://360percents.com/posts/php-random-user-agent-generator/\n\nThe license for that script is as follows:\n\n\"THE BEER-WARE LICENSE\" (Revision 42):\n\n<pusic93@gmail.com> wrote this file. As long as you retain this notice you can do whatever you want with this stuff.\nIf we meet some day, and you think this stuff is worth it, you can buy me a beer in return. Luka Pusic\n\n*/\n\nexports.generate = function generate(faker) {\n\n    function rnd(a, b) {\n        //calling rnd() with no arguments is identical to rnd(0, 100)\n        a = a || 0;\n        b = b || 100;\n\n        if (typeof b === 'number' && typeof a === 'number') {\n\n            // 9/2018 - Added faker random to ensure mersenne and seed\n            return faker.random.number({ min: a, max: b});\n\n        }\n\n        if (Object.prototype.toString.call(a) === \"[object Array]\") {\n            //returns a random element from array (a), even weighting\n            return faker.random.arrayElement(a);\n        }\n\n        if (a && typeof a === 'object') {\n            //returns a random key from the passed object; keys are weighted by the decimal probability in their value\n            return (function (obj) {\n                var rand = rnd(0, 100) / 100, min = 0, max = 0, key, return_val;\n\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        max = obj[key] + min;\n                        return_val = key;\n                        if (rand >= min && rand <= max) {\n                            break;\n                        }\n                        min = min + obj[key];\n                    }\n                }\n\n                return return_val;\n            }(a));\n        }\n\n        throw new TypeError('Invalid arguments passed to rnd. (' + (b ? a + ', ' + b : a) + ')');\n    }\n\n    function randomLang() {\n        return rnd(['AB', 'AF', 'AN', 'AR', 'AS', 'AZ', 'BE', 'BG', 'BN', 'BO', 'BR', 'BS', 'CA', 'CE', 'CO', 'CS',\n                    'CU', 'CY', 'DA', 'DE', 'EL', 'EN', 'EO', 'ES', 'ET', 'EU', 'FA', 'FI', 'FJ', 'FO', 'FR', 'FY',\n                    'GA', 'GD', 'GL', 'GV', 'HE', 'HI', 'HR', 'HT', 'HU', 'HY', 'ID', 'IS', 'IT', 'JA', 'JV', 'KA',\n                    'KG', 'KO', 'KU', 'KW', 'KY', 'LA', 'LB', 'LI', 'LN', 'LT', 'LV', 'MG', 'MK', 'MN', 'MO', 'MS',\n                    'MT', 'MY', 'NB', 'NE', 'NL', 'NN', 'NO', 'OC', 'PL', 'PT', 'RM', 'RO', 'RU', 'SC', 'SE', 'SK',\n                    'SL', 'SO', 'SQ', 'SR', 'SV', 'SW', 'TK', 'TR', 'TY', 'UK', 'UR', 'UZ', 'VI', 'VO', 'YI', 'ZH']);\n    }\n\n    function randomBrowserAndOS() {\n        var browser = rnd({\n            chrome:    .45132810566,\n            iexplorer: .27477061836,\n            firefox:   .19384170608,\n            safari:    .06186781118,\n            opera:     .01574236955\n        }),\n        os = {\n            chrome:  {win: .89,  mac: .09 , lin: .02},\n            firefox: {win: .83,  mac: .16,  lin: .01},\n            opera:   {win: .91,  mac: .03 , lin: .06},\n            safari:  {win: .04 , mac: .96  },\n            iexplorer: ['win']\n        };\n\n        return [browser, rnd(os[browser])];\n    }\n\n    function randomProc(arch) {\n        var procs = {\n            lin:['i686', 'x86_64'],\n            mac: {'Intel' : .48, 'PPC': .01, 'U; Intel':.48, 'U; PPC' :.01},\n            win:['', 'WOW64', 'Win64; x64']\n        };\n        return rnd(procs[arch]);\n    }\n\n    function randomRevision(dots) {\n        var return_val = '';\n        //generate a random revision\n        //dots = 2 returns .x.y where x & y are between 0 and 9\n        for (var x = 0; x < dots; x++) {\n            return_val += '.' + rnd(0, 9);\n        }\n        return return_val;\n    }\n\n    var version_string = {\n        net: function () {\n            return [rnd(1, 4), rnd(0, 9), rnd(10000, 99999), rnd(0, 9)].join('.');\n        },\n        nt: function () {\n            return rnd(5, 6) + '.' + rnd(0, 3);\n        },\n        ie: function () {\n            return rnd(7, 11);\n        },\n        trident: function () {\n            return rnd(3, 7) + '.' + rnd(0, 1);\n        },\n        osx: function (delim) {\n            return [10, rnd(5, 10), rnd(0, 9)].join(delim || '.');\n        },\n        chrome: function () {\n            return [rnd(13, 39), 0, rnd(800, 899), 0].join('.');\n        },\n        presto: function () {\n            return '2.9.' + rnd(160, 190);\n        },\n        presto2: function () {\n            return rnd(10, 12) + '.00';\n        },\n        safari: function () {\n            return rnd(531, 538) + '.' + rnd(0, 2) + '.' + rnd(0,2);\n        }\n    };\n\n    var browser = {\n        firefox: function firefox(arch) {\n            //https://developer.mozilla.org/en-US/docs/Gecko_user_agent_string_reference\n            var firefox_ver = rnd(5, 15) + randomRevision(2),\n                gecko_ver = 'Gecko/20100101 Firefox/' + firefox_ver,\n                proc = randomProc(arch),\n                os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + ((proc) ? '; ' + proc : '')\n                : (arch === 'mac') ? '(Macintosh; ' + proc + ' Mac OS X ' + version_string.osx()\n                : '(X11; Linux ' + proc;\n\n            return 'Mozilla/5.0 ' + os_ver + '; rv:' + firefox_ver.slice(0, -2) + ') ' + gecko_ver;\n        },\n\n        iexplorer: function iexplorer() {\n            var ver = version_string.ie();\n\n            if (ver >= 11) {\n                //http://msdn.microsoft.com/en-us/library/ie/hh869301(v=vs.85).aspx\n                return 'Mozilla/5.0 (Windows NT 6.' + rnd(1,3) + '; Trident/7.0; ' + rnd(['Touch; ', '']) + 'rv:11.0) like Gecko';\n            }\n\n            //http://msdn.microsoft.com/en-us/library/ie/ms537503(v=vs.85).aspx\n            return 'Mozilla/5.0 (compatible; MSIE ' + ver + '.0; Windows NT ' + version_string.nt() + '; Trident/' +\n                version_string.trident() + ((rnd(0, 1) === 1) ? '; .NET CLR ' + version_string.net() : '') + ')';\n        },\n\n        opera: function opera(arch) {\n            //http://www.opera.com/docs/history/\n            var presto_ver = ' Presto/' + version_string.presto() + ' Version/' + version_string.presto2() + ')',\n                os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + '; U; ' + randomLang() + presto_ver\n                : (arch === 'lin') ? '(X11; Linux ' + randomProc(arch) + '; U; ' + randomLang() + presto_ver\n                : '(Macintosh; Intel Mac OS X ' + version_string.osx() + ' U; ' + randomLang() + ' Presto/' +\n                version_string.presto() + ' Version/' + version_string.presto2() + ')';\n\n            return 'Opera/' + rnd(9, 14) + '.' + rnd(0, 99) + ' ' + os_ver;\n        },\n\n        safari: function safari(arch) {\n            var safari = version_string.safari(),\n                ver = rnd(4, 7) + '.' + rnd(0,1) + '.' + rnd(0,10),\n                os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X '+ version_string.osx('_') + ' rv:' + rnd(2, 6) + '.0; '+ randomLang() + ') '\n                : '(Windows; U; Windows NT ' + version_string.nt() + ')';\n\n            return 'Mozilla/5.0 ' + os_ver + 'AppleWebKit/' + safari + ' (KHTML, like Gecko) Version/' + ver + ' Safari/' + safari;\n        },\n\n        chrome: function chrome(arch) {\n            var safari = version_string.safari(),\n                os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X ' + version_string.osx('_') + ') '\n                : (arch === 'win') ? '(Windows; U; Windows NT ' + version_string.nt() + ')'\n                : '(X11; Linux ' + randomProc(arch);\n\n            return 'Mozilla/5.0 ' + os_ver + ' AppleWebKit/' + safari + ' (KHTML, like Gecko) Chrome/' + version_string.chrome() + ' Safari/' + safari;\n        }\n    };\n\n    var random = randomBrowserAndOS();\n    return browser[random[0]](random[1]);\n};\n","var random_ua = require('../vendor/user-agent');\n\n/**\n *\n * @namespace faker.internet\n */\nvar Internet = function (faker) {\n  var self = this;\n  /**\n   * avatar\n   *\n   * @method faker.internet.avatar\n   */\n  self.avatar = function () {\n      return faker.random.arrayElement(faker.definitions.internet.avatar_uri);\n  };\n\n  self.avatar.schema = {\n    \"description\": \"Generates a URL for an avatar.\",\n    \"sampleResults\": [\"https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg\"]\n  };\n\n  /**\n   * email\n   *\n   * @method faker.internet.email\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {string} provider\n   */\n  self.email = function (firstName, lastName, provider) {\n      provider = provider || faker.random.arrayElement(faker.definitions.internet.free_email);\n      return  faker.helpers.slugify(faker.internet.userName(firstName, lastName)) + \"@\" + provider;\n  };\n\n  self.email.schema = {\n    \"description\": \"Generates a valid email address based on optional input criteria\",\n    \"sampleResults\": [\"foo.bar@gmail.com\"],\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The first name of the user\"\n      },\n      \"lastName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The last name of the user\"\n      },\n      \"provider\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The domain of the user\"\n      }\n    }\n  };\n  /**\n   * exampleEmail\n   *\n   * @method faker.internet.exampleEmail\n   * @param {string} firstName\n   * @param {string} lastName\n   */\n  self.exampleEmail = function (firstName, lastName) {\n      var provider = faker.random.arrayElement(faker.definitions.internet.example_email);\n      return self.email(firstName, lastName, provider);\n  };\n\n  /**\n   * userName\n   *\n   * @method faker.internet.userName\n   * @param {string} firstName\n   * @param {string} lastName\n   */\n  self.userName = function (firstName, lastName) {\n      var result;\n      firstName = firstName || faker.name.firstName();\n      lastName = lastName || faker.name.lastName();\n      switch (faker.random.number(2)) {\n      case 0:\n          result = firstName + faker.random.number(99);\n          break;\n      case 1:\n          result = firstName + faker.random.arrayElement([\".\", \"_\"]) + lastName;\n          break;\n      case 2:\n          result = firstName + faker.random.arrayElement([\".\", \"_\"]) + lastName + faker.random.number(99);\n          break;\n      }\n      result = result.toString().replace(/'/g, \"\");\n      result = result.replace(/ /g, \"\");\n      return result;\n  };\n\n  self.userName.schema = {\n    \"description\": \"Generates a username based on one of several patterns. The pattern is chosen randomly.\",\n    \"sampleResults\": [\n      \"Kirstin39\",\n      \"Kirstin.Smith\",\n      \"Kirstin.Smith39\",\n      \"KirstinSmith\",\n      \"KirstinSmith39\",\n    ],\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The first name of the user\"\n      },\n      \"lastName\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"The last name of the user\"\n      }\n    }\n  };\n\n  /**\n   * protocol\n   *\n   * @method faker.internet.protocol\n   */\n  self.protocol = function () {\n      var protocols = ['http','https'];\n      return faker.random.arrayElement(protocols);\n  };\n\n  self.protocol.schema = {\n    \"description\": \"Randomly generates http or https\",\n    \"sampleResults\": [\"https\", \"http\"]\n  };\n\n  /**\n   * method\n   *\n   * @method faker.internet.httpMethod\n   */\n  self.httpMethod = function () {\n      var httpMethods = ['GET','POST', 'PUT', 'DELETE', 'PATCH'];\n      return faker.random.arrayElement(httpMethods);\n  };\n\n  self.httpMethod.schema = {\n    \"description\": \"Randomly generates HTTP Methods (GET, POST, PUT, DELETE, PATCH)\",\n    \"sampleResults\": [\"GET\",\"POST\", \"PUT\", \"DELETE\", \"PATCH\"]\n  };\n\n  /**\n   * url\n   *\n   * @method faker.internet.url\n   */\n  self.url = function () {\n      return faker.internet.protocol() + '://' + faker.internet.domainName();\n  };\n\n  self.url.schema = {\n    \"description\": \"Generates a random URL. The URL could be secure or insecure.\",\n    \"sampleResults\": [\n      \"http://rashawn.name\",\n      \"https://rashawn.name\"\n    ]\n  };\n\n  /**\n   * domainName\n   *\n   * @method faker.internet.domainName\n   */\n  self.domainName = function () {\n      return faker.internet.domainWord() + \".\" + faker.internet.domainSuffix();\n  };\n\n  self.domainName.schema = {\n    \"description\": \"Generates a random domain name.\",\n    \"sampleResults\": [\"marvin.org\"]\n  };\n\n  /**\n   * domainSuffix\n   *\n   * @method faker.internet.domainSuffix\n   */\n  self.domainSuffix = function () {\n      return faker.random.arrayElement(faker.definitions.internet.domain_suffix);\n  };\n\n  self.domainSuffix.schema = {\n    \"description\": \"Generates a random domain suffix.\",\n    \"sampleResults\": [\"net\"]\n  };\n\n  /**\n   * domainWord\n   *\n   * @method faker.internet.domainWord\n   */\n  self.domainWord = function () {\n      return faker.name.firstName().replace(/([\\\\~#&*{}/:<>?|\\\"'])/ig, '').toLowerCase();\n  };\n\n  self.domainWord.schema = {\n    \"description\": \"Generates a random domain word.\",\n    \"sampleResults\": [\"alyce\"]\n  };\n\n  /**\n   * ip\n   *\n   * @method faker.internet.ip\n   */\n  self.ip = function () {\n      var randNum = function () {\n          return (faker.random.number(255)).toFixed(0);\n      };\n\n      var result = [];\n      for (var i = 0; i < 4; i++) {\n          result[i] = randNum();\n      }\n\n      return result.join(\".\");\n  };\n\n  self.ip.schema = {\n    \"description\": \"Generates a random IP.\",\n    \"sampleResults\": [\"97.238.241.11\"]\n  };\n\n  /**\n   * ipv6\n   *\n   * @method faker.internet.ipv6\n   */\n  self.ipv6 = function () {\n      var randHash = function () {\n          var result = \"\";\n          for (var i = 0; i < 4; i++) {\n            result += (faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]));\n          }\n          return result\n      };\n\n      var result = [];\n      for (var i = 0; i < 8; i++) {\n        result[i] = randHash();\n      }\n      return result.join(\":\");\n  };\n\n  self.ipv6.schema = {\n    \"description\": \"Generates a random IPv6 address.\",\n    \"sampleResults\": [\"2001:0db8:6276:b1a7:5213:22f1:25df:c8a0\"]\n  };\n\n  /**\n   * port\n   * \n   * @method faker.internet.port\n   */\n  self.port = function() {\n    return faker.random.number({ min: 0, max: 65535 });\n  };\n\n  self.port.schema = {\n    \"description\": \"Generates a random port number.\",\n    \"sampleResults\": [\"4422\"]\n  };\n\n  /**\n   * userAgent\n   *\n   * @method faker.internet.userAgent\n   */\n  self.userAgent = function () {\n    return random_ua.generate(faker);\n  };\n\n  self.userAgent.schema = {\n    \"description\": \"Generates a random user agent.\",\n    \"sampleResults\": [\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_5 rv:6.0; SL) AppleWebKit/532.0.1 (KHTML, like Gecko) Version/7.1.6 Safari/532.0.1\"]\n  };\n\n  /**\n   * color\n   *\n   * @method faker.internet.color\n   * @param {number} baseRed255\n   * @param {number} baseGreen255\n   * @param {number} baseBlue255\n   */\n  self.color = function (baseRed255, baseGreen255, baseBlue255) {\n      baseRed255 = baseRed255 || 0;\n      baseGreen255 = baseGreen255 || 0;\n      baseBlue255 = baseBlue255 || 0;\n      // based on awesome response : http://stackoverflow.com/questions/43044/algorithm-to-randomly-generate-an-aesthetically-pleasing-color-palette\n      var red = Math.floor((faker.random.number(256) + baseRed255) / 2);\n      var green = Math.floor((faker.random.number(256) + baseGreen255) / 2);\n      var blue = Math.floor((faker.random.number(256) + baseBlue255) / 2);\n      var redStr = red.toString(16);\n      var greenStr = green.toString(16);\n      var blueStr = blue.toString(16);\n      return '#' +\n        (redStr.length === 1 ? '0' : '') + redStr +\n        (greenStr.length === 1 ? '0' : '') + greenStr +\n        (blueStr.length === 1 ? '0': '') + blueStr;\n\n  };\n\n  self.color.schema = {\n    \"description\": \"Generates a random hexadecimal color.\",\n    \"sampleResults\": [\"#06267f\"],\n    \"properties\": {\n      \"baseRed255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The red value. Valid values are 0 - 255.\"\n      },\n      \"baseGreen255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The green value. Valid values are 0 - 255.\"\n      },\n      \"baseBlue255\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The blue value. Valid values are 0 - 255.\"\n      }\n    }\n  };\n\n  /**\n   * mac\n   *\n   * @method faker.internet.mac\n   * @param {string} sep\n   */\n  self.mac = function(sep){\n      var i, \n        mac = \"\",\n        validSep = ':';\n\n      // if the client passed in a different separator than `:`, \n      // we will use it if it is in the list of acceptable separators (dash or no separator)\n      if (['-', ''].indexOf(sep) !== -1) {\n        validSep = sep;\n      } \n\n      for (i=0; i < 12; i++) {\n          mac+= faker.random.number(15).toString(16);\n          if (i%2==1 && i != 11) {\n              mac+=validSep;\n          }\n      }\n      return mac;\n  };\n\n  self.mac.schema = {\n    \"description\": \"Generates a random mac address.\",\n    \"sampleResults\": [\"78:06:cc:ae:b3:81\"]\n  };\n\n  /**\n   * password\n   *\n   * @method faker.internet.password\n   * @param {number} len\n   * @param {boolean} memorable\n   * @param {string} pattern\n   * @param {string} prefix\n   */\n   self.password = function (len, memorable, pattern, prefix) {\n     len = len || 15;\n     if (typeof memorable === \"undefined\") {\n       memorable = false;\n     }\n     /*\n      * password-generator ( function )\n      * Copyright(c) 2011-2013 Bermi Ferrer <bermi@bermilabs.com>\n      * MIT Licensed\n      */\n     var consonant, letter, vowel;\n     letter = /[a-zA-Z]$/;\n     vowel = /[aeiouAEIOU]$/;\n     consonant = /[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/;\n     var _password = function (length, memorable, pattern, prefix) {\n       var char, n;\n       if (length == null) {\n         length = 10;\n       }\n       if (memorable == null) {\n         memorable = true;\n       }\n       if (pattern == null) {\n         pattern = /\\w/;\n       }\n       if (prefix == null) {\n         prefix = '';\n       }\n       if (prefix.length >= length) {\n         return prefix;\n       }\n       if (memorable) {\n         if (prefix.match(consonant)) {\n           pattern = vowel;\n         } else {\n           pattern = consonant;\n         }\n       }\n       n = faker.random.number(94) + 33;\n       char = String.fromCharCode(n);\n       if (memorable) {\n         char = char.toLowerCase();\n       }\n       if (!char.match(pattern)) {\n         return _password(length, memorable, pattern, prefix);\n       }\n       return _password(length, memorable, pattern, \"\" + prefix + char);\n     };\n     return _password(len, memorable, pattern, prefix);\n   }\n\n  self.password.schema = {\n    \"description\": \"Generates a random password.\",\n    \"sampleResults\": [\n      \"AM7zl6Mg\",\n      \"susejofe\"\n    ],\n    \"properties\": {\n      \"length\": {\n        \"type\": \"number\",\n        \"required\": false,\n        \"description\": \"The number of characters in the password.\"\n      },\n      \"memorable\": {\n        \"type\": \"boolean\",\n        \"required\": false,\n        \"description\": \"Whether a password should be easy to remember.\"\n      },\n      \"pattern\": {\n        \"type\": \"regex\",\n        \"required\": false,\n        \"description\": \"A regex to match each character of the password against. This parameter will be negated if the memorable setting is turned on.\"\n      },\n      \"prefix\": {\n        \"type\": \"string\",\n        \"required\": false,\n        \"description\": \"A value to prepend to the generated password. The prefix counts towards the length of the password.\"\n      }\n    }\n  };\n\n};\n\n\nmodule[\"exports\"] = Internet;\n","/**\n *\n * @namespace faker.database\n */\nvar Database = function (faker) {\n  var self = this;\n  /**\n   * column\n   *\n   * @method faker.database.column\n   */\n  self.column = function () {\n      return faker.random.arrayElement(faker.definitions.database.column);\n  };\n\n  self.column.schema = {\n    \"description\": \"Generates a column name.\",\n    \"sampleResults\": [\"id\", \"title\", \"createdAt\"]\n  };\n\n  /**\n   * type\n   *\n   * @method faker.database.type\n   */\n  self.type = function () {\n      return faker.random.arrayElement(faker.definitions.database.type);\n  };\n\n  self.type.schema = {\n    \"description\": \"Generates a column type.\",\n    \"sampleResults\": [\"byte\", \"int\", \"varchar\", \"timestamp\"]\n  };\n\n  /**\n   * collation\n   *\n   * @method faker.database.collation\n   */\n  self.collation = function () {\n      return faker.random.arrayElement(faker.definitions.database.collation);\n  };\n\n  self.collation.schema = {\n    \"description\": \"Generates a collation.\",\n    \"sampleResults\": [\"utf8_unicode_ci\", \"utf8_bin\"]\n  };\n\n  /**\n   * engine\n   *\n   * @method faker.database.engine\n   */\n  self.engine = function () {\n      return faker.random.arrayElement(faker.definitions.database.engine);\n  };\n\n  self.engine.schema = {\n    \"description\": \"Generates a storage engine.\",\n    \"sampleResults\": [\"MyISAM\", \"InnoDB\"]\n  };\n};\n\nmodule[\"exports\"] = Database;\n","/**\n *\n * @namespace faker.phone\n */\nvar Phone = function (faker) {\n  var self = this;\n\n  /**\n   * phoneNumber\n   *\n   * @method faker.phone.phoneNumber\n   * @param {string} format\n   * @memberOf faker.phone\n   */\n  self.phoneNumber = function (format) {\n      format = format || faker.phone.phoneFormats();\n      return faker.helpers.replaceSymbolWithNumber(format);\n  };\n\n  // FIXME: this is strange passing in an array index.\n  /**\n   * phoneNumberFormat\n   *\n   * @method faker.phone.phoneFormatsArrayIndex\n   * @param phoneFormatsArrayIndex\n   * @memberOf faker.phone\n   */\n  self.phoneNumberFormat = function (phoneFormatsArrayIndex) {\n      phoneFormatsArrayIndex = phoneFormatsArrayIndex || 0;\n      return faker.helpers.replaceSymbolWithNumber(faker.definitions.phone_number.formats[phoneFormatsArrayIndex]);\n  };\n\n  /**\n   * phoneFormats\n   *\n   * @method faker.phone.phoneFormats\n   */\n  self.phoneFormats = function () {\n    return faker.random.arrayElement(faker.definitions.phone_number.formats);\n  };\n  \n  return self;\n\n};\n\nmodule['exports'] = Phone;\n","/**\n *\n * @namespace faker.date\n */\nvar _Date = function (faker) {\n  var self = this;\n  /**\n   * past\n   *\n   * @method faker.date.past\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.past = function (years, refDate) {\n      var date = new Date();\n      if (typeof refDate !== \"undefined\") {\n          date = new Date(Date.parse(refDate));\n      }\n\n      var range = {\n        min: 1000,\n        max: (years || 1) * 365 * 24 * 3600 * 1000\n      };\n\n      var past = date.getTime();\n      past -= faker.random.number(range); // some time from now to N years ago, in milliseconds\n      date.setTime(past);\n\n      return date;\n  };\n\n  /**\n   * future\n   *\n   * @method faker.date.future\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.future = function (years, refDate) {\n      var date = new Date();\n      if (typeof refDate !== \"undefined\") {\n          date = new Date(Date.parse(refDate));\n      }\n\n      var range = {\n        min: 1000,\n        max: (years || 1) * 365 * 24 * 3600 * 1000\n      };\n\n      var future = date.getTime();\n      future += faker.random.number(range); // some time from now to N years later, in milliseconds\n      date.setTime(future);\n\n      return date;\n  };\n\n  /**\n   * between\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.between = function (from, to) {\n      var fromMilli = Date.parse(from);\n      var dateOffset = faker.random.number(Date.parse(to) - fromMilli);\n\n      var newDate = new Date(fromMilli + dateOffset);\n\n      return newDate;\n  };\n\n    /**\n   * betweens\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.betweens = function (from, to, num) {\n    if (typeof num == 'undefined') { num = 3; }\n    var newDates = [];\n    var fromMilli = Date.parse(from);\n    var dateOffset = (Date.parse(to) - fromMilli) / ( num + 1 );\n    var lastDate = from\n    for (var i = 0; i < num; i++) {\n        fromMilli = Date.parse(lastDate);\n        lastDate = new Date(fromMilli + dateOffset)\n        newDates.push(lastDate)\n    }\n    return newDates;\n  };\n\n\n  /**\n   * recent\n   *\n   * @method faker.date.recent\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.recent = function (days, refDate) {\n      var date = new Date();\n      if (typeof refDate !== \"undefined\") {\n          date = new Date(Date.parse(refDate));\n      }\n\n      var range = {\n        min: 1000,\n        max: (days || 1) * 24 * 3600 * 1000\n      };\n\n      var future = date.getTime();\n      future -= faker.random.number(range); // some time from now to N days ago, in milliseconds\n      date.setTime(future);\n\n      return date;\n  };\n\n  /**\n   * soon\n   *\n   * @method faker.date.soon\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.soon = function (days, refDate) {\n      var date = new Date();\n      if (typeof refDate !== \"undefined\") {\n          date = new Date(Date.parse(refDate));\n      }\n\n      var range = {\n        min: 1000,\n        max: (days || 1) * 24 * 3600 * 1000\n      };\n\n      var future = date.getTime();\n      future += faker.random.number(range); // some time from now to N days later, in milliseconds\n      date.setTime(future);\n\n      return date;\n  };\n\n  /**\n   * month\n   *\n   * @method faker.date.month\n   * @param {object} options\n   */\n  self.month = function (options) {\n      options = options || {};\n\n      var type = 'wide';\n      if (options.abbr) {\n          type = 'abbr';\n      }\n      if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {\n          type += '_context';\n      }\n\n      var source = faker.definitions.date.month[type];\n\n      return faker.random.arrayElement(source);\n  };\n\n  /**\n   * weekday\n   *\n   * @param {object} options\n   * @method faker.date.weekday\n   */\n  self.weekday = function (options) {\n      options = options || {};\n\n      var type = 'wide';\n      if (options.abbr) {\n          type = 'abbr';\n      }\n      if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {\n          type += '_context';\n      }\n\n      var source = faker.definitions.date.weekday[type];\n\n      return faker.random.arrayElement(source);\n  };\n\n  return self;\n\n};\n\nmodule['exports'] = _Date;\n","/**\n *\n * @namespace faker.time\n */\nvar _Time = function(faker) {\n  var self = this;\n\n  /**\n   * recent\n   *\n   * @method faker.time.recent\n   * @param {string} outputType - 'abbr' || 'wide' || 'unix' (default choice)\n   */\n  self.recent = function(outputType) {\n    if (typeof outputType === \"undefined\") {\n        outputType = 'unix';\n    }\n\n    var date = new Date();\n    switch (outputType) {\n      case \"abbr\":\n        date = date.toLocaleTimeString();\n        break;\n      case \"wide\":\n        date = date.toTimeString();\n        break;\n      case \"unix\":\n        date = date.getTime();\n        break;\n    }\n    return date;\n  };\n\n  return self;\n};\n\nmodule[\"exports\"] = _Time;\n","/**\n *\n * @namespace faker.commerce\n */\nvar Commerce = function (faker) {\n  var self = this;\n\n  /**\n   * color\n   *\n   * @method faker.commerce.color\n   */\n  self.color = function() {\n      return faker.random.arrayElement(faker.definitions.commerce.color);\n  };\n\n  /**\n   * department\n   *\n   * @method faker.commerce.department\n   */\n  self.department = function() {\n      return faker.random.arrayElement(faker.definitions.commerce.department);\n  };\n\n  /**\n   * productName\n   *\n   * @method faker.commerce.productName\n   */\n  self.productName = function() {\n      return faker.commerce.productAdjective() + \" \" +\n              faker.commerce.productMaterial() + \" \" +\n              faker.commerce.product();\n  };\n\n  /**\n   * price\n   *\n   * @method faker.commerce.price\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n  self.price = function(min, max, dec, symbol) {\n      min = min || 1;\n      max = max || 1000;\n      dec = dec === undefined ? 2 : dec;\n      symbol = symbol || '';\n\n      if (min < 0 || max < 0) {\n          return symbol + 0.00;\n      }\n\n      var randValue = faker.random.number({ max: max, min: min });\n\n      return symbol + (Math.round(randValue * Math.pow(10, dec)) / Math.pow(10, dec)).toFixed(dec);\n  };\n\n  /*\n  self.categories = function(num) {\n      var categories = [];\n\n      do {\n          var category = faker.random.arrayElement(faker.definitions.commerce.department);\n          if(categories.indexOf(category) === -1) {\n              categories.push(category);\n          }\n      } while(categories.length < num);\n\n      return categories;\n  };\n\n  */\n  /*\n  self.mergeCategories = function(categories) {\n      var separator = faker.definitions.separator || \" &\";\n      // TODO: find undefined here\n      categories = categories || faker.definitions.commerce.categories;\n      var commaSeparated = categories.slice(0, -1).join(', ');\n\n      return [commaSeparated, categories[categories.length - 1]].join(separator + \" \");\n  };\n  */\n\n  /**\n   * productAdjective\n   *\n   * @method faker.commerce.productAdjective\n   */\n  self.productAdjective = function() {\n      return faker.random.arrayElement(faker.definitions.commerce.product_name.adjective);\n  };\n\n  /**\n   * productMaterial\n   *\n   * @method faker.commerce.productMaterial\n   */\n  self.productMaterial = function() {\n      return faker.random.arrayElement(faker.definitions.commerce.product_name.material);\n  };\n\n  /**\n   * product\n   *\n   * @method faker.commerce.product\n   */\n  self.product = function() {\n      return faker.random.arrayElement(faker.definitions.commerce.product_name.product);\n  };\n\n  /**\n   * productDescription\n   *\n   * @method faker.commerce.productDescription\n   */\n  self.productDescription = function() {\n      return faker.random.arrayElement(faker.definitions.commerce.product_description);\n  };\n\n  return self;\n};\n\nmodule['exports'] = Commerce;\n","// generates fake data for many computer systems properties\n\n/**\n *\n * @namespace faker.system\n */\nfunction System (faker) {\n\n  /**\n   * generates a file name with extension or optional type\n   *\n   * @method faker.system.fileName\n   * @param {string} ext\n   * @param {string} type\n   */\n  this.fileName = function (ext, type) {\n    var str = faker.fake(\"{{random.words}}.{{system.fileExt}}\");\n    str = str.replace(/ /g, '_');\n    str = str.replace(/\\,/g, '_');\n    str = str.replace(/\\-/g, '_');\n    str = str.replace(/\\\\/g, '_');\n    str = str.replace(/\\//g, '_');\n    str = str.toLowerCase();\n    return str;\n  };\n\n  /**\n   * commonFileName\n   *\n   * @method faker.system.commonFileName\n   * @param {string} ext\n   * @param {string} type\n   */\n  this.commonFileName = function (ext, type) {\n    var str = faker.random.words() + \".\" + (ext || faker.system.commonFileExt());\n    str = str.replace(/ /g, '_');\n    str = str.replace(/\\,/g, '_');\n    str = str.replace(/\\-/g, '_');\n    str = str.replace(/\\\\/g, '_');\n    str = str.replace(/\\//g, '_');\n    str = str.toLowerCase();\n    return str;\n  };\n\n  /**\n   * mimeType\n   *\n   * @method faker.system.mimeType\n   */\n  this.mimeType = function () {\n    return faker.random.arrayElement(Object.keys(faker.definitions.system.mimeTypes));\n  };\n\n  /**\n   * returns a commonly used file type\n   *\n   * @method faker.system.commonFileType\n   */\n  this.commonFileType = function () {\n    var types = ['video', 'audio', 'image', 'text', 'application'];\n    return faker.random.arrayElement(types)\n  };\n\n  /**\n   * returns a commonly used file extension based on optional type\n   *\n   * @method faker.system.commonFileExt\n   * @param {string} type\n   */\n  this.commonFileExt = function (type) {\n    var types = [\n      'application/pdf',\n      'audio/mpeg',\n      'audio/wav',\n      'image/png',\n      'image/jpeg',\n      'image/gif',\n      'video/mp4',\n      'video/mpeg',\n      'text/html'\n    ];\n    return faker.system.fileExt(faker.random.arrayElement(types));\n  };\n\n\n  /**\n   * returns any file type available as mime-type\n   *\n   * @method faker.system.fileType\n   */\n  this.fileType = function () {\n    var types = [];\n    var mimes = faker.definitions.system.mimeTypes;\n    Object.keys(mimes).forEach(function(m){\n      var parts = m.split('/');\n      if (types.indexOf(parts[0]) === -1) {\n        types.push(parts[0]);\n      }\n    });\n    return faker.random.arrayElement(types);\n  };\n\n  /**\n   * fileExt\n   *\n   * @method faker.system.fileExt\n   * @param {string} mimeType\n   */\n  this.fileExt = function (mimeType) {\n    var exts = [];\n    var mimes = faker.definitions.system.mimeTypes;\n\n    // get specific ext by mime-type\n    if (typeof mimes[mimeType] === \"object\") {\n      return faker.random.arrayElement(mimes[mimeType].extensions);\n    }\n\n    // reduce mime-types to those with file-extensions\n    Object.keys(mimes).forEach(function(m){\n      if (mimes[m].extensions instanceof Array) {\n        mimes[m].extensions.forEach(function(ext){\n          exts.push(ext)\n        });\n      }\n    });\n    return faker.random.arrayElement(exts);\n  };\n\n  /**\n   * returns directory path\n   *\n   * @method faker.system.directoryPath\n   */\n  this.directoryPath = function () {\n      var paths = faker.definitions.system.directoryPaths\n      return faker.random.arrayElement(paths);\n  };\n\n  /**\n   * returns file path\n   *\n   * @method faker.system.filePath\n   */\n  this.filePath = function () {\n      return faker.fake(\"{{system.directoryPath}}/{{system.fileName}}\");\n  };\n\n  /**\n   * semver\n   *\n   * @method faker.system.semver\n   */\n  this.semver = function () {\n      return [faker.random.number(9),\n              faker.random.number(9),\n              faker.random.number(9)].join('.');\n  }\n\n}\n\nmodule['exports'] = System;\n","/**\n * @namespace faker.git\n */\n\nvar Git = function(faker) {\n  var self = this;\n  var f = faker.fake;\n\n  var hexChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\n  /**\n   * branch\n   *\n   * @method faker.git.branch\n   */\n  self.branch = function() {\n    var noun = faker.hacker.noun().replace(' ', '-');\n    var verb = faker.hacker.verb().replace(' ', '-');\n    return noun + '-' + verb;\n  }\n\n  /**\n   * commitEntry\n   *\n   * @method faker.git.commitEntry\n   * @param {object} options\n   */\n  self.commitEntry = function(options) {\n    options = options || {};\n\n    var entry = 'commit {{git.commitSha}}\\r\\n';\n\n    if (options.merge || (faker.random.number({ min: 0, max: 4 }) === 0)) {\n      entry += 'Merge: {{git.shortSha}} {{git.shortSha}}\\r\\n';\n    }\n\n    entry += 'Author: {{name.firstName}} {{name.lastName}} <{{internet.email}}>\\r\\n';\n    entry += 'Date: ' + faker.date.recent().toString() + '\\r\\n';\n    entry += '\\r\\n\\xa0\\xa0\\xa0\\xa0{{git.commitMessage}}\\r\\n';\n\n    return f(entry);\n  };\n\n  /**\n   * commitMessage\n   *\n   * @method faker.git.commitMessage\n   */\n  self.commitMessage = function() {\n    var format = '{{hacker.verb}} {{hacker.adjective}} {{hacker.noun}}';\n    return f(format);\n  };\n\n  /**\n   * commitSha\n   *\n   * @method faker.git.commitSha\n   */\n  self.commitSha = function() {\n    var commit = \"\";\n\n    for (var i = 0; i < 40; i++) {\n      commit += faker.random.arrayElement(hexChars);\n    }\n\n    return commit;\n  };\n\n  /**\n   * shortSha\n   *\n   * @method faker.git.shortSha\n   */\n  self.shortSha = function() {\n    var shortSha = \"\";\n\n    for (var i = 0; i < 7; i++) {\n      shortSha += faker.random.arrayElement(hexChars);\n    }\n\n    return shortSha;\n  };\n\n  return self;\n}\n\nmodule['exports'] = Git;\n","/**\n *\n * @namespace faker.vehicle\n */\nvar Vehicle = function (faker) {\n  var self = this;\n  var fake = faker.fake;\n\n  /**\n   * vehicle\n   *\n   * @method faker.vehicle.vehicle\n   */\n  self.vehicle = function () {\n    return fake('{{vehicle.manufacturer}} {{vehicle.model}}');\n  };\n\n  self.vehicle.schema = {\n    \"description\": \"Generates a random vehicle.\",\n    \"sampleResults\": [\"BMW Explorer\", \"Ford Camry\", \"Lamborghini Ranchero\"]\n  };\n\n  /**\n   * manufacturer\n   *\n   * @method faker.vehicle.manufacturer\n   */\n  self.manufacturer = function () {\n    return faker.random.arrayElement(faker.definitions.vehicle.manufacturer);\n  };\n\n  self.manufacturer.schema = {\n    \"description\": \"Generates a manufacturer name.\",\n    \"sampleResults\": [\"Ford\", \"Jeep\", \"Tesla\"]\n  };\n\n\n  /**\n   * model\n   *\n   * @method faker.vehicle.model\n   */\n  self.model = function () {\n    return faker.random.arrayElement(faker.definitions.vehicle.model);\n  };\n\n  self.model.schema = {\n    \"description\": \"Generates a vehicle model.\",\n    \"sampleResults\": [\"Explorer\", \"Camry\", \"Ranchero\"]\n  };\n\n  /**\n   * type\n   *\n   * @method faker.vehicle.type\n   */\n  self.type = function () {\n    return faker.random.arrayElement(faker.definitions.vehicle.type);\n  };\n\n  self.type.schema = {\n    \"description\": \"Generates a vehicle type.\",\n    \"sampleResults\": [\"Coupe\", \"Convertable\", \"Sedan\", \"SUV\"]\n  };\n\n  /**\n   * fuel\n   *\n   * @method faker.vehicle.fuel\n   */\n  self.fuel = function () {\n    return faker.random.arrayElement(faker.definitions.vehicle.fuel);\n  };\n\n  self.fuel.schema = {\n    \"description\": \"Generates a fuel type.\",\n    \"sampleResults\": [\"Electric\", \"Gasoline\", \"Diesel\"]\n  };\n\n  /**\n   * vin\n   *\n   * @method faker.vehicle.vin\n   */\n  self.vin = function () {\n    return (\n      faker.random.alphaNumeric(10) +\n      faker.random.alpha({ count: 1, upcase: true }) +\n      faker.random.alphaNumeric(1) +\n      faker.random.number({ min: 10000, max: 100000}) // return five digit #\n    ).toUpperCase();\n  };\n\n  self.vin.schema = {\n    \"description\": \"Generates a valid VIN number.\",\n    \"sampleResults\": [\"YV1MH682762184654\", \"3C7WRMBJ2EG208836\"]\n  };\n\n  /**\n   * color\n   *\n   * @method faker.vehicle.color\n   */\n  self.color = function () {\n    return fake('{{commerce.color}}');\n  };\n\n  self.color.schema = {\n    \"description\": \"Generates a color\",\n    \"sampleResults\": [\"red\", \"white\", \"black\"]\n  };\n\n    /**\n     * vrm\n     *\n     * @method faker.vehicle.vrm\n     */\n    self.vrm = function () {\n        return (\n            faker.random.alpha({ count: 2, upcase: true }) +\n            faker.random.number({ min: 0, max: 9 }) +\n            faker.random.number({ min: 0, max: 9 }) +\n            faker.random.alpha({ count: 3, upcase: true })\n        ).toUpperCase();\n    };\n\n    self.vrm.schema = {\n        \"description\": \"Generates a vehicle vrm\",\n        \"sampleResults\": [\"MF56UPA\", \"GL19AAQ\", \"SF20TTA\"]\n    };\n};\n\nmodule[\"exports\"] = Vehicle;\n","/**\n *\n * @namespace faker.music\n */\nvar Music = function (faker) {\n    var self = this;\n    /**\n     * genre\n     *\n     * @method faker.music.genre\n     */\n    self.genre = function () {\n        return faker.random.arrayElement(faker.definitions.music.genre);\n    };\n\n    self.genre.schema = {\n        \"description\": \"Generates a genre.\",\n        \"sampleResults\": [\"Rock\", \"Metal\", \"Pop\"]\n    };\n};\n\nmodule[\"exports\"] = Music;\n","/*\n\n   this index.js file is used for including the faker library as a CommonJS module, instead of a bundle\n\n   you can include the faker library into your existing node.js application by requiring the entire /faker directory\n\n    var faker = require(./faker);\n    var randomName = faker.name.findName();\n\n   you can also simply include the \"faker.js\" file which is the auto-generated bundled version of the faker library\n\n    var faker = require(./customAppPath/faker);\n    var randomName = faker.name.findName();\n\n\n  if you plan on modifying the faker library you should be performing your changes in the /lib/ directory\n\n*/\n\n/**\n *\n * @namespace faker\n */\nfunction Faker (opts) {\n\n  var self = this;\n\n  opts = opts || {};\n\n  // assign options\n  var locales = self.locales || opts.locales || {};\n  var locale = self.locale || opts.locale || \"en\";\n  var localeFallback = self.localeFallback || opts.localeFallback || \"en\";\n\n  self.locales = locales;\n  self.locale = locale;\n  self.localeFallback = localeFallback;\n\n  self.definitions = {};\n\n  var Fake = require('./fake');\n  self.fake = new Fake(self).fake;\n\n  var Unique = require('./unique');\n  self.unique = new Unique(self).unique;\n\n  var Random = require('./random');\n  self.random = new Random(self);\n\n  var Helpers = require('./helpers');\n  self.helpers = new Helpers(self);\n\n  var Name = require('./name');\n  self.name = new Name(self);\n\n  var Address = require('./address');\n  self.address = new Address(self);\n\n  var Company = require('./company');\n  self.company = new Company(self);\n\n  var Finance = require('./finance');\n  self.finance = new Finance(self);\n\n  var Image = require('./image');\n  self.image = new Image(self);\n\n  var Lorem = require('./lorem');\n  self.lorem = new Lorem(self);\n\n  var Hacker = require('./hacker');\n  self.hacker = new Hacker(self);\n\n  var Internet = require('./internet');\n  self.internet = new Internet(self);\n\n  var Database = require('./database');\n  self.database = new Database(self);\n\n  var Phone = require('./phone_number');\n  self.phone = new Phone(self);\n\n  var _Date = require('./date');\n  self.date = new _Date(self);\n\n  var _Time = require('./time');\n  self.time = new _Time(self);\n\n  var Commerce = require('./commerce');\n  self.commerce = new Commerce(self);\n\n  var System = require('./system');\n  self.system = new System(self);\n\n  var Git = require('./git');\n  self.git = new Git(self);\n\n  var Vehicle = require('./vehicle');\n  self.vehicle = new Vehicle(self);\n\n  var Music = require('./music');\n  self.music = new Music(self);\n\n  var _definitions = {\n    \"name\": [\"first_name\", \"last_name\", \"prefix\", \"suffix\", \"gender\", \"title\", \"male_prefix\", \"female_prefix\", \"male_first_name\", \"female_first_name\", \"male_middle_name\", \"female_middle_name\", \"male_last_name\", \"female_last_name\"],\n    \"address\": [\"city_prefix\", \"city_suffix\", \"street_suffix\", \"county\", \"country\", \"country_code\", \"country_code_alpha_3\", \"state\", \"state_abbr\", \"street_prefix\", \"postcode\", \"postcode_by_state\", \"direction\", \"direction_abbr\", \"time_zone\"],\n    \"company\": [\"adjective\", \"noun\", \"descriptor\", \"bs_adjective\", \"bs_noun\", \"bs_verb\", \"suffix\"],\n    \"lorem\": [\"words\"],\n    \"hacker\": [\"abbreviation\", \"adjective\", \"noun\", \"verb\", \"ingverb\", \"phrase\"],\n    \"phone_number\": [\"formats\"],\n    \"finance\": [\"account_type\", \"transaction_type\", \"currency\", \"iban\", \"credit_card\"],\n    \"internet\": [\"avatar_uri\", \"domain_suffix\", \"free_email\", \"example_email\", \"password\"],\n    \"commerce\": [\"color\", \"department\", \"product_name\", \"price\", \"categories\", \"product_description\"],\n    \"database\": [\"collation\", \"column\", \"engine\", \"type\"],\n    \"system\": [\"mimeTypes\", \"directoryPaths\"],\n    \"date\": [\"month\", \"weekday\"],\n    \"vehicle\": [\"vehicle\", \"manufacturer\", \"model\", \"type\", \"fuel\", \"vin\", \"color\"],\n    \"music\": [\"genre\"],\n    \"title\": \"\",\n    \"separator\": \"\"\n  };\n\n  // Create a Getter for all definitions.foo.bar properties\n  Object.keys(_definitions).forEach(function(d){\n    if (typeof self.definitions[d] === \"undefined\") {\n      self.definitions[d] = {};\n    }\n\n    if (typeof _definitions[d] === \"string\") {\n        self.definitions[d] = _definitions[d];\n      return;\n    }\n\n    _definitions[d].forEach(function(p){\n      Object.defineProperty(self.definitions[d], p, {\n        get: function () {\n          if (typeof self.locales[self.locale][d] === \"undefined\" || typeof self.locales[self.locale][d][p] === \"undefined\") {\n            // certain localization sets contain less data then others.\n            // in the case of a missing definition, use the default localeFallback to substitute the missing set data\n            // throw new Error('unknown property ' + d + p)\n            return self.locales[localeFallback][d][p];\n          } else {\n            // return localized data\n            return self.locales[self.locale][d][p];\n          }\n        }\n      });\n    });\n  });\n\n};\n\nFaker.prototype.setLocale = function (locale) {\n  this.locale = locale;\n}\n\nFaker.prototype.seed = function(value) {\n  var Random = require('./random');\n  this.seedValue = value;\n  this.random = new Random(this, this.seedValue);\n}\nmodule['exports'] = Faker;\n","module[\"exports\"] = [\n];\n","module[\"exports\"] = [\n];\n","module[\"exports\"] = [\n  \"Afeganistão\",\n  \"Albânia\",\n  \"Algéria\",\n  \"Samoa\",\n  \"Andorra\",\n  \"Angola\",\n  \"Anguila\",\n  \"Antigua and Barbada\",\n  \"Argentina\",\n  \"Armênia\",\n  \"Aruba\",\n  \"Austrália\",\n  \"Áustria\",\n  \"Azerbaijão\",\n  \"Bahamas\",\n  \"Barém\",\n  \"Bangladesh\",\n  \"Barbados\",\n  \"Bélgica\",\n  \"Belize\",\n  \"Benin\",\n  \"Bermuda\",\n  \"Butão\",\n  \"Bolívia\",\n  \"Bôsnia\",\n  \"Botsuana\",\n  \"Ilha Bouvet\",\n  \"Brasil\",\n  \"Arquipélago de Chagos\",\n  \"Ilhas Virgens\",\n  \"Brunei\",\n  \"Bulgária\",\n  \"Burkina Faso\",\n  \"Burundi\",\n  \"Camboja\",\n  \"Camarões\",\n  \"Canadá\",\n  \"Cabo Verde\",\n  \"Ilhas Caiman\",\n  \"República da África Central\",\n  \"Chade\",\n  \"Chile\",\n  \"China\",\n  \"Ilha do Natal\",\n  \"Ilhas Cocos\",\n  \"Colômbia\",\n  \"Comores\",\n  \"Congo\",\n  \"Ilhas Cook\",\n  \"Costa Rica\",\n  \"Costa do Marfim\",\n  \"Croácia\",\n  \"Cuba\",\n  \"Chipre\",\n  \"República Tcheca\",\n  \"Dinamarca\",\n  \"Jibuti\",\n  \"Dominica\",\n  \"República Dominicana\",\n  \"Equador\",\n  \"Egito\",\n  \"El Salvador\",\n  \"Guiné Equatorial\",\n  \"Eritreia\",\n  \"Estônia\",\n  \"Etiópia\",\n  \"Ilhas Faroe\",\n  \"Malvinas\",\n  \"Fiji\",\n  \"Finlândia\",\n  \"França\",\n  \"Guiné Francesa\",\n  \"Polinésia Francesa\",\n  \"Gabão\",\n  \"Gâmbia\",\n  \"Georgia\",\n  \"Alemanha\",\n  \"Gana\",\n  \"Gibraltar\",\n  \"Grécia\",\n  \"Groelândia\",\n  \"Granada\",\n  \"Guadalupe\",\n  \"Guatemala\",\n  \"Guernesey\",\n  \"Guiné\",\n  \"Guiné-Bissau\",\n  \"Guiana\",\n  \"Haiti\",\n  \"Ilhas Heard e McDonald\",\n  \"Vaticano\",\n  \"Honduras\",\n  \"Hong Kong\",\n  \"Hungria\",\n  \"Islândia\",\n  \"Índia\",\n  \"Indonésia\",\n  \"Irã\",\n  \"Iraque\",\n  \"Irlanda\",\n  \"Ilha de Man\",\n  \"Israel\",\n  \"Itália\",\n  \"Jamaica\",\n  \"Japão\",\n  \"Jersey\",\n  \"Jordânia\",\n  \"Cazaquistão\",\n  \"Quênia\",\n  \"Quiribati\",\n  \"Coreia do Norte\",\n  \"Coreia do Sul\",\n  \"Kuwait\",\n  \"Quirguistão\",\n  \"Laos\",\n  \"Latvia\",\n  \"Líbano\",\n  \"Lesoto\",\n  \"Libéria\",\n  \"Líbia\",\n  \"Liechtenstein\",\n  \"Lituânia\",\n  \"Luxemburgo\",\n  \"Macao\",\n  \"Macedônia\",\n  \"Madagascar\",\n  \"Malawi\",\n  \"Malásia\",\n  \"Maldives\",\n  \"Mali\",\n  \"Malta\",\n  \"Ilhas Marshall\",\n  \"Martinica\",\n  \"Mauritânia\",\n  \"Maurícia\",\n  \"Maiote\",\n  \"México\",\n  \"Micronésia\",\n  \"Moldávia\",\n  \"Mônaco\",\n  \"Mongólia\",\n  \"Montenegro\",\n  \"Montserrat\",\n  \"Marrocos\",\n  \"Moçambique\",\n  \"Myanmar\",\n  \"Namibia\",\n  \"Nauru\",\n  \"Nepal\",\n  \"Antilhas Holandesas\",\n  \"Holanda\",\n  \"Nova Caledonia\",\n  \"Nova Zelândia\",\n  \"Nicarágua\",\n  \"Nigéria\",\n  \"Niue\",\n  \"Ilha Norfolk\",\n  \"Marianas Setentrionais\",\n  \"Noruega\",\n  \"Omã\",\n  \"Paquistão\",\n  \"Palau\",\n  \"Território da Palestina\",\n  \"Panamá\",\n  \"Papua-Nova Guiné\",\n  \"Paraguai\",\n  \"Peru\",\n  \"Filipinas\",\n  \"Polônia\",\n  \"Portugal\",\n  \"Porto Rico\",\n  \"Qatar\",\n  \"Romênia\",\n  \"Rússia\",\n  \"Ruanda\",\n  \"São Bartolomeu\",\n  \"Santa Helena\",\n  \"Santa Lúcia\",\n  \"São Martinho\",\n  \"São Pedro e Miquelão\",\n  \"São Vicente e Granadinas\",\n  \"Samoa\",\n  \"San Marino\",\n  \"Sao Tomé e Príncipe\",\n  \"Arábia Saudita\",\n  \"Senegal\",\n  \"Sérvia\",\n  \"Seicheles\",\n  \"Serra Leoa\",\n  \"Singapura\",\n  \"Eslováquia\",\n  \"Eslovênia\",\n  \"Ilhas Salomão\",\n  \"Somália\",\n  \"África do Sul\",\n  \"Ilhas Geórgia do Sul e Sandwich do Sul\",\n  \"Espanha\",\n  \"Sri Lanka\",\n  \"Sudão\",\n  \"Suriname\",\n  \"Ilhas Svalbard & Jan Mayen\",\n  \"Suazilândia\",\n  \"Suécia\",\n  \"Suíça\",\n  \"Síria\",\n  \"Taiwan\",\n  \"Tajiquistão\",\n  \"Tanzânia\",\n  \"Tailândia\",\n  \"Timor-Leste\",\n  \"Togo\",\n  \"Toquelau\",\n  \"Tonga\",\n  \"Trinidad e Tobago\",\n  \"Tunísia\",\n  \"Turquia\",\n  \"Turcomenistão\",\n  \"Turcas e Caicos\",\n  \"Tuvalu\",\n  \"Uganda\",\n  \"Ucrânia\",\n  \"Emirados Árabes Unidos\",\n  \"Reino Unido\",\n  \"Estados Unidos da América\",\n  \"Estados Unidos das Ilhas Virgens\",\n  \"Uruguai\",\n  \"Uzbequistão\",\n  \"Vanuatu\",\n  \"Venezuela\",\n  \"Vietnã\",\n  \"Wallis e Futuna\",\n  \"Iêmen\",\n  \"Zâmbia\",\n  \"Zimbábue\"\n];\n","module[\"exports\"] = [\n  \"#####\",\n  \"####\",\n  \"###\"\n];\n","module[\"exports\"] = [\n  \"Rua\",\n  \"Avenida\",\n  \"Travessa\",\n  \"Alameda\",\n  \"Marginal\",\n  \"Rodovia\"\n];\n","module[\"exports\"] = [\n  \"Apto. ###\",\n  \"Sobrado ##\",\n  \"Casa #\",\n  \"Lote ##\",\n  \"Quadra ##\"\n];\n","module[\"exports\"] = [\n  \"#####-###\"\n];\n","module[\"exports\"] = [\n  \"Acre\",\n  \"Alagoas\",\n  \"Amapá\",\n  \"Amazonas\",\n  \"Bahia\",\n  \"Ceará\",\n  \"Distrito Federal\",\n  \"Espírito Santo\",\n  \"Goiás\",\n  \"Maranhão\",\n  \"Mato Grosso\",\n  \"Mato Grosso do Sul\",\n  \"Minas Gerais\",\n  \"Pará\",\n  \"Paraíba\",\n  \"Paraná\",\n  \"Pernambuco\",\n  \"Piauí\",\n  \"Rio de Janeiro\",\n  \"Rio Grande do Norte\",\n  \"Rio Grande do Sul\",\n  \"Rondônia\",\n  \"Roraima\",\n  \"Santa Catarina\",\n  \"São Paulo\",\n  \"Sergipe\",\n  \"Tocantins\"\n];\n","module[\"exports\"] = [\n  \"AC\",\n  \"AL\",\n  \"AP\",\n  \"AM\",\n  \"BA\",\n  \"CE\",\n  \"DF\",\n  \"ES\",\n  \"GO\",\n  \"MA\",\n  \"MT\",\n  \"MS\",\n  \"MG\",\n  \"PA\",\n  \"PB\",\n  \"PR\",\n  \"PE\",\n  \"PI\",\n  \"RJ\",\n  \"RN\",\n  \"RS\",\n  \"RO\",\n  \"RR\",\n  \"SC\",\n  \"SP\",\n  \"SE\",\n  \"TO\"\n];\n","module[\"exports\"] = [\n  \"Brasil\"\n];\n","var address = {};\nmodule['exports'] = address;\naddress.city_prefix = require(\"./city_prefix\");\naddress.city_suffix = require(\"./city_suffix\");\naddress.country = require(\"./country\");\naddress.building_number = require(\"./building_number\");\naddress.street_suffix = require(\"./street_suffix\");\naddress.secondary_address = require(\"./secondary_address\");\naddress.postcode = require(\"./postcode\");\naddress.state = require(\"./state\");\naddress.state_abbr = require(\"./state_abbr\");\naddress.default_country = require(\"./default_country\");\n","module[\"exports\"] = [\n  \"S.A.\",\n  \"LTDA\",\n  \"EIRELI\",\n  \"e Associados\",\n  \"Comércio\"\n];\n","module[\"exports\"] = [\n  \"#{Name.last_name} #{suffix}\",\n  \"#{Name.last_name}-#{Name.last_name}\",\n  \"#{Name.last_name}, #{Name.last_name} e #{Name.last_name}\"\n];\n","var company = {};\nmodule['exports'] = company;\ncompany.suffix = require(\"./suffix\");\ncompany.name = require(\"./name\");\n","module[\"exports\"] = [\n  \"amarelo\",\n  \"âmbar\",\n  \"ametista\",\n  \"azul\",\n  \"azul celeste\",\n  \"azul marinho\",\n  \"azul petróleo\",\n  \"açafrão\",\n  \"bordô\",\n  \"bronze\",\n  \"caramelo\",\n  \"castanho \",\n  \"cenoura\",\n  \"cinza\",\n  \"cobre\",\n  \"coral\",\n  \"dourado\",\n  \"escarlate\",\n  \"esmeralda\",\n  \"ferrugem\",\n  \"fuligem\",\n  \"fúchsia\",\n  \"grená\",\n  \"índigo\",\n  \"jade\",\n  \"laranja\",\n  \"lilás\",\n  \"limão\",\n  \"madeira\",\n  \"magenta\",\n  \"marrom\",\n  \"ouro\",\n  \"pele\",\n  \"prata\",\n  \"preto\",\n  \"púrpura\",\n  \"rosa\",\n  \"roxo\",\n  \"salmão\",\n  \"turquesa\",\n  \"verde\",\n  \"verde lima\",\n  \"verde-azulado\",\n  \"vermelho\",\n  \"violeta\"\n];\n","module[\"exports\"] = [\n  \"Livros\",\n  \"Filmes\",\n  \"Música\",\n  \"Jogos\",\n  \"Eletrônicos\",\n  \"Computadores\",\n  \"Casa\",\n  \"Jardim\",\n  \"Ferramentas\",\n  \"Mercearia\",\n  \"Saúde\",\n  \"Beleza\",\n  \"Brinquedos\",\n  \"Crianças\",\n  \"Bebê\",\n  \"Roupas\",\n  \"Sapatos\",\n  \"Jóias\",\n  \"Esportes\",\n  \"Turismo\",\n  \"Automotivo\",\n  \"Industrial\"\n];\n","module[\"exports\"] = {\n  \"adjective\": [\n    \"Pequeno\",\n    \"Ergonômico\",\n    \"Rústico\",\n    \"Inteligente\",\n    \"Lindo\",\n    \"Incrível\",\n    \"Fantástico\",\n    \"Prático\",\n    \"Lustroso\",\n    \"Impressionante\",\n    \"Genérico\",\n    \"Feito à mão\",\n    \"Licenciado\",\n    \"Refinado\",\n    \"Sem marca\",\n    \"Gostoso\"\n  ],\n  \"material\": [\n    \"Aço\",\n    \"Madeira\",\n    \"Concreto\",\n    \"Plástico\",\n    \"Algodão\",\n    \"Granito\",\n    \"Borracha\",\n    \"Metal\",\n    \"Macio\",\n    \"Fresco\",\n    \"Congelado\"\n  ],\n  \"product\": [\n    \"Cadeira\",\n    \"Carro\",\n    \"Computador\",\n    \"Teclado\",\n    \"Mouse\",\n    \"Bicicleta\",\n    \"Bola\",\n    \"Luvas\",\n    \"Calças\",\n    \"Camiseta\",\n    \"Mesa\",\n    \"Sapatos\",\n    \"Chapéu\",\n    \"Toalhas\",\n    \"Sabonete\",\n    \"Atum\",\n    \"Frango\",\n    \"Peixe\",\n    \"Queijo\",\n    \"Bacon\",\n    \"Pizza\",\n    \"Salada\",\n    \"Salsicha\",\n    \"Salgadinhos\"\n  ]\n};\n","var commerce = {};\nmodule['exports'] = commerce;\ncommerce.color = require(\"./color\");\ncommerce.department = require(\"./department\");\ncommerce.product_name = require(\"./product_name\");\n","module[\"exports\"] = [\n  \"gmail.com\",\n  \"yahoo.com\",\n  \"hotmail.com\",\n  \"live.com\",\n  \"bol.com.br\"\n];\n","module[\"exports\"] = [\n  \"br\",\n  \"com\",\n  \"biz\",\n  \"info\",\n  \"name\",\n  \"net\",\n  \"org\"\n];\n","var internet = {};\nmodule['exports'] = internet;\ninternet.free_email = require(\"./free_email\");\ninternet.domain_suffix = require(\"./domain_suffix\");\n","module[\"exports\"] = [\n  \"alias\",\n  \"consequatur\",\n  \"aut\",\n  \"perferendis\",\n  \"sit\",\n  \"voluptatem\",\n  \"accusantium\",\n  \"doloremque\",\n  \"aperiam\",\n  \"eaque\",\n  \"ipsa\",\n  \"quae\",\n  \"ab\",\n  \"illo\",\n  \"inventore\",\n  \"veritatis\",\n  \"et\",\n  \"quasi\",\n  \"architecto\",\n  \"beatae\",\n  \"vitae\",\n  \"dicta\",\n  \"sunt\",\n  \"explicabo\",\n  \"aspernatur\",\n  \"aut\",\n  \"odit\",\n  \"aut\",\n  \"fugit\",\n  \"sed\",\n  \"quia\",\n  \"consequuntur\",\n  \"magni\",\n  \"dolores\",\n  \"eos\",\n  \"qui\",\n  \"ratione\",\n  \"voluptatem\",\n  \"sequi\",\n  \"nesciunt\",\n  \"neque\",\n  \"dolorem\",\n  \"ipsum\",\n  \"quia\",\n  \"dolor\",\n  \"sit\",\n  \"amet\",\n  \"consectetur\",\n  \"adipisci\",\n  \"velit\",\n  \"sed\",\n  \"quia\",\n  \"non\",\n  \"numquam\",\n  \"eius\",\n  \"modi\",\n  \"tempora\",\n  \"incidunt\",\n  \"ut\",\n  \"labore\",\n  \"et\",\n  \"dolore\",\n  \"magnam\",\n  \"aliquam\",\n  \"quaerat\",\n  \"voluptatem\",\n  \"ut\",\n  \"enim\",\n  \"ad\",\n  \"minima\",\n  \"veniam\",\n  \"quis\",\n  \"nostrum\",\n  \"exercitationem\",\n  \"ullam\",\n  \"corporis\",\n  \"nemo\",\n  \"enim\",\n  \"ipsam\",\n  \"voluptatem\",\n  \"quia\",\n  \"voluptas\",\n  \"sit\",\n  \"suscipit\",\n  \"laboriosam\",\n  \"nisi\",\n  \"ut\",\n  \"aliquid\",\n  \"ex\",\n  \"ea\",\n  \"commodi\",\n  \"consequatur\",\n  \"quis\",\n  \"autem\",\n  \"vel\",\n  \"eum\",\n  \"iure\",\n  \"reprehenderit\",\n  \"qui\",\n  \"in\",\n  \"ea\",\n  \"voluptate\",\n  \"velit\",\n  \"esse\",\n  \"quam\",\n  \"nihil\",\n  \"molestiae\",\n  \"et\",\n  \"iusto\",\n  \"odio\",\n  \"dignissimos\",\n  \"ducimus\",\n  \"qui\",\n  \"blanditiis\",\n  \"praesentium\",\n  \"laudantium\",\n  \"totam\",\n  \"rem\",\n  \"voluptatum\",\n  \"deleniti\",\n  \"atque\",\n  \"corrupti\",\n  \"quos\",\n  \"dolores\",\n  \"et\",\n  \"quas\",\n  \"molestias\",\n  \"excepturi\",\n  \"sint\",\n  \"occaecati\",\n  \"cupiditate\",\n  \"non\",\n  \"provident\",\n  \"sed\",\n  \"ut\",\n  \"perspiciatis\",\n  \"unde\",\n  \"omnis\",\n  \"iste\",\n  \"natus\",\n  \"error\",\n  \"similique\",\n  \"sunt\",\n  \"in\",\n  \"culpa\",\n  \"qui\",\n  \"officia\",\n  \"deserunt\",\n  \"mollitia\",\n  \"animi\",\n  \"id\",\n  \"est\",\n  \"laborum\",\n  \"et\",\n  \"dolorum\",\n  \"fuga\",\n  \"et\",\n  \"harum\",\n  \"quidem\",\n  \"rerum\",\n  \"facilis\",\n  \"est\",\n  \"et\",\n  \"expedita\",\n  \"distinctio\",\n  \"nam\",\n  \"libero\",\n  \"tempore\",\n  \"cum\",\n  \"soluta\",\n  \"nobis\",\n  \"est\",\n  \"eligendi\",\n  \"optio\",\n  \"cumque\",\n  \"nihil\",\n  \"impedit\",\n  \"quo\",\n  \"porro\",\n  \"quisquam\",\n  \"est\",\n  \"qui\",\n  \"minus\",\n  \"id\",\n  \"quod\",\n  \"maxime\",\n  \"placeat\",\n  \"facere\",\n  \"possimus\",\n  \"omnis\",\n  \"voluptas\",\n  \"assumenda\",\n  \"est\",\n  \"omnis\",\n  \"dolor\",\n  \"repellendus\",\n  \"temporibus\",\n  \"autem\",\n  \"quibusdam\",\n  \"et\",\n  \"aut\",\n  \"consequatur\",\n  \"vel\",\n  \"illum\",\n  \"qui\",\n  \"dolorem\",\n  \"eum\",\n  \"fugiat\",\n  \"quo\",\n  \"voluptas\",\n  \"nulla\",\n  \"pariatur\",\n  \"at\",\n  \"vero\",\n  \"eos\",\n  \"et\",\n  \"accusamus\",\n  \"officiis\",\n  \"debitis\",\n  \"aut\",\n  \"rerum\",\n  \"necessitatibus\",\n  \"saepe\",\n  \"eveniet\",\n  \"ut\",\n  \"et\",\n  \"voluptates\",\n  \"repudiandae\",\n  \"sint\",\n  \"et\",\n  \"molestiae\",\n  \"non\",\n  \"recusandae\",\n  \"itaque\",\n  \"earum\",\n  \"rerum\",\n  \"hic\",\n  \"tenetur\",\n  \"a\",\n  \"sapiente\",\n  \"delectus\",\n  \"ut\",\n  \"aut\",\n  \"reiciendis\",\n  \"voluptatibus\",\n  \"maiores\",\n  \"doloribus\",\n  \"asperiores\",\n  \"repellat\"\n];\n","var lorem = {};\nmodule['exports'] = lorem;\nlorem.words = require(\"./words\");\n","module[\"exports\"] = [\r\n  \"Alessandro\",\r\n  \"Alexandre\",\r\n  \"Anthony\",\r\n  \"Antônio\",\r\n  \"Arthur\",\r\n  \"Benjamin\",\r\n  \"Benício\",\r\n  \"Bernardo\",\r\n  \"Breno\",\r\n  \"Bryan\",\r\n  \"Caio\",\r\n  \"Calebe\",\r\n  \"Carlos\",\r\n  \"Cauã\",\r\n  \"César\",\r\n  \"Daniel\",\r\n  \"Danilo\",\r\n  \"Davi\",\r\n  \"Davi Lucca\",\r\n  \"Deneval\",\r\n  \"Eduardo\",\r\n  \"Elísio\",\r\n  \"Emanuel\",\r\n  \"Enzo\",\r\n  \"Enzo Gabriel\",\r\n  \"Fabiano\",\r\n  \"Fabrício\",\r\n  \"Feliciano\",\r\n  \"Felipe\",\r\n  \"Frederico\",\r\n  \"Fábio\",\r\n  \"Félix\",\r\n  \"Gabriel\",\r\n  \"Gael\",\r\n  \"Guilherme\",\r\n  \"Gustavo\",\r\n  \"Gúbio\",\r\n  \"Heitor\",\r\n  \"Henrique\",\r\n  \"Hugo\",\r\n  \"Hélio\",\r\n  \"Isaac\",\r\n  \"Joaquim\",\r\n  \"João\",\r\n  \"João Lucas\",\r\n  \"João Miguel\",\r\n  \"João Pedro\",\r\n  \"Júlio\",\r\n  \"Júlio César\",\r\n  \"Kléber\",\r\n  \"Ladislau\",\r\n  \"Leonardo\",\r\n  \"Lorenzo\",\r\n  \"Lucas\",\r\n  \"Lucca\",\r\n  \"Marcelo\",\r\n  \"Marcos\",\r\n  \"Matheus\",\r\n  \"Miguel\",\r\n  \"Murilo\",\r\n  \"Nataniel\",\r\n  \"Nicolas\",\r\n  \"Noah\",\r\n  \"Norberto\",\r\n  \"Pablo\",\r\n  \"Paulo\",\r\n  \"Pedro\",\r\n  \"Pedro Henrique\",\r\n  \"Pietro\",\r\n  \"Rafael\",\r\n  \"Raul\",\r\n  \"Ricardo\",\r\n  \"Roberto\",\r\n  \"Salvador\",\r\n  \"Samuel\",\r\n  \"Silas\",\r\n  \"Sirineu\",\r\n  \"Tertuliano\",\r\n  \"Théo\",\r\n  \"Vicente\",\r\n  \"Vitor\",\r\n  \"Víctor\",\r\n  \"Warley\",\r\n  \"Washington\",\r\n  \"Yago\",\r\n  \"Yango\",\r\n  \"Yuri\",\r\n  \"Ígor\"\r\n];","module[\"exports\"] = [\r\n  \"Alessandra\",\r\n  \"Alice\",\r\n  \"Aline\",\r\n  \"Alícia\",\r\n  \"Ana Clara\",\r\n  \"Ana Júlia\",\r\n  \"Ana Laura\",\r\n  \"Ana Luiza\",\r\n  \"Antonella\",\r\n  \"Beatriz\",\r\n  \"Bruna\",\r\n  \"Carla\",\r\n  \"Cecília\",\r\n  \"Clara\",\r\n  \"Célia\",\r\n  \"Dalila\",\r\n  \"Eduarda\",\r\n  \"Elisa\",\r\n  \"Eloá\",\r\n  \"Emanuelly\",\r\n  \"Esther\",\r\n  \"Fabrícia\",\r\n  \"Felícia\",\r\n  \"Giovanna\",\r\n  \"Helena\",\r\n  \"Heloísa\",\r\n  \"Isabel\",\r\n  \"Isabela\",\r\n  \"Isabella\",\r\n  \"Isabelly\",\r\n  \"Isis\",\r\n  \"Janaína\",\r\n  \"Joana\",\r\n  \"Júlia\",\r\n  \"Karla\",\r\n  \"Lara\",\r\n  \"Larissa\",\r\n  \"Laura\",\r\n  \"Lavínia\",\r\n  \"Liz\",\r\n  \"Lorena\",\r\n  \"Lorraine\",\r\n  \"Luiza\",\r\n  \"Lívia\",\r\n  \"Maitê\",\r\n  \"Manuela\",\r\n  \"Marcela\",\r\n  \"Margarida\",\r\n  \"Maria\",\r\n  \"Maria Alice\",\r\n  \"Maria Cecília\",\r\n  \"Maria Clara\",\r\n  \"Maria Eduarda\",\r\n  \"Maria Helena\",\r\n  \"Maria Júlia\",\r\n  \"Maria Luiza\",\r\n  \"Mariana\",\r\n  \"Marina\",\r\n  \"Marli\",\r\n  \"Meire\",\r\n  \"Melissa\",\r\n  \"Morgana\",\r\n  \"Márcia\",\r\n  \"Mércia\",\r\n  \"Natália\",\r\n  \"Núbia\",\r\n  \"Ofélia\",\r\n  \"Paula\",\r\n  \"Rafaela\",\r\n  \"Rebeca\",\r\n  \"Roberta\",\r\n  \"Sara\",\r\n  \"Sarah\",\r\n  \"Sophia\",\r\n  \"Suélen\",\r\n  \"Sílvia\",\r\n  \"Talita\",\r\n  \"Valentina\",\r\n  \"Vitória\",\r\n  \"Yasmin\"\r\n];","module[\"exports\"] = [\n  \"Alessandra\",\n  \"Alessandro\",\n  \"Alexandre\",\n  \"Alice\",\n  \"Aline\",\n  \"Alícia\",\n  \"Ana Clara\",\n  \"Ana Júlia\",\n  \"Ana Laura\",\n  \"Ana Luiza\",\n  \"Anthony\",\n  \"Antonella\",\n  \"Antônio\",\n  \"Arthur\",\n  \"Beatriz\",\n  \"Benjamin\",\n  \"Benício\",\n  \"Bernardo\",\n  \"Breno\",\n  \"Bruna\",\n  \"Bryan\",\n  \"Caio\",\n  \"Calebe\",\n  \"Carla\",\n  \"Carlos\",\n  \"Cauã\",\n  \"Cecília\",\n  \"Clara\",\n  \"Célia\",\n  \"César\",\n  \"Dalila\",\n  \"Daniel\",\n  \"Danilo\",\n  \"Davi\",\n  \"Davi Lucca\",\n  \"Deneval\",\n  \"Eduarda\",\n  \"Eduardo\",\n  \"Elisa\",\n  \"Eloá\",\n  \"Elísio\",\n  \"Emanuel\",\n  \"Emanuelly\",\n  \"Enzo\",\n  \"Enzo Gabriel\",\n  \"Esther\",\n  \"Fabiano\",\n  \"Fabrícia\",\n  \"Fabrício\",\n  \"Feliciano\",\n  \"Felipe\",\n  \"Felícia\",\n  \"Frederico\",\n  \"Fábio\",\n  \"Félix\",\n  \"Gabriel\",\n  \"Gael\",\n  \"Giovanna\",\n  \"Guilherme\",\n  \"Gustavo\",\n  \"Gúbio\",\n  \"Heitor\",\n  \"Helena\",\n  \"Heloísa\",\n  \"Henrique\",\n  \"Hugo\",\n  \"Hélio\",\n  \"Isaac\",\n  \"Isabel\",\n  \"Isabela\",\n  \"Isabella\",\n  \"Isabelly\",\n  \"Isadora\",\n  \"Isis\",\n  \"Janaína\",\n  \"Joana\",\n  \"Joaquim\",\n  \"João\",\n  \"João Lucas\",\n  \"João Miguel\",\n  \"João Pedro\",\n  \"Júlia\",\n  \"Júlio\",\n  \"Júlio César\",\n  \"Karla\",\n  \"Kléber\",\n  \"Ladislau\",\n  \"Lara\",\n  \"Larissa\",\n  \"Laura\",\n  \"Lavínia\",\n  \"Leonardo\",\n  \"Liz\",\n  \"Lorena\",\n  \"Lorenzo\",\n  \"Lorraine\",\n  \"Lucas\",\n  \"Lucca\",\n  \"Luiza\",\n  \"Lívia\",\n  \"Maitê\",\n  \"Manuela\",\n  \"Marcela\",\n  \"Marcelo\",\n  \"Marcos\",\n  \"Margarida\",\n  \"Maria\",\n  \"Maria Alice\",\n  \"Maria Cecília\",\n  \"Maria Clara\",\n  \"Maria Eduarda\",\n  \"Maria Helena\",\n  \"Maria Júlia\",\n  \"Maria Luiza\",\n  \"Mariana\",\n  \"Marina\",\n  \"Marli\",\n  \"Matheus\",\n  \"Meire\",\n  \"Melissa\",\n  \"Miguel\",\n  \"Morgana\",\n  \"Murilo\",\n  \"Márcia\",\n  \"Mércia\",\n  \"Nataniel\",\n  \"Natália\",\n  \"Nicolas\",\n  \"Noah\",\n  \"Norberto\",\n  \"Núbia\",\n  \"Ofélia\",\n  \"Pablo\",\n  \"Paula\",\n  \"Paulo\",\n  \"Pedro\",\n  \"Pedro Henrique\",\n  \"Pietro\",\n  \"Rafael\",\n  \"Rafaela\",\n  \"Raul\",\n  \"Rebeca\",\n  \"Ricardo\",\n  \"Roberta\",\n  \"Roberto\",\n  \"Salvador\",\n  \"Samuel\",\n  \"Sara\",\n  \"Sarah\",\n  \"Silas\",\n  \"Sirineu\",\n  \"Sophia\",\n  \"Suélen\",\n  \"Sílvia\",\n  \"Talita\",\n  \"Tertuliano\",\n  \"Théo\",\n  \"Valentina\",\n  \"Vicente\",\n  \"Vitor\",\n  \"Vitória\",\n  \"Víctor\",\n  \"Warley\",\n  \"Washington\",\n  \"Yago\",\n  \"Yango\",\n  \"Yasmin\",\n  \"Yuri\",\n  \"Ígor\"\n];\n","module[\"exports\"] = [\n  \"Silva\",\n  \"Souza\",\n  \"Carvalho\",\n  \"Santos\",\n  \"Reis\",\n  \"Xavier\",\n  \"Franco\",\n  \"Braga\",\n  \"Macedo\",\n  \"Batista\",\n  \"Barros\",\n  \"Moraes\",\n  \"Costa\",\n  \"Pereira\",\n  \"Carvalho\",\n  \"Melo\",\n  \"Saraiva\",\n  \"Nogueira\",\n  \"Oliveira\",\n  \"Martins\",\n  \"Moreira\",\n  \"Albuquerque\"\n];\n","module[\"exports\"] = [\n  \"Sr.\",\n  \"Sra.\",\n  \"Srta.\",\n  \"Dr.\",\n  \"Dra.\"\n];\n","module[\"exports\"] = [\n  \"Jr.\",\n  \"Neto\",\n  \"Filho\"\n];\n","var name = {};\nmodule['exports'] = name;\nname.male_first_name = require(\"./male_first_name\");\nname.female_first_name = require(\"./female_first_name\");\nname.first_name = require(\"./first_name\");\nname.last_name = require(\"./last_name\");\nname.prefix = require(\"./prefix\");\nname.suffix = require(\"./suffix\");\n","module[\"exports\"] = [\n  \"(##) ####-####\",\n  \"+55 (##) ####-####\",\n  \"(##) #####-####\"\n];\n","var phone_number = {};\nmodule['exports'] = phone_number;\nphone_number.formats = require(\"./formats\");\n","// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799\nmodule[\"exports\"] = {\n  wide: [\n    \"Janeiro\",\n    \"Fevereiro\",\n    \"Março\",\n    \"Abril\",\n    \"Maio\",\n    \"Junho\",\n    \"Julho\",\n    \"Agosto\",\n    \"Setembro\",\n    \"Outubro\",\n    \"Novembro\",\n    \"Dezembro\"\n  ],\n  // Property \"wide_context\" is optional, if not set then \"wide\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  wide_context: [\n    \"Janeiro\",\n    \"Fevereiro\",\n    \"Março\",\n    \"Abril\",\n    \"Maio\",\n    \"Junho\",\n    \"Julho\",\n    \"Agosto\",\n    \"Setembro\",\n    \"Outubro\",\n    \"Novembro\",\n    \"Dezembro\"\n  ],\n  abbr: [\n    \"Jan\",\n    \"Fev\",\n    \"Mar\",\n    \"Abr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Ago\",\n    \"Set\",\n    \"Out\",\n    \"Nov\",\n    \"Dez\"\n  ],\n  // Property \"abbr_context\" is optional, if not set then \"abbr\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  abbr_context: [\n    \"Jan\",\n    \"Fev\",\n    \"Mar\",\n    \"Abr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Ago\",\n    \"Set\",\n    \"Out\",\n    \"Nov\",\n    \"Dez\"\n  ]\n};\n","// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847\nmodule[\"exports\"] = {\n  wide: [\n    \"Domingo\",\n    \"Segunda\",\n    \"Terça\",\n    \"Quarta\",\n    \"Quinta\",\n    \"Sexta\",\n    \"Sábado\"\n  ],\n  // Property \"wide_context\" is optional, if not set then \"wide\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  wide_context: [\n    \"Domingo\",\n    \"Segunda\",\n    \"Terça\",\n    \"Quarta\",\n    \"Quinta\",\n    \"Sexta\",\n    \"Sábado\"\n  ],\n  abbr: [\n    \"Dom\",\n    \"Seg\",\n    \"Ter\",\n    \"Qua\",\n    \"Qui\",\n    \"Sex\",\n    \"Sáb\"\n  ],\n  // Property \"abbr_context\" is optional, if not set then \"abbr\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  abbr_context: [\n    \"Dom\",\n    \"Seg\",\n    \"Ter\",\n    \"Qua\",\n    \"Qui\",\n    \"Sex\",\n    \"Sáb\"\n  ]\n};\n","var date = {};\nmodule[\"exports\"] = date;\ndate.month = require(\"./month\");\ndate.weekday = require(\"./weekday\");\n","var pt_BR = {};\nmodule['exports'] = pt_BR;\npt_BR.title = \"Portuguese (Brazil)\";\npt_BR.address = require(\"./address\");\npt_BR.company = require(\"./company\");\npt_BR.commerce = require(\"./commerce\");\npt_BR.internet = require(\"./internet\");\npt_BR.lorem = require(\"./lorem\");\npt_BR.name = require(\"./name\");\npt_BR.phone_number = require(\"./phone_number\");\npt_BR.date = require(\"./date\");\n","module[\"exports\"] = [\n  \"North\",\n  \"East\",\n  \"West\",\n  \"South\",\n  \"New\",\n  \"Lake\",\n  \"Port\"\n];\n","module[\"exports\"] = [\n  \"town\",\n  \"ton\",\n  \"land\",\n  \"ville\",\n  \"berg\",\n  \"burgh\",\n  \"borough\",\n  \"bury\",\n  \"view\",\n  \"port\",\n  \"mouth\",\n  \"stad\",\n  \"furt\",\n  \"chester\",\n  \"mouth\",\n  \"fort\",\n  \"haven\",\n  \"side\",\n  \"shire\"\n];\n","module[\"exports\"] = [\n  \"Avon\",\n  \"Bedfordshire\",\n  \"Berkshire\",\n  \"Borders\",\n  \"Buckinghamshire\",\n  \"Cambridgeshire\"\n];\n","module[\"exports\"] = [\n  \"Afghanistan\",\n  \"Albania\",\n  \"Algeria\",\n  \"American Samoa\",\n  \"Andorra\",\n  \"Angola\",\n  \"Anguilla\",\n  \"Antarctica (the territory South of 60 deg S)\",\n  \"Antigua and Barbuda\",\n  \"Argentina\",\n  \"Armenia\",\n  \"Aruba\",\n  \"Australia\",\n  \"Austria\",\n  \"Azerbaijan\",\n  \"Bahamas\",\n  \"Bahrain\",\n  \"Bangladesh\",\n  \"Barbados\",\n  \"Belarus\",\n  \"Belgium\",\n  \"Belize\",\n  \"Benin\",\n  \"Bermuda\",\n  \"Bhutan\",\n  \"Bolivia\",\n  \"Bosnia and Herzegovina\",\n  \"Botswana\",\n  \"Bouvet Island (Bouvetoya)\",\n  \"Brazil\",\n  \"British Indian Ocean Territory (Chagos Archipelago)\",\n  \"Brunei Darussalam\",\n  \"Bulgaria\",\n  \"Burkina Faso\",\n  \"Burundi\",\n  \"Cambodia\",\n  \"Cameroon\",\n  \"Canada\",\n  \"Cape Verde\",\n  \"Cayman Islands\",\n  \"Central African Republic\",\n  \"Chad\",\n  \"Chile\",\n  \"China\",\n  \"Christmas Island\",\n  \"Cocos (Keeling) Islands\",\n  \"Colombia\",\n  \"Comoros\",\n  \"Congo\",\n  \"Cook Islands\",\n  \"Costa Rica\",\n  \"Cote d'Ivoire\",\n  \"Croatia\",\n  \"Cuba\",\n  \"Cyprus\",\n  \"Czech Republic\",\n  \"Denmark\",\n  \"Djibouti\",\n  \"Dominica\",\n  \"Dominican Republic\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"El Salvador\",\n  \"Equatorial Guinea\",\n  \"Eritrea\",\n  \"Estonia\",\n  \"Ethiopia\",\n  \"Faroe Islands\",\n  \"Falkland Islands (Malvinas)\",\n  \"Fiji\",\n  \"Finland\",\n  \"France\",\n  \"French Guiana\",\n  \"French Polynesia\",\n  \"French Southern Territories\",\n  \"Gabon\",\n  \"Gambia\",\n  \"Georgia\",\n  \"Germany\",\n  \"Ghana\",\n  \"Gibraltar\",\n  \"Greece\",\n  \"Greenland\",\n  \"Grenada\",\n  \"Guadeloupe\",\n  \"Guam\",\n  \"Guatemala\",\n  \"Guernsey\",\n  \"Guinea\",\n  \"Guinea-Bissau\",\n  \"Guyana\",\n  \"Haiti\",\n  \"Heard Island and McDonald Islands\",\n  \"Holy See (Vatican City State)\",\n  \"Honduras\",\n  \"Hong Kong\",\n  \"Hungary\",\n  \"Iceland\",\n  \"India\",\n  \"Indonesia\",\n  \"Iran\",\n  \"Iraq\",\n  \"Ireland\",\n  \"Isle of Man\",\n  \"Israel\",\n  \"Italy\",\n  \"Jamaica\",\n  \"Japan\",\n  \"Jersey\",\n  \"Jordan\",\n  \"Kazakhstan\",\n  \"Kenya\",\n  \"Kiribati\",\n  \"Democratic People's Republic of Korea\",\n  \"Republic of Korea\",\n  \"Kuwait\",\n  \"Kyrgyz Republic\",\n  \"Lao People's Democratic Republic\",\n  \"Latvia\",\n  \"Lebanon\",\n  \"Lesotho\",\n  \"Liberia\",\n  \"Libyan Arab Jamahiriya\",\n  \"Liechtenstein\",\n  \"Lithuania\",\n  \"Luxembourg\",\n  \"Macao\",\n  \"Macedonia\",\n  \"Madagascar\",\n  \"Malawi\",\n  \"Malaysia\",\n  \"Maldives\",\n  \"Mali\",\n  \"Malta\",\n  \"Marshall Islands\",\n  \"Martinique\",\n  \"Mauritania\",\n  \"Mauritius\",\n  \"Mayotte\",\n  \"Mexico\",\n  \"Micronesia\",\n  \"Moldova\",\n  \"Monaco\",\n  \"Mongolia\",\n  \"Montenegro\",\n  \"Montserrat\",\n  \"Morocco\",\n  \"Mozambique\",\n  \"Myanmar\",\n  \"Namibia\",\n  \"Nauru\",\n  \"Nepal\",\n  \"Netherlands Antilles\",\n  \"Netherlands\",\n  \"New Caledonia\",\n  \"New Zealand\",\n  \"Nicaragua\",\n  \"Niger\",\n  \"Nigeria\",\n  \"Niue\",\n  \"Norfolk Island\",\n  \"Northern Mariana Islands\",\n  \"Norway\",\n  \"Oman\",\n  \"Pakistan\",\n  \"Palau\",\n  \"Palestinian Territory\",\n  \"Panama\",\n  \"Papua New Guinea\",\n  \"Paraguay\",\n  \"Peru\",\n  \"Philippines\",\n  \"Pitcairn Islands\",\n  \"Poland\",\n  \"Portugal\",\n  \"Puerto Rico\",\n  \"Qatar\",\n  \"Reunion\",\n  \"Romania\",\n  \"Russian Federation\",\n  \"Rwanda\",\n  \"Saint Barthelemy\",\n  \"Saint Helena\",\n  \"Saint Kitts and Nevis\",\n  \"Saint Lucia\",\n  \"Saint Martin\",\n  \"Saint Pierre and Miquelon\",\n  \"Saint Vincent and the Grenadines\",\n  \"Samoa\",\n  \"San Marino\",\n  \"Sao Tome and Principe\",\n  \"Saudi Arabia\",\n  \"Senegal\",\n  \"Serbia\",\n  \"Seychelles\",\n  \"Sierra Leone\",\n  \"Singapore\",\n  \"Slovakia (Slovak Republic)\",\n  \"Slovenia\",\n  \"Solomon Islands\",\n  \"Somalia\",\n  \"South Africa\",\n  \"South Georgia and the South Sandwich Islands\",\n  \"Spain\",\n  \"Sri Lanka\",\n  \"Sudan\",\n  \"Suriname\",\n  \"Svalbard & Jan Mayen Islands\",\n  \"Swaziland\",\n  \"Sweden\",\n  \"Switzerland\",\n  \"Syrian Arab Republic\",\n  \"Taiwan\",\n  \"Tajikistan\",\n  \"Tanzania\",\n  \"Thailand\",\n  \"Timor-Leste\",\n  \"Togo\",\n  \"Tokelau\",\n  \"Tonga\",\n  \"Trinidad and Tobago\",\n  \"Tunisia\",\n  \"Turkey\",\n  \"Turkmenistan\",\n  \"Turks and Caicos Islands\",\n  \"Tuvalu\",\n  \"Uganda\",\n  \"Ukraine\",\n  \"United Arab Emirates\",\n  \"United Kingdom\",\n  \"United States of America\",\n  \"United States Minor Outlying Islands\",\n  \"Uruguay\",\n  \"Uzbekistan\",\n  \"Vanuatu\",\n  \"Venezuela\",\n  \"Vietnam\",\n  \"Virgin Islands, British\",\n  \"Virgin Islands, U.S.\",\n  \"Wallis and Futuna\",\n  \"Western Sahara\",\n  \"Yemen\",\n  \"Zambia\",\n  \"Zimbabwe\"\n];\n","module[\"exports\"] = [\n  \"AD\",\n  \"AE\",\n  \"AF\",\n  \"AG\",\n  \"AI\",\n  \"AL\",\n  \"AM\",\n  \"AO\",\n  \"AQ\",\n  \"AR\",\n  \"AS\",\n  \"AT\",\n  \"AU\",\n  \"AW\",\n  \"AX\",\n  \"AZ\",\n  \"BA\",\n  \"BB\",\n  \"BD\",\n  \"BE\",\n  \"BF\",\n  \"BG\",\n  \"BH\",\n  \"BI\",\n  \"BJ\",\n  \"BL\",\n  \"BM\",\n  \"BN\",\n  \"BO\",\n  \"BQ\",\n  \"BR\",\n  \"BS\",\n  \"BT\",\n  \"BV\",\n  \"BW\",\n  \"BY\",\n  \"BZ\",\n  \"CA\",\n  \"CC\",\n  \"CD\",\n  \"CF\",\n  \"CG\",\n  \"CH\",\n  \"CI\",\n  \"CK\",\n  \"CL\",\n  \"CM\",\n  \"CN\",\n  \"CO\",\n  \"CR\",\n  \"CU\",\n  \"CV\",\n  \"CW\",\n  \"CX\",\n  \"CY\",\n  \"CZ\",\n  \"DE\",\n  \"DJ\",\n  \"DK\",\n  \"DM\",\n  \"DO\",\n  \"DZ\",\n  \"EC\",\n  \"EE\",\n  \"EG\",\n  \"EH\",\n  \"ER\",\n  \"ES\",\n  \"ET\",\n  \"FI\",\n  \"FJ\",\n  \"FK\",\n  \"FM\",\n  \"FO\",\n  \"FR\",\n  \"GA\",\n  \"GB\",\n  \"GD\",\n  \"GE\",\n  \"GF\",\n  \"GG\",\n  \"GH\",\n  \"GI\",\n  \"GL\",\n  \"GM\",\n  \"GN\",\n  \"GP\",\n  \"GQ\",\n  \"GR\",\n  \"GS\",\n  \"GT\",\n  \"GU\",\n  \"GW\",\n  \"GY\",\n  \"HK\",\n  \"HM\",\n  \"HN\",\n  \"HR\",\n  \"HT\",\n  \"HU\",\n  \"ID\",\n  \"IE\",\n  \"IL\",\n  \"IM\",\n  \"IN\",\n  \"IO\",\n  \"IQ\",\n  \"IR\",\n  \"IS\",\n  \"IT\",\n  \"JE\",\n  \"JM\",\n  \"JO\",\n  \"JP\",\n  \"KE\",\n  \"KG\",\n  \"KH\",\n  \"KI\",\n  \"KM\",\n  \"KN\",\n  \"KP\",\n  \"KR\",\n  \"KW\",\n  \"KY\",\n  \"KZ\",\n  \"LA\",\n  \"LB\",\n  \"LC\",\n  \"LI\",\n  \"LK\",\n  \"LR\",\n  \"LS\",\n  \"LT\",\n  \"LU\",\n  \"LV\",\n  \"LY\",\n  \"MA\",\n  \"MC\",\n  \"MD\",\n  \"ME\",\n  \"MF\",\n  \"MG\",\n  \"MH\",\n  \"MK\",\n  \"ML\",\n  \"MM\",\n  \"MN\",\n  \"MO\",\n  \"MP\",\n  \"MQ\",\n  \"MR\",\n  \"MS\",\n  \"MT\",\n  \"MU\",\n  \"MV\",\n  \"MW\",\n  \"MX\",\n  \"MY\",\n  \"MZ\",\n  \"NA\",\n  \"NC\",\n  \"NE\",\n  \"NF\",\n  \"NG\",\n  \"NI\",\n  \"NL\",\n  \"NO\",\n  \"NP\",\n  \"NR\",\n  \"NU\",\n  \"NZ\",\n  \"OM\",\n  \"PA\",\n  \"PE\",\n  \"PF\",\n  \"PG\",\n  \"PH\",\n  \"PK\",\n  \"PL\",\n  \"PM\",\n  \"PN\",\n  \"PR\",\n  \"PS\",\n  \"PT\",\n  \"PW\",\n  \"PY\",\n  \"QA\",\n  \"RE\",\n  \"RO\",\n  \"RS\",\n  \"RU\",\n  \"RW\",\n  \"SA\",\n  \"SB\",\n  \"SC\",\n  \"SD\",\n  \"SE\",\n  \"SG\",\n  \"SH\",\n  \"SI\",\n  \"SJ\",\n  \"SK\",\n  \"SL\",\n  \"SM\",\n  \"SN\",\n  \"SO\",\n  \"SR\",\n  \"SS\",\n  \"ST\",\n  \"SV\",\n  \"SX\",\n  \"SY\",\n  \"SZ\",\n  \"TC\",\n  \"TD\",\n  \"TF\",\n  \"TG\",\n  \"TH\",\n  \"TJ\",\n  \"TK\",\n  \"TL\",\n  \"TM\",\n  \"TN\",\n  \"TO\",\n  \"TR\",\n  \"TT\",\n  \"TV\",\n  \"TW\",\n  \"TZ\",\n  \"UA\",\n  \"UG\",\n  \"UM\",\n  \"US\",\n  \"UY\",\n  \"UZ\",\n  \"VA\",\n  \"VC\",\n  \"VE\",\n  \"VG\",\n  \"VI\",\n  \"VN\",\n  \"VU\",\n  \"WF\",\n  \"WS\",\n  \"YE\",\n  \"YT\",\n  \"ZA\",\n  \"ZM\",\n  \"ZW\"\n];\n","module[\"exports\"] = [\n    \"BGD\",\n    \"BEL\",\n    \"BFA\",\n    \"BGR\",\n    \"BIH\",\n    \"BRB\",\n    \"WLF\",\n    \"BLM\",\n    \"BMU\",\n    \"BRN\",\n    \"BOL\",\n    \"BHR\",\n    \"BDI\",\n    \"BEN\",\n    \"BTN\",\n    \"JAM\",\n    \"BVT\",\n    \"BWA\",\n    \"WSM\",\n    \"BES\",\n    \"BRA\",\n    \"BHS\",\n    \"JEY\",\n    \"BLR\",\n    \"BLZ\",\n    \"RUS\",\n    \"RWA\",\n    \"SRB\",\n    \"TLS\",\n    \"REU\",\n    \"TKM\",\n    \"TJK\",\n    \"ROU\",\n    \"TKL\",\n    \"GNB\",\n    \"GUM\",\n    \"GTM\",\n    \"SGS\",\n    \"GRC\",\n    \"GNQ\",\n    \"GLP\",\n    \"JPN\",\n    \"GUY\",\n    \"GGY\",\n    \"GUF\",\n    \"GEO\",\n    \"GRD\",\n    \"GBR\",\n    \"GAB\",\n    \"SLV\",\n    \"GIN\",\n    \"GMB\",\n    \"GRL\",\n    \"GIB\",\n    \"GHA\",\n    \"OMN\",\n    \"TUN\",\n    \"JOR\",\n    \"HRV\",\n    \"HTI\",\n    \"HUN\",\n    \"HKG\",\n    \"HND\",\n    \"HMD\",\n    \"VEN\",\n    \"PRI\",\n    \"PSE\",\n    \"PLW\",\n    \"PRT\",\n    \"SJM\",\n    \"PRY\",\n    \"IRQ\",\n    \"PAN\",\n    \"PYF\",\n    \"PNG\",\n    \"PER\",\n    \"PAK\",\n    \"PHL\",\n    \"PCN\",\n    \"POL\",\n    \"SPM\",\n    \"ZMB\",\n    \"ESH\",\n    \"EST\",\n    \"EGY\",\n    \"ZAF\",\n    \"ECU\",\n    \"ITA\",\n    \"VNM\",\n    \"SLB\",\n    \"ETH\",\n    \"SOM\",\n    \"ZWE\",\n    \"SAU\",\n    \"ESP\",\n    \"ERI\",\n    \"MNE\",\n    \"MDA\",\n    \"MDG\",\n    \"MAF\",\n    \"MAR\",\n    \"MCO\",\n    \"UZB\",\n    \"MMR\",\n    \"MLI\",\n    \"MAC\",\n    \"MNG\",\n    \"MHL\",\n    \"MKD\",\n    \"MUS\",\n    \"MLT\",\n    \"MWI\",\n    \"MDV\",\n    \"MTQ\",\n    \"MNP\",\n    \"MSR\",\n    \"MRT\",\n    \"IMN\",\n    \"UGA\",\n    \"TZA\",\n    \"MYS\",\n    \"MEX\",\n    \"ISR\",\n    \"FRA\",\n    \"IOT\",\n    \"SHN\",\n    \"FIN\",\n    \"FJI\",\n    \"FLK\",\n    \"FSM\",\n    \"FRO\",\n    \"NIC\",\n    \"NLD\",\n    \"NOR\",\n    \"NAM\",\n    \"VUT\",\n    \"NCL\",\n    \"NER\",\n    \"NFK\",\n    \"NGA\",\n    \"NZL\",\n    \"NPL\",\n    \"NRU\",\n    \"NIU\",\n    \"COK\",\n    \"XKX\",\n    \"CIV\",\n    \"CHE\",\n    \"COL\",\n    \"CHN\",\n    \"CMR\",\n    \"CHL\",\n    \"CCK\",\n    \"CAN\",\n    \"COG\",\n    \"CAF\",\n    \"COD\",\n    \"CZE\",\n    \"CYP\",\n    \"CXR\",\n    \"CRI\",\n    \"CUW\",\n    \"CPV\",\n    \"CUB\",\n    \"SWZ\",\n    \"SYR\",\n    \"SXM\",\n    \"KGZ\",\n    \"KEN\",\n    \"SSD\",\n    \"SUR\",\n    \"KIR\",\n    \"KHM\",\n    \"KNA\",\n    \"COM\",\n    \"STP\",\n    \"SVK\",\n    \"KOR\",\n    \"SVN\",\n    \"PRK\",\n    \"KWT\",\n    \"SEN\",\n    \"SMR\",\n    \"SLE\",\n    \"SYC\",\n    \"KAZ\",\n    \"CYM\",\n    \"SGP\",\n    \"SWE\",\n    \"SDN\",\n    \"DOM\",\n    \"DMA\",\n    \"DJI\",\n    \"DNK\",\n    \"VGB\",\n    \"DEU\",\n    \"YEM\",\n    \"DZA\",\n    \"USA\",\n    \"URY\",\n    \"MYT\",\n    \"UMI\",\n    \"LBN\",\n    \"LCA\",\n    \"LAO\",\n    \"TUV\",\n    \"TWN\",\n    \"TTO\",\n    \"TUR\",\n    \"LKA\",\n    \"LIE\",\n    \"LVA\",\n    \"TON\",\n    \"LTU\",\n    \"LUX\",\n    \"LBR\",\n    \"LSO\",\n    \"THA\",\n    \"ATF\",\n    \"TGO\",\n    \"TCD\",\n    \"TCA\",\n    \"LBY\",\n    \"VAT\",\n    \"VCT\",\n    \"ARE\",\n    \"AND\",\n    \"ATG\",\n    \"AFG\",\n    \"AIA\",\n    \"VIR\",\n    \"ISL\",\n    \"IRN\",\n    \"ARM\",\n    \"ALB\",\n    \"AGO\",\n    \"ATA\",\n    \"ASM\",\n    \"ARG\",\n    \"AUS\",\n    \"AUT\",\n    \"ABW\",\n    \"IND\",\n    \"ALA\",\n    \"AZE\",\n    \"IRL\",\n    \"IDN\",\n    \"UKR\",\n    \"QAT\",\n    \"MOZ\"\n];","module[\"exports\"] = [\n  \"#####\",\n  \"####\",\n  \"###\"\n];\n","module[\"exports\"] = [\n  \"Alley\",\n  \"Avenue\",\n  \"Branch\",\n  \"Bridge\",\n  \"Brook\",\n  \"Brooks\",\n  \"Burg\",\n  \"Burgs\",\n  \"Bypass\",\n  \"Camp\",\n  \"Canyon\",\n  \"Cape\",\n  \"Causeway\",\n  \"Center\",\n  \"Centers\",\n  \"Circle\",\n  \"Circles\",\n  \"Cliff\",\n  \"Cliffs\",\n  \"Club\",\n  \"Common\",\n  \"Corner\",\n  \"Corners\",\n  \"Course\",\n  \"Court\",\n  \"Courts\",\n  \"Cove\",\n  \"Coves\",\n  \"Creek\",\n  \"Crescent\",\n  \"Crest\",\n  \"Crossing\",\n  \"Crossroad\",\n  \"Curve\",\n  \"Dale\",\n  \"Dam\",\n  \"Divide\",\n  \"Drive\",\n  \"Drive\",\n  \"Drives\",\n  \"Estate\",\n  \"Estates\",\n  \"Expressway\",\n  \"Extension\",\n  \"Extensions\",\n  \"Fall\",\n  \"Falls\",\n  \"Ferry\",\n  \"Field\",\n  \"Fields\",\n  \"Flat\",\n  \"Flats\",\n  \"Ford\",\n  \"Fords\",\n  \"Forest\",\n  \"Forge\",\n  \"Forges\",\n  \"Fork\",\n  \"Forks\",\n  \"Fort\",\n  \"Freeway\",\n  \"Garden\",\n  \"Gardens\",\n  \"Gateway\",\n  \"Glen\",\n  \"Glens\",\n  \"Green\",\n  \"Greens\",\n  \"Grove\",\n  \"Groves\",\n  \"Harbor\",\n  \"Harbors\",\n  \"Haven\",\n  \"Heights\",\n  \"Highway\",\n  \"Hill\",\n  \"Hills\",\n  \"Hollow\",\n  \"Inlet\",\n  \"Inlet\",\n  \"Island\",\n  \"Island\",\n  \"Islands\",\n  \"Islands\",\n  \"Isle\",\n  \"Isle\",\n  \"Junction\",\n  \"Junctions\",\n  \"Key\",\n  \"Keys\",\n  \"Knoll\",\n  \"Knolls\",\n  \"Lake\",\n  \"Lakes\",\n  \"Land\",\n  \"Landing\",\n  \"Lane\",\n  \"Light\",\n  \"Lights\",\n  \"Loaf\",\n  \"Lock\",\n  \"Locks\",\n  \"Locks\",\n  \"Lodge\",\n  \"Lodge\",\n  \"Loop\",\n  \"Mall\",\n  \"Manor\",\n  \"Manors\",\n  \"Meadow\",\n  \"Meadows\",\n  \"Mews\",\n  \"Mill\",\n  \"Mills\",\n  \"Mission\",\n  \"Mission\",\n  \"Motorway\",\n  \"Mount\",\n  \"Mountain\",\n  \"Mountain\",\n  \"Mountains\",\n  \"Mountains\",\n  \"Neck\",\n  \"Orchard\",\n  \"Oval\",\n  \"Overpass\",\n  \"Park\",\n  \"Parks\",\n  \"Parkway\",\n  \"Parkways\",\n  \"Pass\",\n  \"Passage\",\n  \"Path\",\n  \"Pike\",\n  \"Pine\",\n  \"Pines\",\n  \"Place\",\n  \"Plain\",\n  \"Plains\",\n  \"Plains\",\n  \"Plaza\",\n  \"Plaza\",\n  \"Point\",\n  \"Points\",\n  \"Port\",\n  \"Port\",\n  \"Ports\",\n  \"Ports\",\n  \"Prairie\",\n  \"Prairie\",\n  \"Radial\",\n  \"Ramp\",\n  \"Ranch\",\n  \"Rapid\",\n  \"Rapids\",\n  \"Rest\",\n  \"Ridge\",\n  \"Ridges\",\n  \"River\",\n  \"Road\",\n  \"Road\",\n  \"Roads\",\n  \"Roads\",\n  \"Route\",\n  \"Row\",\n  \"Rue\",\n  \"Run\",\n  \"Shoal\",\n  \"Shoals\",\n  \"Shore\",\n  \"Shores\",\n  \"Skyway\",\n  \"Spring\",\n  \"Springs\",\n  \"Springs\",\n  \"Spur\",\n  \"Spurs\",\n  \"Square\",\n  \"Square\",\n  \"Squares\",\n  \"Squares\",\n  \"Station\",\n  \"Station\",\n  \"Stravenue\",\n  \"Stravenue\",\n  \"Stream\",\n  \"Stream\",\n  \"Street\",\n  \"Street\",\n  \"Streets\",\n  \"Summit\",\n  \"Summit\",\n  \"Terrace\",\n  \"Throughway\",\n  \"Trace\",\n  \"Track\",\n  \"Trafficway\",\n  \"Trail\",\n  \"Trail\",\n  \"Tunnel\",\n  \"Tunnel\",\n  \"Turnpike\",\n  \"Turnpike\",\n  \"Underpass\",\n  \"Union\",\n  \"Unions\",\n  \"Valley\",\n  \"Valleys\",\n  \"Via\",\n  \"Viaduct\",\n  \"View\",\n  \"Views\",\n  \"Village\",\n  \"Village\",\n  \"Villages\",\n  \"Ville\",\n  \"Vista\",\n  \"Vista\",\n  \"Walk\",\n  \"Walks\",\n  \"Wall\",\n  \"Way\",\n  \"Ways\",\n  \"Well\",\n  \"Wells\"\n];\n","module[\"exports\"] = [\n  \"Apt. ###\",\n  \"Suite ###\"\n];\n","module[\"exports\"] = [\n  \"#####\",\n  \"#####-####\"\n];\n","module[\"exports\"] = [\n  \"#####\",\n  \"#####-####\"\n];\n","module[\"exports\"] = [\n  \"Alabama\",\n  \"Alaska\",\n  \"Arizona\",\n  \"Arkansas\",\n  \"California\",\n  \"Colorado\",\n  \"Connecticut\",\n  \"Delaware\",\n  \"Florida\",\n  \"Georgia\",\n  \"Hawaii\",\n  \"Idaho\",\n  \"Illinois\",\n  \"Indiana\",\n  \"Iowa\",\n  \"Kansas\",\n  \"Kentucky\",\n  \"Louisiana\",\n  \"Maine\",\n  \"Maryland\",\n  \"Massachusetts\",\n  \"Michigan\",\n  \"Minnesota\",\n  \"Mississippi\",\n  \"Missouri\",\n  \"Montana\",\n  \"Nebraska\",\n  \"Nevada\",\n  \"New Hampshire\",\n  \"New Jersey\",\n  \"New Mexico\",\n  \"New York\",\n  \"North Carolina\",\n  \"North Dakota\",\n  \"Ohio\",\n  \"Oklahoma\",\n  \"Oregon\",\n  \"Pennsylvania\",\n  \"Rhode Island\",\n  \"South Carolina\",\n  \"South Dakota\",\n  \"Tennessee\",\n  \"Texas\",\n  \"Utah\",\n  \"Vermont\",\n  \"Virginia\",\n  \"Washington\",\n  \"West Virginia\",\n  \"Wisconsin\",\n  \"Wyoming\"\n];\n","module[\"exports\"] = [\n  \"AL\",\n  \"AK\",\n  \"AZ\",\n  \"AR\",\n  \"CA\",\n  \"CO\",\n  \"CT\",\n  \"DE\",\n  \"FL\",\n  \"GA\",\n  \"HI\",\n  \"ID\",\n  \"IL\",\n  \"IN\",\n  \"IA\",\n  \"KS\",\n  \"KY\",\n  \"LA\",\n  \"ME\",\n  \"MD\",\n  \"MA\",\n  \"MI\",\n  \"MN\",\n  \"MS\",\n  \"MO\",\n  \"MT\",\n  \"NE\",\n  \"NV\",\n  \"NH\",\n  \"NJ\",\n  \"NM\",\n  \"NY\",\n  \"NC\",\n  \"ND\",\n  \"OH\",\n  \"OK\",\n  \"OR\",\n  \"PA\",\n  \"RI\",\n  \"SC\",\n  \"SD\",\n  \"TN\",\n  \"TX\",\n  \"UT\",\n  \"VT\",\n  \"VA\",\n  \"WA\",\n  \"WV\",\n  \"WI\",\n  \"WY\"\n];\n","module[\"exports\"] = [\n  \"Pacific/Midway\",\n  \"Pacific/Pago_Pago\",\n  \"Pacific/Honolulu\",\n  \"America/Juneau\",\n  \"America/Los_Angeles\",\n  \"America/Tijuana\",\n  \"America/Denver\",\n  \"America/Phoenix\",\n  \"America/Chihuahua\",\n  \"America/Mazatlan\",\n  \"America/Chicago\",\n  \"America/Regina\",\n  \"America/Mexico_City\",\n  \"America/Mexico_City\",\n  \"America/Monterrey\",\n  \"America/Guatemala\",\n  \"America/New_York\",\n  \"America/Indiana/Indianapolis\",\n  \"America/Bogota\",\n  \"America/Lima\",\n  \"America/Lima\",\n  \"America/Halifax\",\n  \"America/Caracas\",\n  \"America/La_Paz\",\n  \"America/Santiago\",\n  \"America/St_Johns\",\n  \"America/Sao_Paulo\",\n  \"America/Argentina/Buenos_Aires\",\n  \"America/Guyana\",\n  \"America/Godthab\",\n  \"Atlantic/South_Georgia\",\n  \"Atlantic/Azores\",\n  \"Atlantic/Cape_Verde\",\n  \"Europe/Dublin\",\n  \"Europe/London\",\n  \"Europe/Lisbon\",\n  \"Europe/London\",\n  \"Africa/Casablanca\",\n  \"Africa/Monrovia\",\n  \"Etc/UTC\",\n  \"Europe/Belgrade\",\n  \"Europe/Bratislava\",\n  \"Europe/Budapest\",\n  \"Europe/Ljubljana\",\n  \"Europe/Prague\",\n  \"Europe/Sarajevo\",\n  \"Europe/Skopje\",\n  \"Europe/Warsaw\",\n  \"Europe/Zagreb\",\n  \"Europe/Brussels\",\n  \"Europe/Copenhagen\",\n  \"Europe/Madrid\",\n  \"Europe/Paris\",\n  \"Europe/Amsterdam\",\n  \"Europe/Berlin\",\n  \"Europe/Berlin\",\n  \"Europe/Rome\",\n  \"Europe/Stockholm\",\n  \"Europe/Vienna\",\n  \"Africa/Algiers\",\n  \"Europe/Bucharest\",\n  \"Africa/Cairo\",\n  \"Europe/Helsinki\",\n  \"Europe/Kiev\",\n  \"Europe/Riga\",\n  \"Europe/Sofia\",\n  \"Europe/Tallinn\",\n  \"Europe/Vilnius\",\n  \"Europe/Athens\",\n  \"Europe/Istanbul\",\n  \"Europe/Minsk\",\n  \"Asia/Jerusalem\",\n  \"Africa/Harare\",\n  \"Africa/Johannesburg\",\n  \"Europe/Moscow\",\n  \"Europe/Moscow\",\n  \"Europe/Moscow\",\n  \"Asia/Kuwait\",\n  \"Asia/Riyadh\",\n  \"Africa/Nairobi\",\n  \"Asia/Baghdad\",\n  \"Asia/Tehran\",\n  \"Asia/Muscat\",\n  \"Asia/Muscat\",\n  \"Asia/Baku\",\n  \"Asia/Tbilisi\",\n  \"Asia/Yerevan\",\n  \"Asia/Kabul\",\n  \"Asia/Yekaterinburg\",\n  \"Asia/Karachi\",\n  \"Asia/Karachi\",\n  \"Asia/Tashkent\",\n  \"Asia/Kolkata\",\n  \"Asia/Kolkata\",\n  \"Asia/Kolkata\",\n  \"Asia/Kolkata\",\n  \"Asia/Kathmandu\",\n  \"Asia/Dhaka\",\n  \"Asia/Dhaka\",\n  \"Asia/Colombo\",\n  \"Asia/Almaty\",\n  \"Asia/Novosibirsk\",\n  \"Asia/Rangoon\",\n  \"Asia/Bangkok\",\n  \"Asia/Bangkok\",\n  \"Asia/Jakarta\",\n  \"Asia/Krasnoyarsk\",\n  \"Asia/Shanghai\",\n  \"Asia/Chongqing\",\n  \"Asia/Hong_Kong\",\n  \"Asia/Urumqi\",\n  \"Asia/Kuala_Lumpur\",\n  \"Asia/Singapore\",\n  \"Asia/Taipei\",\n  \"Australia/Perth\",\n  \"Asia/Irkutsk\",\n  \"Asia/Ulaanbaatar\",\n  \"Asia/Seoul\",\n  \"Asia/Tokyo\",\n  \"Asia/Tokyo\",\n  \"Asia/Tokyo\",\n  \"Asia/Yakutsk\",\n  \"Australia/Darwin\",\n  \"Australia/Adelaide\",\n  \"Australia/Melbourne\",\n  \"Australia/Melbourne\",\n  \"Australia/Sydney\",\n  \"Australia/Brisbane\",\n  \"Australia/Hobart\",\n  \"Asia/Vladivostok\",\n  \"Pacific/Guam\",\n  \"Pacific/Port_Moresby\",\n  \"Asia/Magadan\",\n  \"Asia/Magadan\",\n  \"Pacific/Noumea\",\n  \"Pacific/Fiji\",\n  \"Asia/Kamchatka\",\n  \"Pacific/Majuro\",\n  \"Pacific/Auckland\",\n  \"Pacific/Auckland\",\n  \"Pacific/Tongatapu\",\n  \"Pacific/Fakaofo\",\n  \"Pacific/Apia\"\n];\n","module[\"exports\"] = [\n  \"#{city_prefix} #{Name.first_name}#{city_suffix}\",\n  \"#{city_prefix} #{Name.first_name}\",\n  \"#{Name.first_name}#{city_suffix}\",\n  \"#{Name.last_name}#{city_suffix}\"\n];\n","module[\"exports\"] = [\n  \"#{Name.first_name} #{street_suffix}\",\n  \"#{Name.last_name} #{street_suffix}\"\n];\n","module[\"exports\"] = [\n  \"#{building_number} #{street_name}\"\n];\n","module[\"exports\"] = [\n  \"United States of America\"\n];\n","module[\"exports\"] = [\n  \"North\",\n  \"East\",\n  \"South\",\n  \"West\",\n  \"Northeast\",\n  \"Northwest\",\n  \"Southeast\",\n  \"Southwest\"\n];\n","module[\"exports\"] = [\n  \"N\",\n  \"E\",\n  \"S\",\n  \"W\",\n  \"NE\",\n  \"NW\",\n  \"SE\",\n  \"SW\"\n];\n","var address = {};\nmodule['exports'] = address;\naddress.city_prefix = require(\"./city_prefix\");\naddress.city_suffix = require(\"./city_suffix\");\naddress.county = require(\"./county\");\naddress.country = require(\"./country\");\naddress.country_code = require(\"./country_code\");\naddress.country_code_alpha_3 = require(\"./country_code_alpha_3\");\naddress.building_number = require(\"./building_number\");\naddress.street_suffix = require(\"./street_suffix\");\naddress.secondary_address = require(\"./secondary_address\");\naddress.postcode = require(\"./postcode\");\naddress.postcode_by_state = require(\"./postcode_by_state\");\naddress.state = require(\"./state\");\naddress.state_abbr = require(\"./state_abbr\");\naddress.time_zone = require(\"./time_zone\");\naddress.city = require(\"./city\");\naddress.street_name = require(\"./street_name\");\naddress.street_address = require(\"./street_address\");\naddress.default_country = require(\"./default_country\");\naddress.direction = require(\"./direction\");\naddress.direction_abbr = require(\"./direction_abbr\");\n","module[\"exports\"] = [\n  \"Inc\",\n  \"and Sons\",\n  \"LLC\",\n  \"Group\"\n];\n","module[\"exports\"] = [\n  \"Adaptive\",\n  \"Advanced\",\n  \"Ameliorated\",\n  \"Assimilated\",\n  \"Automated\",\n  \"Balanced\",\n  \"Business-focused\",\n  \"Centralized\",\n  \"Cloned\",\n  \"Compatible\",\n  \"Configurable\",\n  \"Cross-group\",\n  \"Cross-platform\",\n  \"Customer-focused\",\n  \"Customizable\",\n  \"Decentralized\",\n  \"De-engineered\",\n  \"Devolved\",\n  \"Digitized\",\n  \"Distributed\",\n  \"Diverse\",\n  \"Down-sized\",\n  \"Enhanced\",\n  \"Enterprise-wide\",\n  \"Ergonomic\",\n  \"Exclusive\",\n  \"Expanded\",\n  \"Extended\",\n  \"Face to face\",\n  \"Focused\",\n  \"Front-line\",\n  \"Fully-configurable\",\n  \"Function-based\",\n  \"Fundamental\",\n  \"Future-proofed\",\n  \"Grass-roots\",\n  \"Horizontal\",\n  \"Implemented\",\n  \"Innovative\",\n  \"Integrated\",\n  \"Intuitive\",\n  \"Inverse\",\n  \"Managed\",\n  \"Mandatory\",\n  \"Monitored\",\n  \"Multi-channelled\",\n  \"Multi-lateral\",\n  \"Multi-layered\",\n  \"Multi-tiered\",\n  \"Networked\",\n  \"Object-based\",\n  \"Open-architected\",\n  \"Open-source\",\n  \"Operative\",\n  \"Optimized\",\n  \"Optional\",\n  \"Organic\",\n  \"Organized\",\n  \"Persevering\",\n  \"Persistent\",\n  \"Phased\",\n  \"Polarised\",\n  \"Pre-emptive\",\n  \"Proactive\",\n  \"Profit-focused\",\n  \"Profound\",\n  \"Programmable\",\n  \"Progressive\",\n  \"Public-key\",\n  \"Quality-focused\",\n  \"Reactive\",\n  \"Realigned\",\n  \"Re-contextualized\",\n  \"Re-engineered\",\n  \"Reduced\",\n  \"Reverse-engineered\",\n  \"Right-sized\",\n  \"Robust\",\n  \"Seamless\",\n  \"Secured\",\n  \"Self-enabling\",\n  \"Sharable\",\n  \"Stand-alone\",\n  \"Streamlined\",\n  \"Switchable\",\n  \"Synchronised\",\n  \"Synergistic\",\n  \"Synergized\",\n  \"Team-oriented\",\n  \"Total\",\n  \"Triple-buffered\",\n  \"Universal\",\n  \"Up-sized\",\n  \"Upgradable\",\n  \"User-centric\",\n  \"User-friendly\",\n  \"Versatile\",\n  \"Virtual\",\n  \"Visionary\",\n  \"Vision-oriented\"\n];\n","module[\"exports\"] = [\n  \"24 hour\",\n  \"24/7\",\n  \"3rd generation\",\n  \"4th generation\",\n  \"5th generation\",\n  \"6th generation\",\n  \"actuating\",\n  \"analyzing\",\n  \"asymmetric\",\n  \"asynchronous\",\n  \"attitude-oriented\",\n  \"background\",\n  \"bandwidth-monitored\",\n  \"bi-directional\",\n  \"bifurcated\",\n  \"bottom-line\",\n  \"clear-thinking\",\n  \"client-driven\",\n  \"client-server\",\n  \"coherent\",\n  \"cohesive\",\n  \"composite\",\n  \"context-sensitive\",\n  \"contextually-based\",\n  \"content-based\",\n  \"dedicated\",\n  \"demand-driven\",\n  \"didactic\",\n  \"directional\",\n  \"discrete\",\n  \"disintermediate\",\n  \"dynamic\",\n  \"eco-centric\",\n  \"empowering\",\n  \"encompassing\",\n  \"even-keeled\",\n  \"executive\",\n  \"explicit\",\n  \"exuding\",\n  \"fault-tolerant\",\n  \"foreground\",\n  \"fresh-thinking\",\n  \"full-range\",\n  \"global\",\n  \"grid-enabled\",\n  \"heuristic\",\n  \"high-level\",\n  \"holistic\",\n  \"homogeneous\",\n  \"human-resource\",\n  \"hybrid\",\n  \"impactful\",\n  \"incremental\",\n  \"intangible\",\n  \"interactive\",\n  \"intermediate\",\n  \"leading edge\",\n  \"local\",\n  \"logistical\",\n  \"maximized\",\n  \"methodical\",\n  \"mission-critical\",\n  \"mobile\",\n  \"modular\",\n  \"motivating\",\n  \"multimedia\",\n  \"multi-state\",\n  \"multi-tasking\",\n  \"national\",\n  \"needs-based\",\n  \"neutral\",\n  \"next generation\",\n  \"non-volatile\",\n  \"object-oriented\",\n  \"optimal\",\n  \"optimizing\",\n  \"radical\",\n  \"real-time\",\n  \"reciprocal\",\n  \"regional\",\n  \"responsive\",\n  \"scalable\",\n  \"secondary\",\n  \"solution-oriented\",\n  \"stable\",\n  \"static\",\n  \"systematic\",\n  \"systemic\",\n  \"system-worthy\",\n  \"tangible\",\n  \"tertiary\",\n  \"transitional\",\n  \"uniform\",\n  \"upward-trending\",\n  \"user-facing\",\n  \"value-added\",\n  \"web-enabled\",\n  \"well-modulated\",\n  \"zero administration\",\n  \"zero defect\",\n  \"zero tolerance\"\n];\n","module[\"exports\"] = [\n  \"ability\",\n  \"access\",\n  \"adapter\",\n  \"algorithm\",\n  \"alliance\",\n  \"analyzer\",\n  \"application\",\n  \"approach\",\n  \"architecture\",\n  \"archive\",\n  \"artificial intelligence\",\n  \"array\",\n  \"attitude\",\n  \"benchmark\",\n  \"budgetary management\",\n  \"capability\",\n  \"capacity\",\n  \"challenge\",\n  \"circuit\",\n  \"collaboration\",\n  \"complexity\",\n  \"concept\",\n  \"conglomeration\",\n  \"contingency\",\n  \"core\",\n  \"customer loyalty\",\n  \"database\",\n  \"data-warehouse\",\n  \"definition\",\n  \"emulation\",\n  \"encoding\",\n  \"encryption\",\n  \"extranet\",\n  \"firmware\",\n  \"flexibility\",\n  \"focus group\",\n  \"forecast\",\n  \"frame\",\n  \"framework\",\n  \"function\",\n  \"functionalities\",\n  \"Graphic Interface\",\n  \"groupware\",\n  \"Graphical User Interface\",\n  \"hardware\",\n  \"help-desk\",\n  \"hierarchy\",\n  \"hub\",\n  \"implementation\",\n  \"info-mediaries\",\n  \"infrastructure\",\n  \"initiative\",\n  \"installation\",\n  \"instruction set\",\n  \"interface\",\n  \"internet solution\",\n  \"intranet\",\n  \"knowledge user\",\n  \"knowledge base\",\n  \"local area network\",\n  \"leverage\",\n  \"matrices\",\n  \"matrix\",\n  \"methodology\",\n  \"middleware\",\n  \"migration\",\n  \"model\",\n  \"moderator\",\n  \"monitoring\",\n  \"moratorium\",\n  \"neural-net\",\n  \"open architecture\",\n  \"open system\",\n  \"orchestration\",\n  \"paradigm\",\n  \"parallelism\",\n  \"policy\",\n  \"portal\",\n  \"pricing structure\",\n  \"process improvement\",\n  \"product\",\n  \"productivity\",\n  \"project\",\n  \"projection\",\n  \"protocol\",\n  \"secured line\",\n  \"service-desk\",\n  \"software\",\n  \"solution\",\n  \"standardization\",\n  \"strategy\",\n  \"structure\",\n  \"success\",\n  \"superstructure\",\n  \"support\",\n  \"synergy\",\n  \"system engine\",\n  \"task-force\",\n  \"throughput\",\n  \"time-frame\",\n  \"toolset\",\n  \"utilisation\",\n  \"website\",\n  \"workforce\"\n];\n","module[\"exports\"] = [\n  \"implement\",\n  \"utilize\",\n  \"integrate\",\n  \"streamline\",\n  \"optimize\",\n  \"evolve\",\n  \"transform\",\n  \"embrace\",\n  \"enable\",\n  \"orchestrate\",\n  \"leverage\",\n  \"reinvent\",\n  \"aggregate\",\n  \"architect\",\n  \"enhance\",\n  \"incentivize\",\n  \"morph\",\n  \"empower\",\n  \"envisioneer\",\n  \"monetize\",\n  \"harness\",\n  \"facilitate\",\n  \"seize\",\n  \"disintermediate\",\n  \"synergize\",\n  \"strategize\",\n  \"deploy\",\n  \"brand\",\n  \"grow\",\n  \"target\",\n  \"syndicate\",\n  \"synthesize\",\n  \"deliver\",\n  \"mesh\",\n  \"incubate\",\n  \"engage\",\n  \"maximize\",\n  \"benchmark\",\n  \"expedite\",\n  \"reintermediate\",\n  \"whiteboard\",\n  \"visualize\",\n  \"repurpose\",\n  \"innovate\",\n  \"scale\",\n  \"unleash\",\n  \"drive\",\n  \"extend\",\n  \"engineer\",\n  \"revolutionize\",\n  \"generate\",\n  \"exploit\",\n  \"transition\",\n  \"e-enable\",\n  \"iterate\",\n  \"cultivate\",\n  \"matrix\",\n  \"productize\",\n  \"redefine\",\n  \"recontextualize\"\n];\n","module[\"exports\"] = [\n  \"clicks-and-mortar\",\n  \"value-added\",\n  \"vertical\",\n  \"proactive\",\n  \"robust\",\n  \"revolutionary\",\n  \"scalable\",\n  \"leading-edge\",\n  \"innovative\",\n  \"intuitive\",\n  \"strategic\",\n  \"e-business\",\n  \"mission-critical\",\n  \"sticky\",\n  \"one-to-one\",\n  \"24/7\",\n  \"end-to-end\",\n  \"global\",\n  \"B2B\",\n  \"B2C\",\n  \"granular\",\n  \"frictionless\",\n  \"virtual\",\n  \"viral\",\n  \"dynamic\",\n  \"24/365\",\n  \"best-of-breed\",\n  \"killer\",\n  \"magnetic\",\n  \"bleeding-edge\",\n  \"web-enabled\",\n  \"interactive\",\n  \"dot-com\",\n  \"sexy\",\n  \"back-end\",\n  \"real-time\",\n  \"efficient\",\n  \"front-end\",\n  \"distributed\",\n  \"seamless\",\n  \"extensible\",\n  \"turn-key\",\n  \"world-class\",\n  \"open-source\",\n  \"cross-platform\",\n  \"cross-media\",\n  \"synergistic\",\n  \"bricks-and-clicks\",\n  \"out-of-the-box\",\n  \"enterprise\",\n  \"integrated\",\n  \"impactful\",\n  \"wireless\",\n  \"transparent\",\n  \"next-generation\",\n  \"cutting-edge\",\n  \"user-centric\",\n  \"visionary\",\n  \"customized\",\n  \"ubiquitous\",\n  \"plug-and-play\",\n  \"collaborative\",\n  \"compelling\",\n  \"holistic\",\n  \"rich\"\n];\n","module[\"exports\"] = [\n  \"synergies\",\n  \"web-readiness\",\n  \"paradigms\",\n  \"markets\",\n  \"partnerships\",\n  \"infrastructures\",\n  \"platforms\",\n  \"initiatives\",\n  \"channels\",\n  \"eyeballs\",\n  \"communities\",\n  \"ROI\",\n  \"solutions\",\n  \"e-tailers\",\n  \"e-services\",\n  \"action-items\",\n  \"portals\",\n  \"niches\",\n  \"technologies\",\n  \"content\",\n  \"vortals\",\n  \"supply-chains\",\n  \"convergence\",\n  \"relationships\",\n  \"architectures\",\n  \"interfaces\",\n  \"e-markets\",\n  \"e-commerce\",\n  \"systems\",\n  \"bandwidth\",\n  \"infomediaries\",\n  \"models\",\n  \"mindshare\",\n  \"deliverables\",\n  \"users\",\n  \"schemas\",\n  \"networks\",\n  \"applications\",\n  \"metrics\",\n  \"e-business\",\n  \"functionalities\",\n  \"experiences\",\n  \"web services\",\n  \"methodologies\",\n  \"blockchains\"\n];\n","module[\"exports\"] = [\n  \"#{Name.last_name} #{suffix}\",\n  \"#{Name.last_name}-#{Name.last_name}\",\n  \"#{Name.last_name}, #{Name.last_name} and #{Name.last_name}\"\n];\n","var company = {};\nmodule['exports'] = company;\ncompany.suffix = require(\"./suffix\");\ncompany.adjective = require(\"./adjective\");\ncompany.descriptor = require(\"./descriptor\");\ncompany.noun = require(\"./noun\");\ncompany.bs_verb = require(\"./bs_verb\");\ncompany.bs_adjective = require(\"./bs_adjective\");\ncompany.bs_noun = require(\"./bs_noun\");\ncompany.name = require(\"./name\");\n","module[\"exports\"] = [\n  \"gmail.com\",\n  \"yahoo.com\",\n  \"hotmail.com\"\n];\n","module[\"exports\"] = [\n  \"example.org\",\n  \"example.com\",\n  \"example.net\"\n];\n","module[\"exports\"] = [\n  \"com\",\n  \"biz\",\n  \"info\",\n  \"name\",\n  \"net\",\n  \"org\"\n];\n","module[\"exports\"] = [\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jarjan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mahdif/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sprayaga/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ruzinav/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Skyhartman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/moscoz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kurafire/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/91bilal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/malykhinv/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joelhelin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kushsolitary/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/coreyweb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/snowshade/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/areus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/heyimjuani/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/envex/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/unterdreht/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/collegeman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/peejfancher/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andyisonline/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ultragex/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ateneupopular/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Stievius/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kerem/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/osvaldas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thierrykoblentz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/peterlandt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/catarino/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/weglov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brandclay/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ahmetsulek/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nicolasfolliot/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/victorerixon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kolage/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michzen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/markjenkins/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nicolai_larsen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/noxdzine/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alagoon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/idiot/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mizko/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chadengle/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mutlu82/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/simobenso/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/guiiipontes/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/soyjavi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joshaustin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tomaslau/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/VinThomas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ManikRathee/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/langate/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cemshid/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_shahedk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/enda/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/BillSKenney/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/divya/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joshhemsley/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sindresorhus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/soffes/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/9lessons/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/linux29/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/anaami/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joreira/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shadeed9/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/scottkclark/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jedbridges/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/salleedesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marakasina/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ariil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/BrianPurkiss/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michaelmartinho/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bublienko/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/devankoshal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ZacharyZorbas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/timmillwood/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joshuasortino/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/damenleeturks/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tomas_janousek/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/herrhaase/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/RussellBishop/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brajeshwar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cbracco/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bermonpainter/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/abdullindenis/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/isacosta/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/suprb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/yalozhkin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chandlervdw/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iamgarth/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_victa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/commadelimited/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/roybarberuk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/axel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vladarbatov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ffbel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/syropian/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ankitind/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/traneblow/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/flashmurphy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ChrisFarina78/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/baliomega/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/saschamt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jm_denis/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/anoff/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kennyadr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chatyrko/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dingyi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mds/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/terryxlife/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aaroni/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kinday/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/prrstn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/eduardostuart/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dhilipsiva/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/GavicoInd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/baires/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rohixx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/blakesimkins/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/leeiio/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tjrus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/uberschizo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kylefoundry/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/claudioguglieri/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ripplemdk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/exentrich/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jakemoore/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joaoedumedeiros/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/poormini/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tereshenkov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/keryilmaz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/haydn_woods/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rude/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/llun/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sgaurav_baghel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jamiebrittain/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/badlittleduck/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pifagor/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/benefritz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/erwanhesry/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/diesellaws/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremiaha/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/koridhandy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chaensel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andrewcohen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/smaczny/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gonzalorobaina/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sydlawrence/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cdharrison/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tgerken/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lewisainslie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/charliecwaite/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/robbschiller/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/flexrs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mattdetails/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/karsh/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/opnsrce/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hgharrygo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/maximseshuk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/uxalex/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/samihah/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chanpory/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sharvin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/josemarques/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jefffis/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/krystalfister/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dpmachado/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/funwatercat/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/timothycd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ivanfilipovbg/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/picard102/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marcobarbosa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/krasnoukhov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/g3d/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rickdt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hugomano/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/logorado/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dc_user/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/horaciobella/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/SlaapMe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/teeragit/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iqonicd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ilya_pestov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andrewarrow/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ssiskind/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/HenryHoffman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rdsaunders/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adamsxu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/curiousoffice/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/themadray/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michigangraham/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kohette/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nickfratter/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/runningskull/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/madysondesigns/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brenton_clarke/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jennyshen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bradenhamm/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kurtinc/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/amanruzaini/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/coreyhaggard/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Karimmove/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aaronalfred/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wtrsld/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jitachi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/therealmarvin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pmeissner/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ooomz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shanehudson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/IsaryAmairani/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/arthurholcombe1/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/boxmodel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ehsandiary/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/LucasPerdidao/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shalt0ni/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/swaplord/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kaelifa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/plbabin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/guillemboti/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/arindam_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/renbyrd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thiagovernetti/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jmillspaysbills/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mikemai2awesome/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jervo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mekal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sta1ex/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/robergd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/felipecsl/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andrea211087/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/garand/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dhooyenga/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/abovefunction/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pcridesagain/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/randomlies/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/BryanHorsey/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/heykenneth/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dahparra/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/allthingssmitty/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/danvernon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/beweinreich/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/increase/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/falvarad/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alxndrustinov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/souuf/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/orkuncaylar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/AM_Kn2/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gearpixels/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bassamology/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vimarethomas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kosmar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/SULiik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mrjamesnoble/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/silvanmuhlemann/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shaneIxD/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nacho/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/yigitpinarbasi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/buzzusborne/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aaronkwhite/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rmlewisuk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/giancarlon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nbirckel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/d_nny_m_cher/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sdidonato/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/atariboy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/abotap/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/karalek/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/psdesignuk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nemanjaivanovic/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/baluli/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ahmadajmi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vovkasolovev/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/samgrover/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/derienzo777/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jonathansimmons/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nelsonjoyce/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/S0ufi4n3/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xtopherpaul/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/oaktreemedia/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/findingjenny/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/namankreative/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/antonyzotov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/we_social/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/leehambley/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/solid_color/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/abelcabans/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mbilderbach/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kkusaa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jordyvdboom/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/carlosgavina/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pechkinator/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vc27/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rdbannon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/croakx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kerihenare/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/catadeleon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gcmorley/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/duivvv/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/saschadroste/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/victorDubugras/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wintopia/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mattbilotti/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/taylorling/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/megdraws/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/meln1ks/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mahmoudmetwally/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Silveredge9/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/derekebradley/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/happypeter1983/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/travis_arnold/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/artem_kostenko/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adobi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/daykiine/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alek_djuric/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/scips/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/miguelmendes/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/justinrhee/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alsobrooks/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fronx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mcflydesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/santi_urso/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/allfordesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stayuber/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bertboerland/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marosholly/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adamnac/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cynthiasavard/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/muringa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/danro/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hiemil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jackiesaik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iduuck/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/antjanus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aroon_sharma/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dshster/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thehacker/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michaelbrooksjr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ryanmclaughlin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/clubb3rry/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/taybenlor/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xripunov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/myastro/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adityasutomo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/digitalmaverick/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hjartstrorn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/itolmach/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vaughanmoffitt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/abdots/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/isnifer/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sergeysafonov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/maz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/scrapdnb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chrismj83/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vitorleal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sokaniwaal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/illyzoren/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mocabyte/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/osmanince/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/djsherman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/davidhemphill/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/waghner/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/necodymiconer/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/praveen_vijaya/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fabbrucci/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/travishines/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kuldarkalvik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Elt_n/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/phillapier/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/okseanjay/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/id835559/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kudretkeskin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/anjhero/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/scott_riley/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/noufalibrahim/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/h1brd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/borges_marcos/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ciaranr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stefooo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mikebeecham/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tonymillion/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joshuaraichur/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/irae/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/petrangr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dmitriychuta/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/charliegann/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/arashmanteghi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ainsleywagon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/svenlen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/faisalabid/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/beshur/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/carlyson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dutchnadia/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/teddyzetterlund/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/samuelkraft/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aoimedia/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/toddrew/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/codepoet_ru/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/artvavs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/benoitboucart/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jomarmen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kolmarlopez/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/creartinc/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/homka/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gaborenton/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/robinclediere/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/maximsorokin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/plasticine/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/j2deme/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kapaluccio/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/de_ascanio/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rikas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dawidwu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/angelcreative/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rpatey/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/popey/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rehatkathuria/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/the_purplebunny/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/1markiz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ajaxy_ru/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brenmurrell/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dudestein/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/oskarlevinson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/victorstuber/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vicivadeline/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/leandrovaranda/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/scottgallant/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/victor_haydin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sawrb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ryhanhassan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/amayvs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/a_brixen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/karolkrakowiak_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/herkulano/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/geran7/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cggaurav/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chris_witko/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lososina/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/polarity/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mattlat/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brandonburke/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/constantx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/teylorfeliz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/craigelimeliah/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rachelreveley/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/reabo101/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rahmeen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ky/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rickyyean/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/j04ntoh/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/spbroma/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sebashton/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jpenico/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/francis_vega/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/oktayelipek/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kikillo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fabbianz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/larrygerard/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/BroumiYoussef/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/0therplanet/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mbilalsiddique1/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ionuss/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/grrr_nl/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/liminha/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rawdiggie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ryandownie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sethlouey/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pixage/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/arpitnj/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/switmer777/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/josevnclch/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kanickairaj/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/puzik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tbakdesigns/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/besbujupi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/supjoey/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lowie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/linkibol/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/balintorosz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/imcoding/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/agustincruiz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gusoto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thomasschrijer/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/superoutman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kalmerrautam/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gabrielizalo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gojeanyn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/davidbaldie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_vojto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/laurengray/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jydesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mymyboy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nellleo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marciotoledo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ninjad3m0/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/to_soham/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hasslunsford/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/muridrahhal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/levisan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/grahamkennery/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lepetitogre/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/antongenkin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nessoila/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/amandabuzard/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cocolero/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dss49/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/matt3224/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bluesix/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/quailandquasar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/AlbertoCococi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lepinski/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sementiy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mhudobivnik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thibaut_re/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/olgary/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shojberg/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mtolokonnikov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bereto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/naupintos/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wegotvices/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xadhix/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/macxim/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rodnylobos/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/madcampos/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/madebyvadim/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bartoszdawydzik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/supervova/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/markretzloff/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vonachoo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/darylws/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stevedesigner/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mylesb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/herbigt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/depaulawagner/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/geshan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gizmeedevil1991/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_scottburgess/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lisovsky/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/davidsasda/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/artd_sign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/YoungCutlass/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mgonto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/itstotallyamy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/victorquinn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/osmond/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/oksanafrewer/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/zauerkraut/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iamkeithmason/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nitinhayaran/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lmjabreu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mandalareopens/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thinkleft/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ponchomendivil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/juamperro/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brunodesign1206/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/caseycavanagh/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/luxe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dotgridline/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/spedwig/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/madewulf/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mattsapii/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/helderleal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chrisstumph/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jayphen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nsamoylov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chrisvanderkooi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/otozk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/prinzadi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gu5taf/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cyril_gaillard/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/d_kobelyatsky/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/daniloc/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nwdsha/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/romanbulah/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/skkirilov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dannol/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thekevinjones/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jwalter14/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/buddhasource/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/uxpiper/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thatonetommy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/diansigitp/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adrienths/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/klimmka/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gkaam/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/derekcramer/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jennyyo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nerrsoft/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xalionmalik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/edhenderson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/keyuri85/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/roxanejammet/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/edkf/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/matkins/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alessandroribe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jacksonlatka/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lebronjennan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/karlkanall/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/moynihan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/saulihirvi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wesleytrankin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fjaguero/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bowbrick/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mashaaaaal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/yassiryahya/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dparrelli/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fotomagin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aka_james/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/denisepires/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iqbalperkasa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/martinansty/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jarsen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/justinrob/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gabrielrosser/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/malgordon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/carlfairclough/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michaelabehsera/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pierrestoffe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/enjoythetau/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/loganjlambert/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rpeezy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/coreyginnivan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michalhron/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/msveet/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lingeswaran/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kolsvein/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/peter576/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/reideiredale/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joeymurdah/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/raphaelnikson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mvdheuvel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/maxlinderman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jimmuirhead/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/begreative/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/frankiefreesbie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/robturlinckx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Talbi_ConSept/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/longlivemyword/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vanchesz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/maiklam/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hermanobrother/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rez___a/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gregsqueeb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/greenbes/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_ragzor/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/anthonysukow/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fluidbrush/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dactrtr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jehnglynn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bergmartin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hugocornejo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_kkga/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dzantievm/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sawalazar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sovesove/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jonsgotwood/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/byryan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vytautas_a/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mizhgan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cicerobr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nilshelmersson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/d33pthought/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/davecraige/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nckjrvs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alexandermayes/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jcubic/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/craigrcoles/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bagawarman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rob_thomas10/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cofla/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/maikelk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/russell_baylis/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mhesslow/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/codysanfilippo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/webtanya/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/madebybrenton/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dcalonaci/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/perfectflow/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/saarabpreet/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kumarrajan12123/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iamsteffen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/themikenagle/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ceekaytweet/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/larrybolt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/conspirator/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dallasbpeters/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/n3dmax/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/terpimost/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/byrnecore/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/j_drake_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/calebjoyce/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/russoedu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hoangloi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gofrasdesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dimaposnyy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tjisousa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/okandungel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/billyroshan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/oskamaya/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/motionthinks/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/knilob/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ashocka18/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marrimo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bartjo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/omnizya/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ernestsemerda/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andreas_pr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/edgarchris99/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thomasgeisen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gseguin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joannefournier/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/demersdesigns/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adammarsbar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/n_tassone/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/javorszky/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/themrdave/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/yecidsm/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nicollerich/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/canapud/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nicoleglynn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/judzhin_miles/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/designervzm/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kianoshp/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/evandrix/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alterchuca/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dhrubo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ma_tiax/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ssbb_me/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dorphern/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mauriolg/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bruno_mart/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mactopus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/the_winslet/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joemdesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/Shriiiiimp/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jacobbennett/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nfedoroff/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iamglimy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/allagringaus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aiiaiiaii/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/olaolusoga/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/buryaknick/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wim1k/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nicklacke/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/a1chapone/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/steynviljoen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/strikewan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ryankirkman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andrewabogado/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/doooon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jagan123/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ariffsetiawan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/elenadissi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mwarkentin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thierrymeier_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/r_garcia/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dmackerman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/borantula/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/konus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/spacewood_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ryuchi311/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tristanlegros/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shoaib253/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aislinnkelly/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/okcoker/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/timpetricola/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sunshinedgirl/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chadami/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aleclarsoniv/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nomidesigns/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/petebernardo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/scottiedude/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/millinet/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/imsoper/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/imammuht/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/benjamin_knight/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nepdud/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joki4/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lanceguyatt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bboy1895/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/amywebbb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rweve/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ricburton/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nelshd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/batsirai/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/primozcigler/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jffgrdnr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/8d3k/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/geneseleznev/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/al_li/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/souperphly/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mslarkina/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/2fockus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cdavis565/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xiel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/turkutuuli/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/uxward/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lebinoclard/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gauravjassal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/davidmerrique/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andrewofficer/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kojourin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dnirmal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kevka/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mr_shiznit/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aluisio_azevedo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cloudstudio/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/danvierich/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alexivanichkin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fran_mchamy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/perretmagali/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/betraydan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cadikkara/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/matbeedotcom/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremyworboys/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bpartridge/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michaelkoper/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/silv3rgvn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alevizio/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/johnsmithagency/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lawlbwoy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vitor376/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/desastrozo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thimo_cz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jasonmarkjones/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lhausermann/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xravil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/guischmitt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vigobronx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/panghal0/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/miguelkooreman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/surgeonist/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/christianoliff/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/caspergrl/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iamkarna/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ipavelek/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pierre_nel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/y2graphic/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sterlingrules/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/elbuscainfo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bennyjien/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stushona/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/estebanuribe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/embrcecreations/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/danillos/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/elliotlewis/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/charlesrpratt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vladyn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/emmeffess/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/carlosblanco_eu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/leonfedotov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rangafangs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chris_frees/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tgormtx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bryan_topham/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jpscribbles/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mighty55/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/carbontwelve/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/isaacfifth/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/iamjdeleon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/snowwrite/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/barputro/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/drewbyreese/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sachacorazzi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bistrianiosip/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/magoo04/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pehamondello/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/yayteejay/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/a_harris88/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/algunsanabria/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/zforrester/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ovall/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/carlosjgsousa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/geobikas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ah_lice/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/looneydoodle/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nerdgr8/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ddggccaa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/zackeeler/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/normanbox/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/el_fuertisimo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ismail_biltagi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/juangomezw/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jnmnrd/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/patrickcoombe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ryanjohnson_me/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/markolschesky/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jeffgolenski/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kvasnic/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gauchomatt/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/afusinatto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kevinoh/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/okansurreel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adamawesomeface/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/emileboudeling/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/arishi_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/juanmamartinez/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wikiziner/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mkginfo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/terrorpixel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/curiousonaut/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/prheemo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michaelcolenso/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/foczzi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/martip07/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thaodang17/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/johncafazza/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/robinlayfield/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/franciscoamk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/abdulhyeuk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marklamb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/edobene/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andresenfredrik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mikaeljorhult/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chrisslowik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vinciarts/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/meelford/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/elliotnolten/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/yehudab/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vijaykarthik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bfrohs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/josep_martins/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/attacks/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sur4dye/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tumski/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/instalox/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mangosango/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/paulfarino/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kazaky999/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kiwiupover/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nvkznemo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tom_even/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ratbus/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/woodsman001/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joshmedeski/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thewillbeard/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/psaikali/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joe_black/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aleinadsays/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marcusgorillius/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hota_v/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jghyllebert/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shinze/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/janpalounek/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremiespoken/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/her_ruu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dansowter/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/felipeapiress/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/magugzbrand2d/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/posterjob/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nathalie_fs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bobbytwoshoes/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dreizle/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremymouton/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/elisabethkjaer/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/notbadart/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mohanrohith/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jlsolerdeltoro/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/itskawsar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/slowspock/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/zvchkelly/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wiljanslofstra/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/craighenneberry/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/trubeatto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/samscouto/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/BenouarradeM/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gipsy_raf/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/netonet_il/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/arkokoley/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/itsajimithing/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/smalonso/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_dwite_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/richardgarretts/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gregrwilkinson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/anatolinicolae/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lu4sh1i/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stefanotirloni/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ostirbu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/darcystonge/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/naitanamoreno/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/michaelcomiskey/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/adhiardana/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marcomano_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/davidcazalis/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/falconerie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gregkilian/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bcrad/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bolzanmarco/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/low_res/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vlajki/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/petar_prog/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jonkspr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/akmalfikri/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/atanism/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/harry_sistalam/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/murrayswift/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bobwassermann/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gavr1l0/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/madshensel/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mr_subtle/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/deviljho_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/salimianoff/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joetruesdell/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/twittypork/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/airskylar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dnezkumar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dgajjar/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cherif_b/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/salvafc/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/louis_currie/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/deeenright/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cybind/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/eyronn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sweetdelisa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/cboller1/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andresdjasso/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/melvindidit/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thaisselenator_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lvovenok/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/giuliusa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/belyaev_rs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/overcloacked/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kamal_chaneman/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/incubo82/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hellofeverrrr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mhaligowski/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sunlandictwin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bu7921/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/andytlaw/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremery/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/finchjke/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/manigm/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/umurgdk/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/scottfeltham/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ganserene/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mutu_krish/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jodytaggart/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ntfblog/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tanveerrao/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hfalucas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alxleroydeval/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kucingbelang4/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bargaorobalo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/colgruv/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stalewine/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kylefrost/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/angelcolberg/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sachingawas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jjshaw14/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ramanathan_pdy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/johndezember/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nilshoenson/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brandonmorreale/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nutzumi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/brandonflatsoda/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sergeyalmone/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/klefue/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kirangopal/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/baumann_alex/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/matthewkay_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jay_wilburn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shesgared/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/apriendeau/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/johnriordan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wake_gs/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aleksitappura/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/emsgulam/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xilantra/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/imomenui/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sircalebgrove/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/newbrushes/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hsinyo23/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/m4rio/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/katiemdaly/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/s4f1/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ecommerceil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marlinjayakody/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/swooshycueb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sangdth/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/coderdiaz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bluefx_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vivekprvr/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sasha_shestakov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/eugeneeweb/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dgclegg/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/n1ght_coder/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dixchen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/blakehawksworth/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/trueblood_33/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hai_ninh_nguyen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marclgonzales/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/yesmeck/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stephcoue/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/doronmalki/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ruehldesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/anasnakawa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kijanmaharjan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/wearesavas/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tweetubhai/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alecarpentier/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/fiterik/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/antonyryndya/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/d00maz/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/theonlyzeke/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/missaaamy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/carlosm/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/manekenthe/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/reetajayendra/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremyshimko/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/justinrgraham/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/stefanozoffoli/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/overra/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mrebay007/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/shvelo96/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/pyronite/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/thedjpetersen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/rtyukmaev/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_williamguerra/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/albertaugustin/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vikashpathak18/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kevinjohndayy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vj_demien/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/colirpixoil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/goddardlewis/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/laasli/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jqiuss/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/heycamtaylor/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nastya_mane/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mastermindesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ccinojasso1/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/nyancecom/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sandywoodruff/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/bighanddesign/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sbtransparent/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aviddayentonbay/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/richwild/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kaysix_dizzy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/tur8le/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/seyedhossein1/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/privetwagner/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/emmandenn/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dev_essentials/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jmfsocial/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_yardenoon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mateaodviteza/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mufaddal_mw/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hafeeskhan/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ashernatali/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sulaqo/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/eddiechen/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/josecarlospsh/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vm_f/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/enricocicconi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/danmartin70/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/donjain/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mrxloka/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/_pedropinho/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/eitarafa/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/oscarowusu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ralph_lam/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/panchajanyag/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/marshallchen_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/xamorep/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aio___/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/chaabane_wail/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/txcx/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/akashsharma39/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/falling_soul/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sainraja/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mugukamil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/johannesneu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/markwienands/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/karthipanraj/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/balakayuriy/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/alan_zhang_/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/layerssss/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/kaspernordkvist/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/mirfanqureshi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/hanna_smi/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/VMilescu/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/aeon56/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/m_kalibry/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/sreejithexp/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dicesales/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/dhoot_amit/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/smenov/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/lonesomelemon/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vladimirdevic/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/joelcipriano/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/haligaliharun/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/buleswapnil/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/serefka/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/ifarafonow/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/vikasvinfotech/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/urrutimeoli/128.jpg\",\n  \"https://s3.amazonaws.com/uifaces/faces/twitter/areandacom/128.jpg\"\n];\n","var internet = {};\nmodule['exports'] = internet;\ninternet.free_email = require(\"./free_email\");\ninternet.example_email = require(\"./example_email\");\ninternet.domain_suffix = require(\"./domain_suffix\");\ninternet.avatar_uri = require(\"./avatar_uri\");\n","module[\"exports\"] = [\n  \"utf8_unicode_ci\",\n  \"utf8_general_ci\",\n  \"utf8_bin\",\n  \"ascii_bin\",\n  \"ascii_general_ci\",\n  \"cp1250_bin\",\n  \"cp1250_general_ci\"\n];\n","module[\"exports\"] = [\n  \"id\",\n  \"title\",\n  \"name\",\n  \"email\",\n  \"phone\",\n  \"token\",\n  \"group\",\n  \"category\",\n  \"password\",\n  \"comment\",\n  \"avatar\",\n  \"status\",\n  \"createdAt\",\n  \"updatedAt\"\n];\n","module[\"exports\"] = [\n  \"InnoDB\",\n  \"MyISAM\",\n  \"MEMORY\",\n  \"CSV\",\n  \"BLACKHOLE\",\n  \"ARCHIVE\"\n];\n","module[\"exports\"] = [\n  \"int\",\n  \"varchar\",\n  \"text\",\n  \"date\",\n  \"datetime\",\n  \"tinyint\",\n  \"time\",\n  \"timestamp\",\n  \"smallint\",\n  \"mediumint\",\n  \"bigint\",\n  \"decimal\",\n  \"float\",\n  \"double\",\n  \"real\",\n  \"bit\",\n  \"boolean\",\n  \"serial\",\n  \"blob\",\n  \"binary\",\n  \"enum\",\n  \"set\",\n  \"geometry\",\n  \"point\"\n];\n","var database = {};\nmodule['exports'] = database;\ndatabase.collation = require(\"./collation\");\ndatabase.column = require(\"./column\");\ndatabase.engine = require(\"./engine\");\ndatabase.type = require(\"./type\");","module[\"exports\"] = [\n  \"alias\",\n  \"consequatur\",\n  \"aut\",\n  \"perferendis\",\n  \"sit\",\n  \"voluptatem\",\n  \"accusantium\",\n  \"doloremque\",\n  \"aperiam\",\n  \"eaque\",\n  \"ipsa\",\n  \"quae\",\n  \"ab\",\n  \"illo\",\n  \"inventore\",\n  \"veritatis\",\n  \"et\",\n  \"quasi\",\n  \"architecto\",\n  \"beatae\",\n  \"vitae\",\n  \"dicta\",\n  \"sunt\",\n  \"explicabo\",\n  \"aspernatur\",\n  \"aut\",\n  \"odit\",\n  \"aut\",\n  \"fugit\",\n  \"sed\",\n  \"quia\",\n  \"consequuntur\",\n  \"magni\",\n  \"dolores\",\n  \"eos\",\n  \"qui\",\n  \"ratione\",\n  \"voluptatem\",\n  \"sequi\",\n  \"nesciunt\",\n  \"neque\",\n  \"dolorem\",\n  \"ipsum\",\n  \"quia\",\n  \"dolor\",\n  \"sit\",\n  \"amet\",\n  \"consectetur\",\n  \"adipisci\",\n  \"velit\",\n  \"sed\",\n  \"quia\",\n  \"non\",\n  \"numquam\",\n  \"eius\",\n  \"modi\",\n  \"tempora\",\n  \"incidunt\",\n  \"ut\",\n  \"labore\",\n  \"et\",\n  \"dolore\",\n  \"magnam\",\n  \"aliquam\",\n  \"quaerat\",\n  \"voluptatem\",\n  \"ut\",\n  \"enim\",\n  \"ad\",\n  \"minima\",\n  \"veniam\",\n  \"quis\",\n  \"nostrum\",\n  \"exercitationem\",\n  \"ullam\",\n  \"corporis\",\n  \"nemo\",\n  \"enim\",\n  \"ipsam\",\n  \"voluptatem\",\n  \"quia\",\n  \"voluptas\",\n  \"sit\",\n  \"suscipit\",\n  \"laboriosam\",\n  \"nisi\",\n  \"ut\",\n  \"aliquid\",\n  \"ex\",\n  \"ea\",\n  \"commodi\",\n  \"consequatur\",\n  \"quis\",\n  \"autem\",\n  \"vel\",\n  \"eum\",\n  \"iure\",\n  \"reprehenderit\",\n  \"qui\",\n  \"in\",\n  \"ea\",\n  \"voluptate\",\n  \"velit\",\n  \"esse\",\n  \"quam\",\n  \"nihil\",\n  \"molestiae\",\n  \"et\",\n  \"iusto\",\n  \"odio\",\n  \"dignissimos\",\n  \"ducimus\",\n  \"qui\",\n  \"blanditiis\",\n  \"praesentium\",\n  \"laudantium\",\n  \"totam\",\n  \"rem\",\n  \"voluptatum\",\n  \"deleniti\",\n  \"atque\",\n  \"corrupti\",\n  \"quos\",\n  \"dolores\",\n  \"et\",\n  \"quas\",\n  \"molestias\",\n  \"excepturi\",\n  \"sint\",\n  \"occaecati\",\n  \"cupiditate\",\n  \"non\",\n  \"provident\",\n  \"sed\",\n  \"ut\",\n  \"perspiciatis\",\n  \"unde\",\n  \"omnis\",\n  \"iste\",\n  \"natus\",\n  \"error\",\n  \"similique\",\n  \"sunt\",\n  \"in\",\n  \"culpa\",\n  \"qui\",\n  \"officia\",\n  \"deserunt\",\n  \"mollitia\",\n  \"animi\",\n  \"id\",\n  \"est\",\n  \"laborum\",\n  \"et\",\n  \"dolorum\",\n  \"fuga\",\n  \"et\",\n  \"harum\",\n  \"quidem\",\n  \"rerum\",\n  \"facilis\",\n  \"est\",\n  \"et\",\n  \"expedita\",\n  \"distinctio\",\n  \"nam\",\n  \"libero\",\n  \"tempore\",\n  \"cum\",\n  \"soluta\",\n  \"nobis\",\n  \"est\",\n  \"eligendi\",\n  \"optio\",\n  \"cumque\",\n  \"nihil\",\n  \"impedit\",\n  \"quo\",\n  \"porro\",\n  \"quisquam\",\n  \"est\",\n  \"qui\",\n  \"minus\",\n  \"id\",\n  \"quod\",\n  \"maxime\",\n  \"placeat\",\n  \"facere\",\n  \"possimus\",\n  \"omnis\",\n  \"voluptas\",\n  \"assumenda\",\n  \"est\",\n  \"omnis\",\n  \"dolor\",\n  \"repellendus\",\n  \"temporibus\",\n  \"autem\",\n  \"quibusdam\",\n  \"et\",\n  \"aut\",\n  \"consequatur\",\n  \"vel\",\n  \"illum\",\n  \"qui\",\n  \"dolorem\",\n  \"eum\",\n  \"fugiat\",\n  \"quo\",\n  \"voluptas\",\n  \"nulla\",\n  \"pariatur\",\n  \"at\",\n  \"vero\",\n  \"eos\",\n  \"et\",\n  \"accusamus\",\n  \"officiis\",\n  \"debitis\",\n  \"aut\",\n  \"rerum\",\n  \"necessitatibus\",\n  \"saepe\",\n  \"eveniet\",\n  \"ut\",\n  \"et\",\n  \"voluptates\",\n  \"repudiandae\",\n  \"sint\",\n  \"et\",\n  \"molestiae\",\n  \"non\",\n  \"recusandae\",\n  \"itaque\",\n  \"earum\",\n  \"rerum\",\n  \"hic\",\n  \"tenetur\",\n  \"a\",\n  \"sapiente\",\n  \"delectus\",\n  \"ut\",\n  \"aut\",\n  \"reiciendis\",\n  \"voluptatibus\",\n  \"maiores\",\n  \"doloribus\",\n  \"asperiores\",\n  \"repellat\"\n];\n","module[\"exports\"] = [\n  \"abbas\",\n  \"abduco\",\n  \"abeo\",\n  \"abscido\",\n  \"absconditus\",\n  \"absens\",\n  \"absorbeo\",\n  \"absque\",\n  \"abstergo\",\n  \"absum\",\n  \"abundans\",\n  \"abutor\",\n  \"accedo\",\n  \"accendo\",\n  \"acceptus\",\n  \"accipio\",\n  \"accommodo\",\n  \"accusator\",\n  \"acer\",\n  \"acerbitas\",\n  \"acervus\",\n  \"acidus\",\n  \"acies\",\n  \"acquiro\",\n  \"acsi\",\n  \"adamo\",\n  \"adaugeo\",\n  \"addo\",\n  \"adduco\",\n  \"ademptio\",\n  \"adeo\",\n  \"adeptio\",\n  \"adfectus\",\n  \"adfero\",\n  \"adficio\",\n  \"adflicto\",\n  \"adhaero\",\n  \"adhuc\",\n  \"adicio\",\n  \"adimpleo\",\n  \"adinventitias\",\n  \"adipiscor\",\n  \"adiuvo\",\n  \"administratio\",\n  \"admiratio\",\n  \"admitto\",\n  \"admoneo\",\n  \"admoveo\",\n  \"adnuo\",\n  \"adopto\",\n  \"adsidue\",\n  \"adstringo\",\n  \"adsuesco\",\n  \"adsum\",\n  \"adulatio\",\n  \"adulescens\",\n  \"adultus\",\n  \"aduro\",\n  \"advenio\",\n  \"adversus\",\n  \"advoco\",\n  \"aedificium\",\n  \"aeger\",\n  \"aegre\",\n  \"aegrotatio\",\n  \"aegrus\",\n  \"aeneus\",\n  \"aequitas\",\n  \"aequus\",\n  \"aer\",\n  \"aestas\",\n  \"aestivus\",\n  \"aestus\",\n  \"aetas\",\n  \"aeternus\",\n  \"ager\",\n  \"aggero\",\n  \"aggredior\",\n  \"agnitio\",\n  \"agnosco\",\n  \"ago\",\n  \"ait\",\n  \"aiunt\",\n  \"alienus\",\n  \"alii\",\n  \"alioqui\",\n  \"aliqua\",\n  \"alius\",\n  \"allatus\",\n  \"alo\",\n  \"alter\",\n  \"altus\",\n  \"alveus\",\n  \"amaritudo\",\n  \"ambitus\",\n  \"ambulo\",\n  \"amicitia\",\n  \"amiculum\",\n  \"amissio\",\n  \"amita\",\n  \"amitto\",\n  \"amo\",\n  \"amor\",\n  \"amoveo\",\n  \"amplexus\",\n  \"amplitudo\",\n  \"amplus\",\n  \"ancilla\",\n  \"angelus\",\n  \"angulus\",\n  \"angustus\",\n  \"animadverto\",\n  \"animi\",\n  \"animus\",\n  \"annus\",\n  \"anser\",\n  \"ante\",\n  \"antea\",\n  \"antepono\",\n  \"antiquus\",\n  \"aperio\",\n  \"aperte\",\n  \"apostolus\",\n  \"apparatus\",\n  \"appello\",\n  \"appono\",\n  \"appositus\",\n  \"approbo\",\n  \"apto\",\n  \"aptus\",\n  \"apud\",\n  \"aqua\",\n  \"ara\",\n  \"aranea\",\n  \"arbitro\",\n  \"arbor\",\n  \"arbustum\",\n  \"arca\",\n  \"arceo\",\n  \"arcesso\",\n  \"arcus\",\n  \"argentum\",\n  \"argumentum\",\n  \"arguo\",\n  \"arma\",\n  \"armarium\",\n  \"armo\",\n  \"aro\",\n  \"ars\",\n  \"articulus\",\n  \"artificiose\",\n  \"arto\",\n  \"arx\",\n  \"ascisco\",\n  \"ascit\",\n  \"asper\",\n  \"aspicio\",\n  \"asporto\",\n  \"assentator\",\n  \"astrum\",\n  \"atavus\",\n  \"ater\",\n  \"atqui\",\n  \"atrocitas\",\n  \"atrox\",\n  \"attero\",\n  \"attollo\",\n  \"attonbitus\",\n  \"auctor\",\n  \"auctus\",\n  \"audacia\",\n  \"audax\",\n  \"audentia\",\n  \"audeo\",\n  \"audio\",\n  \"auditor\",\n  \"aufero\",\n  \"aureus\",\n  \"auris\",\n  \"aurum\",\n  \"aut\",\n  \"autem\",\n  \"autus\",\n  \"auxilium\",\n  \"avaritia\",\n  \"avarus\",\n  \"aveho\",\n  \"averto\",\n  \"avoco\",\n  \"baiulus\",\n  \"balbus\",\n  \"barba\",\n  \"bardus\",\n  \"basium\",\n  \"beatus\",\n  \"bellicus\",\n  \"bellum\",\n  \"bene\",\n  \"beneficium\",\n  \"benevolentia\",\n  \"benigne\",\n  \"bestia\",\n  \"bibo\",\n  \"bis\",\n  \"blandior\",\n  \"bonus\",\n  \"bos\",\n  \"brevis\",\n  \"cado\",\n  \"caecus\",\n  \"caelestis\",\n  \"caelum\",\n  \"calamitas\",\n  \"calcar\",\n  \"calco\",\n  \"calculus\",\n  \"callide\",\n  \"campana\",\n  \"candidus\",\n  \"canis\",\n  \"canonicus\",\n  \"canto\",\n  \"capillus\",\n  \"capio\",\n  \"capitulus\",\n  \"capto\",\n  \"caput\",\n  \"carbo\",\n  \"carcer\",\n  \"careo\",\n  \"caries\",\n  \"cariosus\",\n  \"caritas\",\n  \"carmen\",\n  \"carpo\",\n  \"carus\",\n  \"casso\",\n  \"caste\",\n  \"casus\",\n  \"catena\",\n  \"caterva\",\n  \"cattus\",\n  \"cauda\",\n  \"causa\",\n  \"caute\",\n  \"caveo\",\n  \"cavus\",\n  \"cedo\",\n  \"celebrer\",\n  \"celer\",\n  \"celo\",\n  \"cena\",\n  \"cenaculum\",\n  \"ceno\",\n  \"censura\",\n  \"centum\",\n  \"cerno\",\n  \"cernuus\",\n  \"certe\",\n  \"certo\",\n  \"certus\",\n  \"cervus\",\n  \"cetera\",\n  \"charisma\",\n  \"chirographum\",\n  \"cibo\",\n  \"cibus\",\n  \"cicuta\",\n  \"cilicium\",\n  \"cimentarius\",\n  \"ciminatio\",\n  \"cinis\",\n  \"circumvenio\",\n  \"cito\",\n  \"civis\",\n  \"civitas\",\n  \"clam\",\n  \"clamo\",\n  \"claro\",\n  \"clarus\",\n  \"claudeo\",\n  \"claustrum\",\n  \"clementia\",\n  \"clibanus\",\n  \"coadunatio\",\n  \"coaegresco\",\n  \"coepi\",\n  \"coerceo\",\n  \"cogito\",\n  \"cognatus\",\n  \"cognomen\",\n  \"cogo\",\n  \"cohaero\",\n  \"cohibeo\",\n  \"cohors\",\n  \"colligo\",\n  \"colloco\",\n  \"collum\",\n  \"colo\",\n  \"color\",\n  \"coma\",\n  \"combibo\",\n  \"comburo\",\n  \"comedo\",\n  \"comes\",\n  \"cometes\",\n  \"comis\",\n  \"comitatus\",\n  \"commemoro\",\n  \"comminor\",\n  \"commodo\",\n  \"communis\",\n  \"comparo\",\n  \"compello\",\n  \"complectus\",\n  \"compono\",\n  \"comprehendo\",\n  \"comptus\",\n  \"conatus\",\n  \"concedo\",\n  \"concido\",\n  \"conculco\",\n  \"condico\",\n  \"conduco\",\n  \"confero\",\n  \"confido\",\n  \"conforto\",\n  \"confugo\",\n  \"congregatio\",\n  \"conicio\",\n  \"coniecto\",\n  \"conitor\",\n  \"coniuratio\",\n  \"conor\",\n  \"conqueror\",\n  \"conscendo\",\n  \"conservo\",\n  \"considero\",\n  \"conspergo\",\n  \"constans\",\n  \"consuasor\",\n  \"contabesco\",\n  \"contego\",\n  \"contigo\",\n  \"contra\",\n  \"conturbo\",\n  \"conventus\",\n  \"convoco\",\n  \"copia\",\n  \"copiose\",\n  \"cornu\",\n  \"corona\",\n  \"corpus\",\n  \"correptius\",\n  \"corrigo\",\n  \"corroboro\",\n  \"corrumpo\",\n  \"coruscus\",\n  \"cotidie\",\n  \"crapula\",\n  \"cras\",\n  \"crastinus\",\n  \"creator\",\n  \"creber\",\n  \"crebro\",\n  \"credo\",\n  \"creo\",\n  \"creptio\",\n  \"crepusculum\",\n  \"cresco\",\n  \"creta\",\n  \"cribro\",\n  \"crinis\",\n  \"cruciamentum\",\n  \"crudelis\",\n  \"cruentus\",\n  \"crur\",\n  \"crustulum\",\n  \"crux\",\n  \"cubicularis\",\n  \"cubitum\",\n  \"cubo\",\n  \"cui\",\n  \"cuius\",\n  \"culpa\",\n  \"culpo\",\n  \"cultellus\",\n  \"cultura\",\n  \"cum\",\n  \"cunabula\",\n  \"cunae\",\n  \"cunctatio\",\n  \"cupiditas\",\n  \"cupio\",\n  \"cuppedia\",\n  \"cupressus\",\n  \"cur\",\n  \"cura\",\n  \"curatio\",\n  \"curia\",\n  \"curiositas\",\n  \"curis\",\n  \"curo\",\n  \"curriculum\",\n  \"currus\",\n  \"cursim\",\n  \"curso\",\n  \"cursus\",\n  \"curto\",\n  \"curtus\",\n  \"curvo\",\n  \"curvus\",\n  \"custodia\",\n  \"damnatio\",\n  \"damno\",\n  \"dapifer\",\n  \"debeo\",\n  \"debilito\",\n  \"decens\",\n  \"decerno\",\n  \"decet\",\n  \"decimus\",\n  \"decipio\",\n  \"decor\",\n  \"decretum\",\n  \"decumbo\",\n  \"dedecor\",\n  \"dedico\",\n  \"deduco\",\n  \"defaeco\",\n  \"defendo\",\n  \"defero\",\n  \"defessus\",\n  \"defetiscor\",\n  \"deficio\",\n  \"defigo\",\n  \"defleo\",\n  \"defluo\",\n  \"defungo\",\n  \"degenero\",\n  \"degero\",\n  \"degusto\",\n  \"deinde\",\n  \"delectatio\",\n  \"delego\",\n  \"deleo\",\n  \"delibero\",\n  \"delicate\",\n  \"delinquo\",\n  \"deludo\",\n  \"demens\",\n  \"demergo\",\n  \"demitto\",\n  \"demo\",\n  \"demonstro\",\n  \"demoror\",\n  \"demulceo\",\n  \"demum\",\n  \"denego\",\n  \"denique\",\n  \"dens\",\n  \"denuncio\",\n  \"denuo\",\n  \"deorsum\",\n  \"depereo\",\n  \"depono\",\n  \"depopulo\",\n  \"deporto\",\n  \"depraedor\",\n  \"deprecator\",\n  \"deprimo\",\n  \"depromo\",\n  \"depulso\",\n  \"deputo\",\n  \"derelinquo\",\n  \"derideo\",\n  \"deripio\",\n  \"desidero\",\n  \"desino\",\n  \"desipio\",\n  \"desolo\",\n  \"desparatus\",\n  \"despecto\",\n  \"despirmatio\",\n  \"infit\",\n  \"inflammatio\",\n  \"paens\",\n  \"patior\",\n  \"patria\",\n  \"patrocinor\",\n  \"patruus\",\n  \"pauci\",\n  \"paulatim\",\n  \"pauper\",\n  \"pax\",\n  \"peccatus\",\n  \"pecco\",\n  \"pecto\",\n  \"pectus\",\n  \"pecunia\",\n  \"pecus\",\n  \"peior\",\n  \"pel\",\n  \"ocer\",\n  \"socius\",\n  \"sodalitas\",\n  \"sol\",\n  \"soleo\",\n  \"solio\",\n  \"solitudo\",\n  \"solium\",\n  \"sollers\",\n  \"sollicito\",\n  \"solum\",\n  \"solus\",\n  \"solutio\",\n  \"solvo\",\n  \"somniculosus\",\n  \"somnus\",\n  \"sonitus\",\n  \"sono\",\n  \"sophismata\",\n  \"sopor\",\n  \"sordeo\",\n  \"sortitus\",\n  \"spargo\",\n  \"speciosus\",\n  \"spectaculum\",\n  \"speculum\",\n  \"sperno\",\n  \"spero\",\n  \"spes\",\n  \"spiculum\",\n  \"spiritus\",\n  \"spoliatio\",\n  \"sponte\",\n  \"stabilis\",\n  \"statim\",\n  \"statua\",\n  \"stella\",\n  \"stillicidium\",\n  \"stipes\",\n  \"stips\",\n  \"sto\",\n  \"strenuus\",\n  \"strues\",\n  \"studio\",\n  \"stultus\",\n  \"suadeo\",\n  \"suasoria\",\n  \"sub\",\n  \"subito\",\n  \"subiungo\",\n  \"sublime\",\n  \"subnecto\",\n  \"subseco\",\n  \"substantia\",\n  \"subvenio\",\n  \"succedo\",\n  \"succurro\",\n  \"sufficio\",\n  \"suffoco\",\n  \"suffragium\",\n  \"suggero\",\n  \"sui\",\n  \"sulum\",\n  \"sum\",\n  \"summa\",\n  \"summisse\",\n  \"summopere\",\n  \"sumo\",\n  \"sumptus\",\n  \"supellex\",\n  \"super\",\n  \"suppellex\",\n  \"supplanto\",\n  \"suppono\",\n  \"supra\",\n  \"surculus\",\n  \"surgo\",\n  \"sursum\",\n  \"suscipio\",\n  \"suspendo\",\n  \"sustineo\",\n  \"suus\",\n  \"synagoga\",\n  \"tabella\",\n  \"tabernus\",\n  \"tabesco\",\n  \"tabgo\",\n  \"tabula\",\n  \"taceo\",\n  \"tactus\",\n  \"taedium\",\n  \"talio\",\n  \"talis\",\n  \"talus\",\n  \"tam\",\n  \"tamdiu\",\n  \"tamen\",\n  \"tametsi\",\n  \"tamisium\",\n  \"tamquam\",\n  \"tandem\",\n  \"tantillus\",\n  \"tantum\",\n  \"tardus\",\n  \"tego\",\n  \"temeritas\",\n  \"temperantia\",\n  \"templum\",\n  \"temptatio\",\n  \"tempus\",\n  \"tenax\",\n  \"tendo\",\n  \"teneo\",\n  \"tener\",\n  \"tenuis\",\n  \"tenus\",\n  \"tepesco\",\n  \"tepidus\",\n  \"ter\",\n  \"terebro\",\n  \"teres\",\n  \"terga\",\n  \"tergeo\",\n  \"tergiversatio\",\n  \"tergo\",\n  \"tergum\",\n  \"termes\",\n  \"terminatio\",\n  \"tero\",\n  \"terra\",\n  \"terreo\",\n  \"territo\",\n  \"terror\",\n  \"tersus\",\n  \"tertius\",\n  \"testimonium\",\n  \"texo\",\n  \"textilis\",\n  \"textor\",\n  \"textus\",\n  \"thalassinus\",\n  \"theatrum\",\n  \"theca\",\n  \"thema\",\n  \"theologus\",\n  \"thermae\",\n  \"thesaurus\",\n  \"thesis\",\n  \"thorax\",\n  \"thymbra\",\n  \"thymum\",\n  \"tibi\",\n  \"timidus\",\n  \"timor\",\n  \"titulus\",\n  \"tolero\",\n  \"tollo\",\n  \"tondeo\",\n  \"tonsor\",\n  \"torqueo\",\n  \"torrens\",\n  \"tot\",\n  \"totidem\",\n  \"toties\",\n  \"totus\",\n  \"tracto\",\n  \"trado\",\n  \"traho\",\n  \"trans\",\n  \"tredecim\",\n  \"tremo\",\n  \"trepide\",\n  \"tres\",\n  \"tribuo\",\n  \"tricesimus\",\n  \"triduana\",\n  \"triginta\",\n  \"tripudio\",\n  \"tristis\",\n  \"triumphus\",\n  \"trucido\",\n  \"truculenter\",\n  \"tubineus\",\n  \"tui\",\n  \"tum\",\n  \"tumultus\",\n  \"tunc\",\n  \"turba\",\n  \"turbo\",\n  \"turpe\",\n  \"turpis\",\n  \"tutamen\",\n  \"tutis\",\n  \"tyrannus\",\n  \"uberrime\",\n  \"ubi\",\n  \"ulciscor\",\n  \"ullus\",\n  \"ulterius\",\n  \"ultio\",\n  \"ultra\",\n  \"umbra\",\n  \"umerus\",\n  \"umquam\",\n  \"una\",\n  \"unde\",\n  \"undique\",\n  \"universe\",\n  \"unus\",\n  \"urbanus\",\n  \"urbs\",\n  \"uredo\",\n  \"usitas\",\n  \"usque\",\n  \"ustilo\",\n  \"ustulo\",\n  \"usus\",\n  \"uter\",\n  \"uterque\",\n  \"utilis\",\n  \"utique\",\n  \"utor\",\n  \"utpote\",\n  \"utrimque\",\n  \"utroque\",\n  \"utrum\",\n  \"uxor\",\n  \"vaco\",\n  \"vacuus\",\n  \"vado\",\n  \"vae\",\n  \"valde\",\n  \"valens\",\n  \"valeo\",\n  \"valetudo\",\n  \"validus\",\n  \"vallum\",\n  \"vapulus\",\n  \"varietas\",\n  \"varius\",\n  \"vehemens\",\n  \"vel\",\n  \"velociter\",\n  \"velum\",\n  \"velut\",\n  \"venia\",\n  \"venio\",\n  \"ventito\",\n  \"ventosus\",\n  \"ventus\",\n  \"venustas\",\n  \"ver\",\n  \"verbera\",\n  \"verbum\",\n  \"vere\",\n  \"verecundia\",\n  \"vereor\",\n  \"vergo\",\n  \"veritas\",\n  \"vero\",\n  \"versus\",\n  \"verto\",\n  \"verumtamen\",\n  \"verus\",\n  \"vesco\",\n  \"vesica\",\n  \"vesper\",\n  \"vespillo\",\n  \"vester\",\n  \"vestigium\",\n  \"vestrum\",\n  \"vetus\",\n  \"via\",\n  \"vicinus\",\n  \"vicissitudo\",\n  \"victoria\",\n  \"victus\",\n  \"videlicet\",\n  \"video\",\n  \"viduata\",\n  \"viduo\",\n  \"vigilo\",\n  \"vigor\",\n  \"vilicus\",\n  \"vilis\",\n  \"vilitas\",\n  \"villa\",\n  \"vinco\",\n  \"vinculum\",\n  \"vindico\",\n  \"vinitor\",\n  \"vinum\",\n  \"vir\",\n  \"virga\",\n  \"virgo\",\n  \"viridis\",\n  \"viriliter\",\n  \"virtus\",\n  \"vis\",\n  \"viscus\",\n  \"vita\",\n  \"vitiosus\",\n  \"vitium\",\n  \"vito\",\n  \"vivo\",\n  \"vix\",\n  \"vobis\",\n  \"vociferor\",\n  \"voco\",\n  \"volaticus\",\n  \"volo\",\n  \"volubilis\",\n  \"voluntarius\",\n  \"volup\",\n  \"volutabrum\",\n  \"volva\",\n  \"vomer\",\n  \"vomica\",\n  \"vomito\",\n  \"vorago\",\n  \"vorax\",\n  \"voro\",\n  \"vos\",\n  \"votum\",\n  \"voveo\",\n  \"vox\",\n  \"vulariter\",\n  \"vulgaris\",\n  \"vulgivagus\",\n  \"vulgo\",\n  \"vulgus\",\n  \"vulnero\",\n  \"vulnus\",\n  \"vulpes\",\n  \"vulticulus\",\n  \"vultuosus\",\n  \"xiphias\"\n];\n","var lorem = {};\nmodule['exports'] = lorem;\nlorem.words = require(\"./words\");\nlorem.supplemental = require(\"./supplemental\");\n","module[\"exports\"] = [\n\t\"James\",\n\t\"John\",\n\t\"Robert\",\n\t\"Michael\",\n\t\"William\",\n\t\"David\",\n\t\"Richard\",\n\t\"Charles\",\n\t\"Joseph\",\n\t\"Thomas\",\n\t\"Christopher\",\n\t\"Daniel\",\n\t\"Paul\",\n\t\"Mark\",\n\t\"Donald\",\n\t\"George\",\n\t\"Kenneth\",\n\t\"Steven\",\n\t\"Edward\",\n\t\"Brian\",\n\t\"Ronald\",\n\t\"Anthony\",\n\t\"Kevin\",\n\t\"Jason\",\n\t\"Matthew\",\n\t\"Gary\",\n\t\"Timothy\",\n\t\"Jose\",\n\t\"Larry\",\n\t\"Jeffrey\",\n\t\"Frank\",\n\t\"Scott\",\n\t\"Eric\",\n\t\"Stephen\",\n\t\"Andrew\",\n\t\"Raymond\",\n\t\"Gregory\",\n\t\"Joshua\",\n\t\"Jerry\",\n\t\"Dennis\",\n\t\"Walter\",\n\t\"Patrick\",\n\t\"Peter\",\n\t\"Harold\",\n\t\"Douglas\",\n\t\"Henry\",\n\t\"Carl\",\n\t\"Arthur\",\n\t\"Ryan\",\n\t\"Roger\",\n\t\"Joe\",\n\t\"Juan\",\n\t\"Jack\",\n\t\"Albert\",\n\t\"Jonathan\",\n\t\"Justin\",\n\t\"Terry\",\n\t\"Gerald\",\n\t\"Keith\",\n\t\"Samuel\",\n\t\"Willie\",\n\t\"Ralph\",\n\t\"Lawrence\",\n\t\"Nicholas\",\n\t\"Roy\",\n\t\"Benjamin\",\n\t\"Bruce\",\n\t\"Brandon\",\n\t\"Adam\",\n\t\"Harry\",\n\t\"Fred\",\n\t\"Wayne\",\n\t\"Billy\",\n\t\"Steve\",\n\t\"Louis\",\n\t\"Jeremy\",\n\t\"Aaron\",\n\t\"Randy\",\n\t\"Howard\",\n\t\"Eugene\",\n\t\"Carlos\",\n\t\"Russell\",\n\t\"Bobby\",\n\t\"Victor\",\n\t\"Martin\",\n\t\"Ernest\",\n\t\"Phillip\",\n\t\"Todd\",\n\t\"Jesse\",\n\t\"Craig\",\n\t\"Alan\",\n\t\"Shawn\",\n\t\"Clarence\",\n\t\"Sean\",\n\t\"Philip\",\n\t\"Chris\",\n\t\"Johnny\",\n\t\"Earl\",\n\t\"Jimmy\",\n\t\"Antonio\",\n\t\"Danny\",\n\t\"Bryan\",\n\t\"Tony\",\n\t\"Luis\",\n\t\"Mike\",\n\t\"Stanley\",\n\t\"Leonard\",\n\t\"Nathan\",\n\t\"Dale\",\n\t\"Manuel\",\n\t\"Rodney\",\n\t\"Curtis\",\n\t\"Norman\",\n\t\"Allen\",\n\t\"Marvin\",\n\t\"Vincent\",\n\t\"Glenn\",\n\t\"Jeffery\",\n\t\"Travis\",\n\t\"Jeff\",\n\t\"Chad\",\n\t\"Jacob\",\n\t\"Lee\",\n\t\"Melvin\",\n\t\"Alfred\",\n\t\"Kyle\",\n\t\"Francis\",\n\t\"Bradley\",\n\t\"Jesus\",\n\t\"Herbert\",\n\t\"Frederick\",\n\t\"Ray\",\n\t\"Joel\",\n\t\"Edwin\",\n\t\"Don\",\n\t\"Eddie\",\n\t\"Ricky\",\n\t\"Troy\",\n\t\"Randall\",\n\t\"Barry\",\n\t\"Alexander\",\n\t\"Bernard\",\n\t\"Mario\",\n\t\"Leroy\",\n\t\"Francisco\",\n\t\"Marcus\",\n\t\"Micheal\",\n\t\"Theodore\",\n\t\"Clifford\",\n\t\"Miguel\",\n\t\"Oscar\",\n\t\"Jay\",\n\t\"Jim\",\n\t\"Tom\",\n\t\"Calvin\",\n\t\"Alex\",\n\t\"Jon\",\n\t\"Ronnie\",\n\t\"Bill\",\n\t\"Lloyd\",\n\t\"Tommy\",\n\t\"Leon\",\n\t\"Derek\",\n\t\"Warren\",\n\t\"Darrell\",\n\t\"Jerome\",\n\t\"Floyd\",\n\t\"Leo\",\n\t\"Alvin\",\n\t\"Tim\",\n\t\"Wesley\",\n\t\"Gordon\",\n\t\"Dean\",\n\t\"Greg\",\n\t\"Jorge\",\n\t\"Dustin\",\n\t\"Pedro\",\n\t\"Derrick\",\n\t\"Dan\",\n\t\"Lewis\",\n\t\"Zachary\",\n\t\"Corey\",\n\t\"Herman\",\n\t\"Maurice\",\n\t\"Vernon\",\n\t\"Roberto\",\n\t\"Clyde\",\n\t\"Glen\",\n\t\"Hector\",\n\t\"Shane\",\n\t\"Ricardo\",\n\t\"Sam\",\n\t\"Rick\",\n\t\"Lester\",\n\t\"Brent\",\n\t\"Ramon\",\n\t\"Charlie\",\n\t\"Tyler\",\n\t\"Gilbert\",\n\t\"Gene\",\n\t\"Marc\",\n\t\"Reginald\",\n\t\"Ruben\",\n\t\"Brett\",\n\t\"Angel\",\n\t\"Nathaniel\",\n\t\"Rafael\",\n\t\"Leslie\",\n\t\"Edgar\",\n\t\"Milton\",\n\t\"Raul\",\n\t\"Ben\",\n\t\"Chester\",\n\t\"Cecil\",\n\t\"Duane\",\n\t\"Franklin\",\n\t\"Andre\",\n\t\"Elmer\",\n\t\"Brad\",\n\t\"Gabriel\",\n\t\"Ron\",\n\t\"Mitchell\",\n\t\"Roland\",\n\t\"Arnold\",\n\t\"Harvey\",\n\t\"Jared\",\n\t\"Adrian\",\n\t\"Karl\",\n\t\"Cory\",\n\t\"Claude\",\n\t\"Erik\",\n\t\"Darryl\",\n\t\"Jamie\",\n\t\"Neil\",\n\t\"Jessie\",\n\t\"Christian\",\n\t\"Javier\",\n\t\"Fernando\",\n\t\"Clinton\",\n\t\"Ted\",\n\t\"Mathew\",\n\t\"Tyrone\",\n\t\"Darren\",\n\t\"Lonnie\",\n\t\"Lance\",\n\t\"Cody\",\n\t\"Julio\",\n\t\"Kelly\",\n\t\"Kurt\",\n\t\"Allan\",\n\t\"Nelson\",\n\t\"Guy\",\n\t\"Clayton\",\n\t\"Hugh\",\n\t\"Max\",\n\t\"Dwayne\",\n\t\"Dwight\",\n\t\"Armando\",\n\t\"Felix\",\n\t\"Jimmie\",\n\t\"Everett\",\n\t\"Jordan\",\n\t\"Ian\",\n\t\"Wallace\",\n\t\"Ken\",\n\t\"Bob\",\n\t\"Jaime\",\n\t\"Casey\",\n\t\"Alfredo\",\n\t\"Alberto\",\n\t\"Dave\",\n\t\"Ivan\",\n\t\"Johnnie\",\n\t\"Sidney\",\n\t\"Byron\",\n\t\"Julian\",\n\t\"Isaac\",\n\t\"Morris\",\n\t\"Clifton\",\n\t\"Willard\",\n\t\"Daryl\",\n\t\"Ross\",\n\t\"Virgil\",\n\t\"Andy\",\n\t\"Marshall\",\n\t\"Salvador\",\n\t\"Perry\",\n\t\"Kirk\",\n\t\"Sergio\",\n\t\"Marion\",\n\t\"Tracy\",\n\t\"Seth\",\n\t\"Kent\",\n\t\"Terrance\",\n\t\"Rene\",\n\t\"Eduardo\",\n\t\"Terrence\",\n\t\"Enrique\",\n\t\"Freddie\",\n\t\"Wade\",\n\t\"Austin\",\n\t\"Stuart\",\n\t\"Fredrick\",\n\t\"Arturo\",\n\t\"Alejandro\",\n\t\"Jackie\",\n\t\"Joey\",\n\t\"Nick\",\n\t\"Luther\",\n\t\"Wendell\",\n\t\"Jeremiah\",\n\t\"Evan\",\n\t\"Julius\",\n\t\"Dana\",\n\t\"Donnie\",\n\t\"Otis\",\n\t\"Shannon\",\n\t\"Trevor\",\n\t\"Oliver\",\n\t\"Luke\",\n\t\"Homer\",\n\t\"Gerard\",\n\t\"Doug\",\n\t\"Kenny\",\n\t\"Hubert\",\n\t\"Angelo\",\n\t\"Shaun\",\n\t\"Lyle\",\n\t\"Matt\",\n\t\"Lynn\",\n\t\"Alfonso\",\n\t\"Orlando\",\n\t\"Rex\",\n\t\"Carlton\",\n\t\"Ernesto\",\n\t\"Cameron\",\n\t\"Neal\",\n\t\"Pablo\",\n\t\"Lorenzo\",\n\t\"Omar\",\n\t\"Wilbur\",\n\t\"Blake\",\n\t\"Grant\",\n\t\"Horace\",\n\t\"Roderick\",\n\t\"Kerry\",\n\t\"Abraham\",\n\t\"Willis\",\n\t\"Rickey\",\n\t\"Jean\",\n\t\"Ira\",\n\t\"Andres\",\n\t\"Cesar\",\n\t\"Johnathan\",\n\t\"Malcolm\",\n\t\"Rudolph\",\n\t\"Damon\",\n\t\"Kelvin\",\n\t\"Rudy\",\n\t\"Preston\",\n\t\"Alton\",\n\t\"Archie\",\n\t\"Marco\",\n\t\"Wm\",\n\t\"Pete\",\n\t\"Randolph\",\n\t\"Garry\",\n\t\"Geoffrey\",\n\t\"Jonathon\",\n\t\"Felipe\",\n\t\"Bennie\",\n\t\"Gerardo\",\n\t\"Ed\",\n\t\"Dominic\",\n\t\"Robin\",\n\t\"Loren\",\n\t\"Delbert\",\n\t\"Colin\",\n\t\"Guillermo\",\n\t\"Earnest\",\n\t\"Lucas\",\n\t\"Benny\",\n\t\"Noel\",\n\t\"Spencer\",\n\t\"Rodolfo\",\n\t\"Myron\",\n\t\"Edmund\",\n\t\"Garrett\",\n\t\"Salvatore\",\n\t\"Cedric\",\n\t\"Lowell\",\n\t\"Gregg\",\n\t\"Sherman\",\n\t\"Wilson\",\n\t\"Devin\",\n\t\"Sylvester\",\n\t\"Kim\",\n\t\"Roosevelt\",\n\t\"Israel\",\n\t\"Jermaine\",\n\t\"Forrest\",\n\t\"Wilbert\",\n\t\"Leland\",\n\t\"Simon\",\n\t\"Guadalupe\",\n\t\"Clark\",\n\t\"Irving\",\n\t\"Carroll\",\n\t\"Bryant\",\n\t\"Owen\",\n\t\"Rufus\",\n\t\"Woodrow\",\n\t\"Sammy\",\n\t\"Kristopher\",\n\t\"Mack\",\n\t\"Levi\",\n\t\"Marcos\",\n\t\"Gustavo\",\n\t\"Jake\",\n\t\"Lionel\",\n\t\"Marty\",\n\t\"Taylor\",\n\t\"Ellis\",\n\t\"Dallas\",\n\t\"Gilberto\",\n\t\"Clint\",\n\t\"Nicolas\",\n\t\"Laurence\",\n\t\"Ismael\",\n\t\"Orville\",\n\t\"Drew\",\n\t\"Jody\",\n\t\"Ervin\",\n\t\"Dewey\",\n\t\"Al\",\n\t\"Wilfred\",\n\t\"Josh\",\n\t\"Hugo\",\n\t\"Ignacio\",\n\t\"Caleb\",\n\t\"Tomas\",\n\t\"Sheldon\",\n\t\"Erick\",\n\t\"Frankie\",\n\t\"Stewart\",\n\t\"Doyle\",\n\t\"Darrel\",\n\t\"Rogelio\",\n\t\"Terence\",\n\t\"Santiago\",\n\t\"Alonzo\",\n\t\"Elias\",\n\t\"Bert\",\n\t\"Elbert\",\n\t\"Ramiro\",\n\t\"Conrad\",\n\t\"Pat\",\n\t\"Noah\",\n\t\"Grady\",\n\t\"Phil\",\n\t\"Cornelius\",\n\t\"Lamar\",\n\t\"Rolando\",\n\t\"Clay\",\n\t\"Percy\",\n\t\"Dexter\",\n\t\"Bradford\",\n\t\"Merle\",\n\t\"Darin\",\n\t\"Amos\",\n\t\"Terrell\",\n\t\"Moses\",\n\t\"Irvin\",\n\t\"Saul\",\n\t\"Roman\",\n\t\"Darnell\",\n\t\"Randal\",\n\t\"Tommie\",\n\t\"Timmy\",\n\t\"Darrin\",\n\t\"Winston\",\n\t\"Brendan\",\n\t\"Toby\",\n\t\"Van\",\n\t\"Abel\",\n\t\"Dominick\",\n\t\"Boyd\",\n\t\"Courtney\",\n\t\"Jan\",\n\t\"Emilio\",\n\t\"Elijah\",\n\t\"Cary\",\n\t\"Domingo\",\n\t\"Santos\",\n\t\"Aubrey\",\n\t\"Emmett\",\n\t\"Marlon\",\n\t\"Emanuel\",\n\t\"Jerald\",\n\t\"Edmond\"\n\t];","module[\"exports\"] = [\n\t\"Mary\",\n\t\"Patricia\",\n\t\"Linda\",\n\t\"Barbara\",\n\t\"Elizabeth\",\n\t\"Jennifer\",\n\t\"Maria\",\n\t\"Susan\",\n\t\"Margaret\",\n\t\"Dorothy\",\n\t\"Lisa\",\n\t\"Nancy\",\n\t\"Karen\",\n\t\"Betty\",\n\t\"Helen\",\n\t\"Sandra\",\n\t\"Donna\",\n\t\"Carol\",\n\t\"Ruth\",\n\t\"Sharon\",\n\t\"Michelle\",\n\t\"Laura\",\n\t\"Sarah\",\n\t\"Kimberly\",\n\t\"Deborah\",\n\t\"Jessica\",\n\t\"Shirley\",\n\t\"Cynthia\",\n\t\"Angela\",\n\t\"Melissa\",\n\t\"Brenda\",\n\t\"Amy\",\n\t\"Anna\",\n\t\"Rebecca\",\n\t\"Virginia\",\n\t\"Kathleen\",\n\t\"Pamela\",\n\t\"Martha\",\n\t\"Debra\",\n\t\"Amanda\",\n\t\"Stephanie\",\n\t\"Carolyn\",\n\t\"Christine\",\n\t\"Marie\",\n\t\"Janet\",\n\t\"Catherine\",\n\t\"Frances\",\n\t\"Ann\",\n\t\"Joyce\",\n\t\"Diane\",\n\t\"Alice\",\n\t\"Julie\",\n\t\"Heather\",\n\t\"Teresa\",\n\t\"Doris\",\n\t\"Gloria\",\n\t\"Evelyn\",\n\t\"Jean\",\n\t\"Cheryl\",\n\t\"Mildred\",\n\t\"Katherine\",\n\t\"Joan\",\n\t\"Ashley\",\n\t\"Judith\",\n\t\"Rose\",\n\t\"Janice\",\n\t\"Kelly\",\n\t\"Nicole\",\n\t\"Judy\",\n\t\"Christina\",\n\t\"Kathy\",\n\t\"Theresa\",\n\t\"Beverly\",\n\t\"Denise\",\n\t\"Tammy\",\n\t\"Irene\",\n\t\"Jane\",\n\t\"Lori\",\n\t\"Rachel\",\n\t\"Marilyn\",\n\t\"Andrea\",\n\t\"Kathryn\",\n\t\"Louise\",\n\t\"Sara\",\n\t\"Anne\",\n\t\"Jacqueline\",\n\t\"Wanda\",\n\t\"Bonnie\",\n\t\"Julia\",\n\t\"Ruby\",\n\t\"Lois\",\n\t\"Tina\",\n\t\"Phyllis\",\n\t\"Norma\",\n\t\"Paula\",\n\t\"Diana\",\n\t\"Annie\",\n\t\"Lillian\",\n\t\"Emily\",\n\t\"Robin\",\n\t\"Peggy\",\n\t\"Crystal\",\n\t\"Gladys\",\n\t\"Rita\",\n\t\"Dawn\",\n\t\"Connie\",\n\t\"Florence\",\n\t\"Tracy\",\n\t\"Edna\",\n\t\"Tiffany\",\n\t\"Carmen\",\n\t\"Rosa\",\n\t\"Cindy\",\n\t\"Grace\",\n\t\"Wendy\",\n\t\"Victoria\",\n\t\"Edith\",\n\t\"Kim\",\n\t\"Sherry\",\n\t\"Sylvia\",\n\t\"Josephine\",\n\t\"Thelma\",\n\t\"Shannon\",\n\t\"Sheila\",\n\t\"Ethel\",\n\t\"Ellen\",\n\t\"Elaine\",\n\t\"Marjorie\",\n\t\"Carrie\",\n\t\"Charlotte\",\n\t\"Monica\",\n\t\"Esther\",\n\t\"Pauline\",\n\t\"Emma\",\n\t\"Juanita\",\n\t\"Anita\",\n\t\"Rhonda\",\n\t\"Hazel\",\n\t\"Amber\",\n\t\"Eva\",\n\t\"Debbie\",\n\t\"April\",\n\t\"Leslie\",\n\t\"Clara\",\n\t\"Lucille\",\n\t\"Jamie\",\n\t\"Joanne\",\n\t\"Eleanor\",\n\t\"Valerie\",\n\t\"Danielle\",\n\t\"Megan\",\n\t\"Alicia\",\n\t\"Suzanne\",\n\t\"Michele\",\n\t\"Gail\",\n\t\"Bertha\",\n\t\"Darlene\",\n\t\"Veronica\",\n\t\"Jill\",\n\t\"Erin\",\n\t\"Geraldine\",\n\t\"Lauren\",\n\t\"Cathy\",\n\t\"Joann\",\n\t\"Lorraine\",\n\t\"Lynn\",\n\t\"Sally\",\n\t\"Regina\",\n\t\"Erica\",\n\t\"Beatrice\",\n\t\"Dolores\",\n\t\"Bernice\",\n\t\"Audrey\",\n\t\"Yvonne\",\n\t\"Annette\",\n\t\"June\",\n\t\"Samantha\",\n\t\"Marion\",\n\t\"Dana\",\n\t\"Stacy\",\n\t\"Ana\",\n\t\"Renee\",\n\t\"Ida\",\n\t\"Vivian\",\n\t\"Roberta\",\n\t\"Holly\",\n\t\"Brittany\",\n\t\"Melanie\",\n\t\"Loretta\",\n\t\"Yolanda\",\n\t\"Jeanette\",\n\t\"Laurie\",\n\t\"Katie\",\n\t\"Kristen\",\n\t\"Vanessa\",\n\t\"Alma\",\n\t\"Sue\",\n\t\"Elsie\",\n\t\"Beth\",\n\t\"Jeanne\",\n\t\"Vicki\",\n\t\"Carla\",\n\t\"Tara\",\n\t\"Rosemary\",\n\t\"Eileen\",\n\t\"Terri\",\n\t\"Gertrude\",\n\t\"Lucy\",\n\t\"Tonya\",\n\t\"Ella\",\n\t\"Stacey\",\n\t\"Wilma\",\n\t\"Gina\",\n\t\"Kristin\",\n\t\"Jessie\",\n\t\"Natalie\",\n\t\"Agnes\",\n\t\"Vera\",\n\t\"Willie\",\n\t\"Charlene\",\n\t\"Bessie\",\n\t\"Delores\",\n\t\"Melinda\",\n\t\"Pearl\",\n\t\"Arlene\",\n\t\"Maureen\",\n\t\"Colleen\",\n\t\"Allison\",\n\t\"Tamara\",\n\t\"Joy\",\n\t\"Georgia\",\n\t\"Constance\",\n\t\"Lillie\",\n\t\"Claudia\",\n\t\"Jackie\",\n\t\"Marcia\",\n\t\"Tanya\",\n\t\"Nellie\",\n\t\"Minnie\",\n\t\"Marlene\",\n\t\"Heidi\",\n\t\"Glenda\",\n\t\"Lydia\",\n\t\"Viola\",\n\t\"Courtney\",\n\t\"Marian\",\n\t\"Stella\",\n\t\"Caroline\",\n\t\"Dora\",\n\t\"Jo\",\n\t\"Vickie\",\n\t\"Mattie\",\n\t\"Terry\",\n\t\"Maxine\",\n\t\"Irma\",\n\t\"Mabel\",\n\t\"Marsha\",\n\t\"Myrtle\",\n\t\"Lena\",\n\t\"Christy\",\n\t\"Deanna\",\n\t\"Patsy\",\n\t\"Hilda\",\n\t\"Gwendolyn\",\n\t\"Jennie\",\n\t\"Nora\",\n\t\"Margie\",\n\t\"Nina\",\n\t\"Cassandra\",\n\t\"Leah\",\n\t\"Penny\",\n\t\"Kay\",\n\t\"Priscilla\",\n\t\"Naomi\",\n\t\"Carole\",\n\t\"Brandy\",\n\t\"Olga\",\n\t\"Billie\",\n\t\"Dianne\",\n\t\"Tracey\",\n\t\"Leona\",\n\t\"Jenny\",\n\t\"Felicia\",\n\t\"Sonia\",\n\t\"Miriam\",\n\t\"Velma\",\n\t\"Becky\",\n\t\"Bobbie\",\n\t\"Violet\",\n\t\"Kristina\",\n\t\"Toni\",\n\t\"Misty\",\n\t\"Mae\",\n\t\"Shelly\",\n\t\"Daisy\",\n\t\"Ramona\",\n\t\"Sherri\",\n\t\"Erika\",\n\t\"Katrina\",\n\t\"Claire\",\n\t\"Lindsey\",\n\t\"Lindsay\",\n\t\"Geneva\",\n\t\"Guadalupe\",\n\t\"Belinda\",\n\t\"Margarita\",\n\t\"Sheryl\",\n\t\"Cora\",\n\t\"Faye\",\n\t\"Ada\",\n\t\"Natasha\",\n\t\"Sabrina\",\n\t\"Isabel\",\n\t\"Marguerite\",\n\t\"Hattie\",\n\t\"Harriet\",\n\t\"Molly\",\n\t\"Cecilia\",\n\t\"Kristi\",\n\t\"Brandi\",\n\t\"Blanche\",\n\t\"Sandy\",\n\t\"Rosie\",\n\t\"Joanna\",\n\t\"Iris\",\n\t\"Eunice\",\n\t\"Angie\",\n\t\"Inez\",\n\t\"Lynda\",\n\t\"Madeline\",\n\t\"Amelia\",\n\t\"Alberta\",\n\t\"Genevieve\",\n\t\"Monique\",\n\t\"Jodi\",\n\t\"Janie\",\n\t\"Maggie\",\n\t\"Kayla\",\n\t\"Sonya\",\n\t\"Jan\",\n\t\"Lee\",\n\t\"Kristine\",\n\t\"Candace\",\n\t\"Fannie\",\n\t\"Maryann\",\n\t\"Opal\",\n\t\"Alison\",\n\t\"Yvette\",\n\t\"Melody\",\n\t\"Luz\",\n\t\"Susie\",\n\t\"Olivia\",\n\t\"Flora\",\n\t\"Shelley\",\n\t\"Kristy\",\n\t\"Mamie\",\n\t\"Lula\",\n\t\"Lola\",\n\t\"Verna\",\n\t\"Beulah\",\n\t\"Antoinette\",\n\t\"Candice\",\n\t\"Juana\",\n\t\"Jeannette\",\n\t\"Pam\",\n\t\"Kelli\",\n\t\"Hannah\",\n\t\"Whitney\",\n\t\"Bridget\",\n\t\"Karla\",\n\t\"Celia\",\n\t\"Latoya\",\n\t\"Patty\",\n\t\"Shelia\",\n\t\"Gayle\",\n\t\"Della\",\n\t\"Vicky\",\n\t\"Lynne\",\n\t\"Sheri\",\n\t\"Marianne\",\n\t\"Kara\",\n\t\"Jacquelyn\",\n\t\"Erma\",\n\t\"Blanca\",\n\t\"Myra\",\n\t\"Leticia\",\n\t\"Pat\",\n\t\"Krista\",\n\t\"Roxanne\",\n\t\"Angelica\",\n\t\"Johnnie\",\n\t\"Robyn\",\n\t\"Francis\",\n\t\"Adrienne\",\n\t\"Rosalie\",\n\t\"Alexandra\",\n\t\"Brooke\",\n\t\"Bethany\",\n\t\"Sadie\",\n\t\"Bernadette\",\n\t\"Traci\",\n\t\"Jody\",\n\t\"Kendra\",\n\t\"Jasmine\",\n\t\"Nichole\",\n\t\"Rachael\",\n\t\"Chelsea\",\n\t\"Mable\",\n\t\"Ernestine\",\n\t\"Muriel\",\n\t\"Marcella\",\n\t\"Elena\",\n\t\"Krystal\",\n\t\"Angelina\",\n\t\"Nadine\",\n\t\"Kari\",\n\t\"Estelle\",\n\t\"Dianna\",\n\t\"Paulette\",\n\t\"Lora\",\n\t\"Mona\",\n\t\"Doreen\",\n\t\"Rosemarie\",\n\t\"Angel\",\n\t\"Desiree\",\n\t\"Antonia\",\n\t\"Hope\",\n\t\"Ginger\",\n\t\"Janis\",\n\t\"Betsy\",\n\t\"Christie\",\n\t\"Freda\",\n\t\"Mercedes\",\n\t\"Meredith\",\n\t\"Lynette\",\n\t\"Teri\",\n\t\"Cristina\",\n\t\"Eula\",\n\t\"Leigh\",\n\t\"Meghan\",\n\t\"Sophia\",\n\t\"Eloise\",\n\t\"Rochelle\",\n\t\"Gretchen\",\n\t\"Cecelia\",\n\t\"Raquel\",\n\t\"Henrietta\",\n\t\"Alyssa\",\n\t\"Jana\",\n\t\"Kelley\",\n\t\"Gwen\",\n\t\"Kerry\",\n\t\"Jenna\",\n\t\"Tricia\",\n\t\"Laverne\",\n\t\"Olive\",\n\t\"Alexis\",\n\t\"Tasha\",\n\t\"Silvia\",\n\t\"Elvira\",\n\t\"Casey\",\n\t\"Delia\",\n\t\"Sophie\",\n\t\"Kate\",\n\t\"Patti\",\n\t\"Lorena\",\n\t\"Kellie\",\n\t\"Sonja\",\n\t\"Lila\",\n\t\"Lana\",\n\t\"Darla\",\n\t\"May\",\n\t\"Mindy\",\n\t\"Essie\",\n\t\"Mandy\",\n\t\"Lorene\",\n\t\"Elsa\",\n\t\"Josefina\",\n\t\"Jeannie\",\n\t\"Miranda\",\n\t\"Dixie\",\n\t\"Lucia\",\n\t\"Marta\",\n\t\"Faith\",\n\t\"Lela\",\n\t\"Johanna\",\n\t\"Shari\",\n\t\"Camille\",\n\t\"Tami\",\n\t\"Shawna\",\n\t\"Elisa\",\n\t\"Ebony\",\n\t\"Melba\",\n\t\"Ora\",\n\t\"Nettie\",\n\t\"Tabitha\",\n\t\"Ollie\",\n\t\"Jaime\",\n\t\"Winifred\",\n\t\"Kristie\"\n\t];","module[\"exports\"] = [\n  \"Aaliyah\",\n  \"Aaron\",\n  \"Abagail\",\n  \"Abbey\",\n  \"Abbie\",\n  \"Abbigail\",\n  \"Abby\",\n  \"Abdiel\",\n  \"Abdul\",\n  \"Abdullah\",\n  \"Abe\",\n  \"Abel\",\n  \"Abelardo\",\n  \"Abigail\",\n  \"Abigale\",\n  \"Abigayle\",\n  \"Abner\",\n  \"Abraham\",\n  \"Ada\",\n  \"Adah\",\n  \"Adalberto\",\n  \"Adaline\",\n  \"Adam\",\n  \"Adan\",\n  \"Addie\",\n  \"Addison\",\n  \"Adela\",\n  \"Adelbert\",\n  \"Adele\",\n  \"Adelia\",\n  \"Adeline\",\n  \"Adell\",\n  \"Adella\",\n  \"Adelle\",\n  \"Aditya\",\n  \"Adolf\",\n  \"Adolfo\",\n  \"Adolph\",\n  \"Adolphus\",\n  \"Adonis\",\n  \"Adrain\",\n  \"Adrian\",\n  \"Adriana\",\n  \"Adrianna\",\n  \"Adriel\",\n  \"Adrien\",\n  \"Adrienne\",\n  \"Afton\",\n  \"Aglae\",\n  \"Agnes\",\n  \"Agustin\",\n  \"Agustina\",\n  \"Ahmad\",\n  \"Ahmed\",\n  \"Aida\",\n  \"Aidan\",\n  \"Aiden\",\n  \"Aileen\",\n  \"Aimee\",\n  \"Aisha\",\n  \"Aiyana\",\n  \"Akeem\",\n  \"Al\",\n  \"Alaina\",\n  \"Alan\",\n  \"Alana\",\n  \"Alanis\",\n  \"Alanna\",\n  \"Alayna\",\n  \"Alba\",\n  \"Albert\",\n  \"Alberta\",\n  \"Albertha\",\n  \"Alberto\",\n  \"Albin\",\n  \"Albina\",\n  \"Alda\",\n  \"Alden\",\n  \"Alec\",\n  \"Aleen\",\n  \"Alejandra\",\n  \"Alejandrin\",\n  \"Alek\",\n  \"Alena\",\n  \"Alene\",\n  \"Alessandra\",\n  \"Alessandro\",\n  \"Alessia\",\n  \"Aletha\",\n  \"Alex\",\n  \"Alexa\",\n  \"Alexander\",\n  \"Alexandra\",\n  \"Alexandre\",\n  \"Alexandrea\",\n  \"Alexandria\",\n  \"Alexandrine\",\n  \"Alexandro\",\n  \"Alexane\",\n  \"Alexanne\",\n  \"Alexie\",\n  \"Alexis\",\n  \"Alexys\",\n  \"Alexzander\",\n  \"Alf\",\n  \"Alfonso\",\n  \"Alfonzo\",\n  \"Alford\",\n  \"Alfred\",\n  \"Alfreda\",\n  \"Alfredo\",\n  \"Ali\",\n  \"Alia\",\n  \"Alice\",\n  \"Alicia\",\n  \"Alisa\",\n  \"Alisha\",\n  \"Alison\",\n  \"Alivia\",\n  \"Aliya\",\n  \"Aliyah\",\n  \"Aliza\",\n  \"Alize\",\n  \"Allan\",\n  \"Allen\",\n  \"Allene\",\n  \"Allie\",\n  \"Allison\",\n  \"Ally\",\n  \"Alphonso\",\n  \"Alta\",\n  \"Althea\",\n  \"Alva\",\n  \"Alvah\",\n  \"Alvena\",\n  \"Alvera\",\n  \"Alverta\",\n  \"Alvina\",\n  \"Alvis\",\n  \"Alyce\",\n  \"Alycia\",\n  \"Alysa\",\n  \"Alysha\",\n  \"Alyson\",\n  \"Alysson\",\n  \"Amalia\",\n  \"Amanda\",\n  \"Amani\",\n  \"Amara\",\n  \"Amari\",\n  \"Amaya\",\n  \"Amber\",\n  \"Ambrose\",\n  \"Amelia\",\n  \"Amelie\",\n  \"Amely\",\n  \"America\",\n  \"Americo\",\n  \"Amie\",\n  \"Amina\",\n  \"Amir\",\n  \"Amira\",\n  \"Amiya\",\n  \"Amos\",\n  \"Amparo\",\n  \"Amy\",\n  \"Amya\",\n  \"Ana\",\n  \"Anabel\",\n  \"Anabelle\",\n  \"Anahi\",\n  \"Anais\",\n  \"Anastacio\",\n  \"Anastasia\",\n  \"Anderson\",\n  \"Andre\",\n  \"Andreane\",\n  \"Andreanne\",\n  \"Andres\",\n  \"Andrew\",\n  \"Andy\",\n  \"Angel\",\n  \"Angela\",\n  \"Angelica\",\n  \"Angelina\",\n  \"Angeline\",\n  \"Angelita\",\n  \"Angelo\",\n  \"Angie\",\n  \"Angus\",\n  \"Anibal\",\n  \"Anika\",\n  \"Anissa\",\n  \"Anita\",\n  \"Aniya\",\n  \"Aniyah\",\n  \"Anjali\",\n  \"Anna\",\n  \"Annabel\",\n  \"Annabell\",\n  \"Annabelle\",\n  \"Annalise\",\n  \"Annamae\",\n  \"Annamarie\",\n  \"Anne\",\n  \"Annetta\",\n  \"Annette\",\n  \"Annie\",\n  \"Ansel\",\n  \"Ansley\",\n  \"Anthony\",\n  \"Antoinette\",\n  \"Antone\",\n  \"Antonetta\",\n  \"Antonette\",\n  \"Antonia\",\n  \"Antonietta\",\n  \"Antonina\",\n  \"Antonio\",\n  \"Antwan\",\n  \"Antwon\",\n  \"Anya\",\n  \"April\",\n  \"Ara\",\n  \"Araceli\",\n  \"Aracely\",\n  \"Arch\",\n  \"Archibald\",\n  \"Ardella\",\n  \"Arden\",\n  \"Ardith\",\n  \"Arely\",\n  \"Ari\",\n  \"Ariane\",\n  \"Arianna\",\n  \"Aric\",\n  \"Ariel\",\n  \"Arielle\",\n  \"Arjun\",\n  \"Arlene\",\n  \"Arlie\",\n  \"Arlo\",\n  \"Armand\",\n  \"Armando\",\n  \"Armani\",\n  \"Arnaldo\",\n  \"Arne\",\n  \"Arno\",\n  \"Arnold\",\n  \"Arnoldo\",\n  \"Arnulfo\",\n  \"Aron\",\n  \"Art\",\n  \"Arthur\",\n  \"Arturo\",\n  \"Arvel\",\n  \"Arvid\",\n  \"Arvilla\",\n  \"Aryanna\",\n  \"Asa\",\n  \"Asha\",\n  \"Ashlee\",\n  \"Ashleigh\",\n  \"Ashley\",\n  \"Ashly\",\n  \"Ashlynn\",\n  \"Ashton\",\n  \"Ashtyn\",\n  \"Asia\",\n  \"Assunta\",\n  \"Astrid\",\n  \"Athena\",\n  \"Aubree\",\n  \"Aubrey\",\n  \"Audie\",\n  \"Audra\",\n  \"Audreanne\",\n  \"Audrey\",\n  \"August\",\n  \"Augusta\",\n  \"Augustine\",\n  \"Augustus\",\n  \"Aurelia\",\n  \"Aurelie\",\n  \"Aurelio\",\n  \"Aurore\",\n  \"Austen\",\n  \"Austin\",\n  \"Austyn\",\n  \"Autumn\",\n  \"Ava\",\n  \"Avery\",\n  \"Avis\",\n  \"Axel\",\n  \"Ayana\",\n  \"Ayden\",\n  \"Ayla\",\n  \"Aylin\",\n  \"Baby\",\n  \"Bailee\",\n  \"Bailey\",\n  \"Barbara\",\n  \"Barney\",\n  \"Baron\",\n  \"Barrett\",\n  \"Barry\",\n  \"Bart\",\n  \"Bartholome\",\n  \"Barton\",\n  \"Baylee\",\n  \"Beatrice\",\n  \"Beau\",\n  \"Beaulah\",\n  \"Bell\",\n  \"Bella\",\n  \"Belle\",\n  \"Ben\",\n  \"Benedict\",\n  \"Benjamin\",\n  \"Bennett\",\n  \"Bennie\",\n  \"Benny\",\n  \"Benton\",\n  \"Berenice\",\n  \"Bernadette\",\n  \"Bernadine\",\n  \"Bernard\",\n  \"Bernardo\",\n  \"Berneice\",\n  \"Bernhard\",\n  \"Bernice\",\n  \"Bernie\",\n  \"Berniece\",\n  \"Bernita\",\n  \"Berry\",\n  \"Bert\",\n  \"Berta\",\n  \"Bertha\",\n  \"Bertram\",\n  \"Bertrand\",\n  \"Beryl\",\n  \"Bessie\",\n  \"Beth\",\n  \"Bethany\",\n  \"Bethel\",\n  \"Betsy\",\n  \"Bette\",\n  \"Bettie\",\n  \"Betty\",\n  \"Bettye\",\n  \"Beulah\",\n  \"Beverly\",\n  \"Bianka\",\n  \"Bill\",\n  \"Billie\",\n  \"Billy\",\n  \"Birdie\",\n  \"Blair\",\n  \"Blaise\",\n  \"Blake\",\n  \"Blanca\",\n  \"Blanche\",\n  \"Blaze\",\n  \"Bo\",\n  \"Bobbie\",\n  \"Bobby\",\n  \"Bonita\",\n  \"Bonnie\",\n  \"Boris\",\n  \"Boyd\",\n  \"Brad\",\n  \"Braden\",\n  \"Bradford\",\n  \"Bradley\",\n  \"Bradly\",\n  \"Brady\",\n  \"Braeden\",\n  \"Brain\",\n  \"Brandi\",\n  \"Brando\",\n  \"Brandon\",\n  \"Brandt\",\n  \"Brandy\",\n  \"Brandyn\",\n  \"Brannon\",\n  \"Branson\",\n  \"Brant\",\n  \"Braulio\",\n  \"Braxton\",\n  \"Brayan\",\n  \"Breana\",\n  \"Breanna\",\n  \"Breanne\",\n  \"Brenda\",\n  \"Brendan\",\n  \"Brenden\",\n  \"Brendon\",\n  \"Brenna\",\n  \"Brennan\",\n  \"Brennon\",\n  \"Brent\",\n  \"Bret\",\n  \"Brett\",\n  \"Bria\",\n  \"Brian\",\n  \"Briana\",\n  \"Brianne\",\n  \"Brice\",\n  \"Bridget\",\n  \"Bridgette\",\n  \"Bridie\",\n  \"Brielle\",\n  \"Brigitte\",\n  \"Brionna\",\n  \"Brisa\",\n  \"Britney\",\n  \"Brittany\",\n  \"Brock\",\n  \"Broderick\",\n  \"Brody\",\n  \"Brook\",\n  \"Brooke\",\n  \"Brooklyn\",\n  \"Brooks\",\n  \"Brown\",\n  \"Bruce\",\n  \"Bryana\",\n  \"Bryce\",\n  \"Brycen\",\n  \"Bryon\",\n  \"Buck\",\n  \"Bud\",\n  \"Buddy\",\n  \"Buford\",\n  \"Bulah\",\n  \"Burdette\",\n  \"Burley\",\n  \"Burnice\",\n  \"Buster\",\n  \"Cade\",\n  \"Caden\",\n  \"Caesar\",\n  \"Caitlyn\",\n  \"Cale\",\n  \"Caleb\",\n  \"Caleigh\",\n  \"Cali\",\n  \"Calista\",\n  \"Callie\",\n  \"Camden\",\n  \"Cameron\",\n  \"Camila\",\n  \"Camilla\",\n  \"Camille\",\n  \"Camren\",\n  \"Camron\",\n  \"Camryn\",\n  \"Camylle\",\n  \"Candace\",\n  \"Candelario\",\n  \"Candice\",\n  \"Candida\",\n  \"Candido\",\n  \"Cara\",\n  \"Carey\",\n  \"Carissa\",\n  \"Carlee\",\n  \"Carleton\",\n  \"Carley\",\n  \"Carli\",\n  \"Carlie\",\n  \"Carlo\",\n  \"Carlos\",\n  \"Carlotta\",\n  \"Carmel\",\n  \"Carmela\",\n  \"Carmella\",\n  \"Carmelo\",\n  \"Carmen\",\n  \"Carmine\",\n  \"Carol\",\n  \"Carolanne\",\n  \"Carole\",\n  \"Carolina\",\n  \"Caroline\",\n  \"Carolyn\",\n  \"Carolyne\",\n  \"Carrie\",\n  \"Carroll\",\n  \"Carson\",\n  \"Carter\",\n  \"Cary\",\n  \"Casandra\",\n  \"Casey\",\n  \"Casimer\",\n  \"Casimir\",\n  \"Casper\",\n  \"Cassandra\",\n  \"Cassandre\",\n  \"Cassidy\",\n  \"Cassie\",\n  \"Catalina\",\n  \"Caterina\",\n  \"Catharine\",\n  \"Catherine\",\n  \"Cathrine\",\n  \"Cathryn\",\n  \"Cathy\",\n  \"Cayla\",\n  \"Ceasar\",\n  \"Cecelia\",\n  \"Cecil\",\n  \"Cecile\",\n  \"Cecilia\",\n  \"Cedrick\",\n  \"Celestine\",\n  \"Celestino\",\n  \"Celia\",\n  \"Celine\",\n  \"Cesar\",\n  \"Chad\",\n  \"Chadd\",\n  \"Chadrick\",\n  \"Chaim\",\n  \"Chance\",\n  \"Chandler\",\n  \"Chanel\",\n  \"Chanelle\",\n  \"Charity\",\n  \"Charlene\",\n  \"Charles\",\n  \"Charley\",\n  \"Charlie\",\n  \"Charlotte\",\n  \"Chase\",\n  \"Chasity\",\n  \"Chauncey\",\n  \"Chaya\",\n  \"Chaz\",\n  \"Chelsea\",\n  \"Chelsey\",\n  \"Chelsie\",\n  \"Chesley\",\n  \"Chester\",\n  \"Chet\",\n  \"Cheyanne\",\n  \"Cheyenne\",\n  \"Chloe\",\n  \"Chris\",\n  \"Christ\",\n  \"Christa\",\n  \"Christelle\",\n  \"Christian\",\n  \"Christiana\",\n  \"Christina\",\n  \"Christine\",\n  \"Christop\",\n  \"Christophe\",\n  \"Christopher\",\n  \"Christy\",\n  \"Chyna\",\n  \"Ciara\",\n  \"Cicero\",\n  \"Cielo\",\n  \"Cierra\",\n  \"Cindy\",\n  \"Citlalli\",\n  \"Clair\",\n  \"Claire\",\n  \"Clara\",\n  \"Clarabelle\",\n  \"Clare\",\n  \"Clarissa\",\n  \"Clark\",\n  \"Claud\",\n  \"Claude\",\n  \"Claudia\",\n  \"Claudie\",\n  \"Claudine\",\n  \"Clay\",\n  \"Clemens\",\n  \"Clement\",\n  \"Clementina\",\n  \"Clementine\",\n  \"Clemmie\",\n  \"Cleo\",\n  \"Cleora\",\n  \"Cleta\",\n  \"Cletus\",\n  \"Cleve\",\n  \"Cleveland\",\n  \"Clifford\",\n  \"Clifton\",\n  \"Clint\",\n  \"Clinton\",\n  \"Clotilde\",\n  \"Clovis\",\n  \"Cloyd\",\n  \"Clyde\",\n  \"Coby\",\n  \"Cody\",\n  \"Colby\",\n  \"Cole\",\n  \"Coleman\",\n  \"Colin\",\n  \"Colleen\",\n  \"Collin\",\n  \"Colt\",\n  \"Colten\",\n  \"Colton\",\n  \"Columbus\",\n  \"Concepcion\",\n  \"Conner\",\n  \"Connie\",\n  \"Connor\",\n  \"Conor\",\n  \"Conrad\",\n  \"Constance\",\n  \"Constantin\",\n  \"Consuelo\",\n  \"Cooper\",\n  \"Cora\",\n  \"Coralie\",\n  \"Corbin\",\n  \"Cordelia\",\n  \"Cordell\",\n  \"Cordia\",\n  \"Cordie\",\n  \"Corene\",\n  \"Corine\",\n  \"Cornelius\",\n  \"Cornell\",\n  \"Corrine\",\n  \"Cortez\",\n  \"Cortney\",\n  \"Cory\",\n  \"Coty\",\n  \"Courtney\",\n  \"Coy\",\n  \"Craig\",\n  \"Crawford\",\n  \"Creola\",\n  \"Cristal\",\n  \"Cristian\",\n  \"Cristina\",\n  \"Cristobal\",\n  \"Cristopher\",\n  \"Cruz\",\n  \"Crystal\",\n  \"Crystel\",\n  \"Cullen\",\n  \"Curt\",\n  \"Curtis\",\n  \"Cydney\",\n  \"Cynthia\",\n  \"Cyril\",\n  \"Cyrus\",\n  \"Dagmar\",\n  \"Dahlia\",\n  \"Daija\",\n  \"Daisha\",\n  \"Daisy\",\n  \"Dakota\",\n  \"Dale\",\n  \"Dallas\",\n  \"Dallin\",\n  \"Dalton\",\n  \"Damaris\",\n  \"Dameon\",\n  \"Damian\",\n  \"Damien\",\n  \"Damion\",\n  \"Damon\",\n  \"Dan\",\n  \"Dana\",\n  \"Dandre\",\n  \"Dane\",\n  \"D'angelo\",\n  \"Dangelo\",\n  \"Danial\",\n  \"Daniela\",\n  \"Daniella\",\n  \"Danielle\",\n  \"Danika\",\n  \"Dannie\",\n  \"Danny\",\n  \"Dante\",\n  \"Danyka\",\n  \"Daphne\",\n  \"Daphnee\",\n  \"Daphney\",\n  \"Darby\",\n  \"Daren\",\n  \"Darian\",\n  \"Dariana\",\n  \"Darien\",\n  \"Dario\",\n  \"Darion\",\n  \"Darius\",\n  \"Darlene\",\n  \"Daron\",\n  \"Darrel\",\n  \"Darrell\",\n  \"Darren\",\n  \"Darrick\",\n  \"Darrin\",\n  \"Darrion\",\n  \"Darron\",\n  \"Darryl\",\n  \"Darwin\",\n  \"Daryl\",\n  \"Dashawn\",\n  \"Dasia\",\n  \"Dave\",\n  \"David\",\n  \"Davin\",\n  \"Davion\",\n  \"Davon\",\n  \"Davonte\",\n  \"Dawn\",\n  \"Dawson\",\n  \"Dax\",\n  \"Dayana\",\n  \"Dayna\",\n  \"Dayne\",\n  \"Dayton\",\n  \"Dean\",\n  \"Deangelo\",\n  \"Deanna\",\n  \"Deborah\",\n  \"Declan\",\n  \"Dedric\",\n  \"Dedrick\",\n  \"Dee\",\n  \"Deion\",\n  \"Deja\",\n  \"Dejah\",\n  \"Dejon\",\n  \"Dejuan\",\n  \"Delaney\",\n  \"Delbert\",\n  \"Delfina\",\n  \"Delia\",\n  \"Delilah\",\n  \"Dell\",\n  \"Della\",\n  \"Delmer\",\n  \"Delores\",\n  \"Delpha\",\n  \"Delphia\",\n  \"Delphine\",\n  \"Delta\",\n  \"Demarco\",\n  \"Demarcus\",\n  \"Demario\",\n  \"Demetris\",\n  \"Demetrius\",\n  \"Demond\",\n  \"Dena\",\n  \"Denis\",\n  \"Dennis\",\n  \"Deon\",\n  \"Deondre\",\n  \"Deontae\",\n  \"Deonte\",\n  \"Dereck\",\n  \"Derek\",\n  \"Derick\",\n  \"Deron\",\n  \"Derrick\",\n  \"Deshaun\",\n  \"Deshawn\",\n  \"Desiree\",\n  \"Desmond\",\n  \"Dessie\",\n  \"Destany\",\n  \"Destin\",\n  \"Destinee\",\n  \"Destiney\",\n  \"Destini\",\n  \"Destiny\",\n  \"Devan\",\n  \"Devante\",\n  \"Deven\",\n  \"Devin\",\n  \"Devon\",\n  \"Devonte\",\n  \"Devyn\",\n  \"Dewayne\",\n  \"Dewitt\",\n  \"Dexter\",\n  \"Diamond\",\n  \"Diana\",\n  \"Dianna\",\n  \"Diego\",\n  \"Dillan\",\n  \"Dillon\",\n  \"Dimitri\",\n  \"Dina\",\n  \"Dino\",\n  \"Dion\",\n  \"Dixie\",\n  \"Dock\",\n  \"Dolly\",\n  \"Dolores\",\n  \"Domenic\",\n  \"Domenica\",\n  \"Domenick\",\n  \"Domenico\",\n  \"Domingo\",\n  \"Dominic\",\n  \"Dominique\",\n  \"Don\",\n  \"Donald\",\n  \"Donato\",\n  \"Donavon\",\n  \"Donna\",\n  \"Donnell\",\n  \"Donnie\",\n  \"Donny\",\n  \"Dora\",\n  \"Dorcas\",\n  \"Dorian\",\n  \"Doris\",\n  \"Dorothea\",\n  \"Dorothy\",\n  \"Dorris\",\n  \"Dortha\",\n  \"Dorthy\",\n  \"Doug\",\n  \"Douglas\",\n  \"Dovie\",\n  \"Doyle\",\n  \"Drake\",\n  \"Drew\",\n  \"Duane\",\n  \"Dudley\",\n  \"Dulce\",\n  \"Duncan\",\n  \"Durward\",\n  \"Dustin\",\n  \"Dusty\",\n  \"Dwight\",\n  \"Dylan\",\n  \"Earl\",\n  \"Earlene\",\n  \"Earline\",\n  \"Earnest\",\n  \"Earnestine\",\n  \"Easter\",\n  \"Easton\",\n  \"Ebba\",\n  \"Ebony\",\n  \"Ed\",\n  \"Eda\",\n  \"Edd\",\n  \"Eddie\",\n  \"Eden\",\n  \"Edgar\",\n  \"Edgardo\",\n  \"Edison\",\n  \"Edmond\",\n  \"Edmund\",\n  \"Edna\",\n  \"Eduardo\",\n  \"Edward\",\n  \"Edwardo\",\n  \"Edwin\",\n  \"Edwina\",\n  \"Edyth\",\n  \"Edythe\",\n  \"Effie\",\n  \"Efrain\",\n  \"Efren\",\n  \"Eileen\",\n  \"Einar\",\n  \"Eino\",\n  \"Eladio\",\n  \"Elaina\",\n  \"Elbert\",\n  \"Elda\",\n  \"Eldon\",\n  \"Eldora\",\n  \"Eldred\",\n  \"Eldridge\",\n  \"Eleanora\",\n  \"Eleanore\",\n  \"Eleazar\",\n  \"Electa\",\n  \"Elena\",\n  \"Elenor\",\n  \"Elenora\",\n  \"Eleonore\",\n  \"Elfrieda\",\n  \"Eli\",\n  \"Elian\",\n  \"Eliane\",\n  \"Elias\",\n  \"Eliezer\",\n  \"Elijah\",\n  \"Elinor\",\n  \"Elinore\",\n  \"Elisa\",\n  \"Elisabeth\",\n  \"Elise\",\n  \"Eliseo\",\n  \"Elisha\",\n  \"Elissa\",\n  \"Eliza\",\n  \"Elizabeth\",\n  \"Ella\",\n  \"Ellen\",\n  \"Ellie\",\n  \"Elliot\",\n  \"Elliott\",\n  \"Ellis\",\n  \"Ellsworth\",\n  \"Elmer\",\n  \"Elmira\",\n  \"Elmo\",\n  \"Elmore\",\n  \"Elna\",\n  \"Elnora\",\n  \"Elody\",\n  \"Eloisa\",\n  \"Eloise\",\n  \"Elouise\",\n  \"Eloy\",\n  \"Elroy\",\n  \"Elsa\",\n  \"Else\",\n  \"Elsie\",\n  \"Elta\",\n  \"Elton\",\n  \"Elva\",\n  \"Elvera\",\n  \"Elvie\",\n  \"Elvis\",\n  \"Elwin\",\n  \"Elwyn\",\n  \"Elyse\",\n  \"Elyssa\",\n  \"Elza\",\n  \"Emanuel\",\n  \"Emelia\",\n  \"Emelie\",\n  \"Emely\",\n  \"Emerald\",\n  \"Emerson\",\n  \"Emery\",\n  \"Emie\",\n  \"Emil\",\n  \"Emile\",\n  \"Emilia\",\n  \"Emiliano\",\n  \"Emilie\",\n  \"Emilio\",\n  \"Emily\",\n  \"Emma\",\n  \"Emmalee\",\n  \"Emmanuel\",\n  \"Emmanuelle\",\n  \"Emmet\",\n  \"Emmett\",\n  \"Emmie\",\n  \"Emmitt\",\n  \"Emmy\",\n  \"Emory\",\n  \"Ena\",\n  \"Enid\",\n  \"Enoch\",\n  \"Enola\",\n  \"Enos\",\n  \"Enrico\",\n  \"Enrique\",\n  \"Ephraim\",\n  \"Era\",\n  \"Eriberto\",\n  \"Eric\",\n  \"Erica\",\n  \"Erich\",\n  \"Erick\",\n  \"Ericka\",\n  \"Erik\",\n  \"Erika\",\n  \"Erin\",\n  \"Erling\",\n  \"Erna\",\n  \"Ernest\",\n  \"Ernestina\",\n  \"Ernestine\",\n  \"Ernesto\",\n  \"Ernie\",\n  \"Ervin\",\n  \"Erwin\",\n  \"Eryn\",\n  \"Esmeralda\",\n  \"Esperanza\",\n  \"Esta\",\n  \"Esteban\",\n  \"Estefania\",\n  \"Estel\",\n  \"Estell\",\n  \"Estella\",\n  \"Estelle\",\n  \"Estevan\",\n  \"Esther\",\n  \"Estrella\",\n  \"Etha\",\n  \"Ethan\",\n  \"Ethel\",\n  \"Ethelyn\",\n  \"Ethyl\",\n  \"Ettie\",\n  \"Eudora\",\n  \"Eugene\",\n  \"Eugenia\",\n  \"Eula\",\n  \"Eulah\",\n  \"Eulalia\",\n  \"Euna\",\n  \"Eunice\",\n  \"Eusebio\",\n  \"Eva\",\n  \"Evalyn\",\n  \"Evan\",\n  \"Evangeline\",\n  \"Evans\",\n  \"Eve\",\n  \"Eveline\",\n  \"Evelyn\",\n  \"Everardo\",\n  \"Everett\",\n  \"Everette\",\n  \"Evert\",\n  \"Evie\",\n  \"Ewald\",\n  \"Ewell\",\n  \"Ezekiel\",\n  \"Ezequiel\",\n  \"Ezra\",\n  \"Fabian\",\n  \"Fabiola\",\n  \"Fae\",\n  \"Fannie\",\n  \"Fanny\",\n  \"Fatima\",\n  \"Faustino\",\n  \"Fausto\",\n  \"Favian\",\n  \"Fay\",\n  \"Faye\",\n  \"Federico\",\n  \"Felicia\",\n  \"Felicita\",\n  \"Felicity\",\n  \"Felipa\",\n  \"Felipe\",\n  \"Felix\",\n  \"Felton\",\n  \"Fermin\",\n  \"Fern\",\n  \"Fernando\",\n  \"Ferne\",\n  \"Fidel\",\n  \"Filiberto\",\n  \"Filomena\",\n  \"Finn\",\n  \"Fiona\",\n  \"Flavie\",\n  \"Flavio\",\n  \"Fleta\",\n  \"Fletcher\",\n  \"Flo\",\n  \"Florence\",\n  \"Florencio\",\n  \"Florian\",\n  \"Florida\",\n  \"Florine\",\n  \"Flossie\",\n  \"Floy\",\n  \"Floyd\",\n  \"Ford\",\n  \"Forest\",\n  \"Forrest\",\n  \"Foster\",\n  \"Frances\",\n  \"Francesca\",\n  \"Francesco\",\n  \"Francis\",\n  \"Francisca\",\n  \"Francisco\",\n  \"Franco\",\n  \"Frank\",\n  \"Frankie\",\n  \"Franz\",\n  \"Fred\",\n  \"Freda\",\n  \"Freddie\",\n  \"Freddy\",\n  \"Frederic\",\n  \"Frederick\",\n  \"Frederik\",\n  \"Frederique\",\n  \"Fredrick\",\n  \"Fredy\",\n  \"Freeda\",\n  \"Freeman\",\n  \"Freida\",\n  \"Frida\",\n  \"Frieda\",\n  \"Friedrich\",\n  \"Fritz\",\n  \"Furman\",\n  \"Gabe\",\n  \"Gabriel\",\n  \"Gabriella\",\n  \"Gabrielle\",\n  \"Gaetano\",\n  \"Gage\",\n  \"Gail\",\n  \"Gardner\",\n  \"Garett\",\n  \"Garfield\",\n  \"Garland\",\n  \"Garnet\",\n  \"Garnett\",\n  \"Garret\",\n  \"Garrett\",\n  \"Garrick\",\n  \"Garrison\",\n  \"Garry\",\n  \"Garth\",\n  \"Gaston\",\n  \"Gavin\",\n  \"Gay\",\n  \"Gayle\",\n  \"Gaylord\",\n  \"Gene\",\n  \"General\",\n  \"Genesis\",\n  \"Genevieve\",\n  \"Gennaro\",\n  \"Genoveva\",\n  \"Geo\",\n  \"Geoffrey\",\n  \"George\",\n  \"Georgette\",\n  \"Georgiana\",\n  \"Georgianna\",\n  \"Geovanni\",\n  \"Geovanny\",\n  \"Geovany\",\n  \"Gerald\",\n  \"Geraldine\",\n  \"Gerard\",\n  \"Gerardo\",\n  \"Gerda\",\n  \"Gerhard\",\n  \"Germaine\",\n  \"German\",\n  \"Gerry\",\n  \"Gerson\",\n  \"Gertrude\",\n  \"Gia\",\n  \"Gianni\",\n  \"Gideon\",\n  \"Gilbert\",\n  \"Gilberto\",\n  \"Gilda\",\n  \"Giles\",\n  \"Gillian\",\n  \"Gina\",\n  \"Gino\",\n  \"Giovani\",\n  \"Giovanna\",\n  \"Giovanni\",\n  \"Giovanny\",\n  \"Gisselle\",\n  \"Giuseppe\",\n  \"Gladyce\",\n  \"Gladys\",\n  \"Glen\",\n  \"Glenda\",\n  \"Glenna\",\n  \"Glennie\",\n  \"Gloria\",\n  \"Godfrey\",\n  \"Golda\",\n  \"Golden\",\n  \"Gonzalo\",\n  \"Gordon\",\n  \"Grace\",\n  \"Gracie\",\n  \"Graciela\",\n  \"Grady\",\n  \"Graham\",\n  \"Grant\",\n  \"Granville\",\n  \"Grayce\",\n  \"Grayson\",\n  \"Green\",\n  \"Greg\",\n  \"Gregg\",\n  \"Gregoria\",\n  \"Gregorio\",\n  \"Gregory\",\n  \"Greta\",\n  \"Gretchen\",\n  \"Greyson\",\n  \"Griffin\",\n  \"Grover\",\n  \"Guadalupe\",\n  \"Gudrun\",\n  \"Guido\",\n  \"Guillermo\",\n  \"Guiseppe\",\n  \"Gunnar\",\n  \"Gunner\",\n  \"Gus\",\n  \"Gussie\",\n  \"Gust\",\n  \"Gustave\",\n  \"Guy\",\n  \"Gwen\",\n  \"Gwendolyn\",\n  \"Hadley\",\n  \"Hailee\",\n  \"Hailey\",\n  \"Hailie\",\n  \"Hal\",\n  \"Haleigh\",\n  \"Haley\",\n  \"Halie\",\n  \"Halle\",\n  \"Hallie\",\n  \"Hank\",\n  \"Hanna\",\n  \"Hannah\",\n  \"Hans\",\n  \"Hardy\",\n  \"Harley\",\n  \"Harmon\",\n  \"Harmony\",\n  \"Harold\",\n  \"Harrison\",\n  \"Harry\",\n  \"Harvey\",\n  \"Haskell\",\n  \"Hassan\",\n  \"Hassie\",\n  \"Hattie\",\n  \"Haven\",\n  \"Hayden\",\n  \"Haylee\",\n  \"Hayley\",\n  \"Haylie\",\n  \"Hazel\",\n  \"Hazle\",\n  \"Heath\",\n  \"Heather\",\n  \"Heaven\",\n  \"Heber\",\n  \"Hector\",\n  \"Heidi\",\n  \"Helen\",\n  \"Helena\",\n  \"Helene\",\n  \"Helga\",\n  \"Hellen\",\n  \"Helmer\",\n  \"Heloise\",\n  \"Henderson\",\n  \"Henri\",\n  \"Henriette\",\n  \"Henry\",\n  \"Herbert\",\n  \"Herman\",\n  \"Hermann\",\n  \"Hermina\",\n  \"Herminia\",\n  \"Herminio\",\n  \"Hershel\",\n  \"Herta\",\n  \"Hertha\",\n  \"Hester\",\n  \"Hettie\",\n  \"Hilario\",\n  \"Hilbert\",\n  \"Hilda\",\n  \"Hildegard\",\n  \"Hillard\",\n  \"Hillary\",\n  \"Hilma\",\n  \"Hilton\",\n  \"Hipolito\",\n  \"Hiram\",\n  \"Hobart\",\n  \"Holden\",\n  \"Hollie\",\n  \"Hollis\",\n  \"Holly\",\n  \"Hope\",\n  \"Horace\",\n  \"Horacio\",\n  \"Hortense\",\n  \"Hosea\",\n  \"Houston\",\n  \"Howard\",\n  \"Howell\",\n  \"Hoyt\",\n  \"Hubert\",\n  \"Hudson\",\n  \"Hugh\",\n  \"Hulda\",\n  \"Humberto\",\n  \"Hunter\",\n  \"Hyman\",\n  \"Ian\",\n  \"Ibrahim\",\n  \"Icie\",\n  \"Ida\",\n  \"Idell\",\n  \"Idella\",\n  \"Ignacio\",\n  \"Ignatius\",\n  \"Ike\",\n  \"Ila\",\n  \"Ilene\",\n  \"Iliana\",\n  \"Ima\",\n  \"Imani\",\n  \"Imelda\",\n  \"Immanuel\",\n  \"Imogene\",\n  \"Ines\",\n  \"Irma\",\n  \"Irving\",\n  \"Irwin\",\n  \"Isaac\",\n  \"Isabel\",\n  \"Isabell\",\n  \"Isabella\",\n  \"Isabelle\",\n  \"Isac\",\n  \"Isadore\",\n  \"Isai\",\n  \"Isaiah\",\n  \"Isaias\",\n  \"Isidro\",\n  \"Ismael\",\n  \"Isobel\",\n  \"Isom\",\n  \"Israel\",\n  \"Issac\",\n  \"Itzel\",\n  \"Iva\",\n  \"Ivah\",\n  \"Ivory\",\n  \"Ivy\",\n  \"Izabella\",\n  \"Izaiah\",\n  \"Jabari\",\n  \"Jace\",\n  \"Jacey\",\n  \"Jacinthe\",\n  \"Jacinto\",\n  \"Jack\",\n  \"Jackeline\",\n  \"Jackie\",\n  \"Jacklyn\",\n  \"Jackson\",\n  \"Jacky\",\n  \"Jaclyn\",\n  \"Jacquelyn\",\n  \"Jacques\",\n  \"Jacynthe\",\n  \"Jada\",\n  \"Jade\",\n  \"Jaden\",\n  \"Jadon\",\n  \"Jadyn\",\n  \"Jaeden\",\n  \"Jaida\",\n  \"Jaiden\",\n  \"Jailyn\",\n  \"Jaime\",\n  \"Jairo\",\n  \"Jakayla\",\n  \"Jake\",\n  \"Jakob\",\n  \"Jaleel\",\n  \"Jalen\",\n  \"Jalon\",\n  \"Jalyn\",\n  \"Jamaal\",\n  \"Jamal\",\n  \"Jamar\",\n  \"Jamarcus\",\n  \"Jamel\",\n  \"Jameson\",\n  \"Jamey\",\n  \"Jamie\",\n  \"Jamil\",\n  \"Jamir\",\n  \"Jamison\",\n  \"Jammie\",\n  \"Jan\",\n  \"Jana\",\n  \"Janae\",\n  \"Jane\",\n  \"Janelle\",\n  \"Janessa\",\n  \"Janet\",\n  \"Janice\",\n  \"Janick\",\n  \"Janie\",\n  \"Janis\",\n  \"Janiya\",\n  \"Jannie\",\n  \"Jany\",\n  \"Jaquan\",\n  \"Jaquelin\",\n  \"Jaqueline\",\n  \"Jared\",\n  \"Jaren\",\n  \"Jarod\",\n  \"Jaron\",\n  \"Jarred\",\n  \"Jarrell\",\n  \"Jarret\",\n  \"Jarrett\",\n  \"Jarrod\",\n  \"Jarvis\",\n  \"Jasen\",\n  \"Jasmin\",\n  \"Jason\",\n  \"Jasper\",\n  \"Jaunita\",\n  \"Javier\",\n  \"Javon\",\n  \"Javonte\",\n  \"Jay\",\n  \"Jayce\",\n  \"Jaycee\",\n  \"Jayda\",\n  \"Jayde\",\n  \"Jayden\",\n  \"Jaydon\",\n  \"Jaylan\",\n  \"Jaylen\",\n  \"Jaylin\",\n  \"Jaylon\",\n  \"Jayme\",\n  \"Jayne\",\n  \"Jayson\",\n  \"Jazlyn\",\n  \"Jazmin\",\n  \"Jazmyn\",\n  \"Jazmyne\",\n  \"Jean\",\n  \"Jeanette\",\n  \"Jeanie\",\n  \"Jeanne\",\n  \"Jed\",\n  \"Jedediah\",\n  \"Jedidiah\",\n  \"Jeff\",\n  \"Jefferey\",\n  \"Jeffery\",\n  \"Jeffrey\",\n  \"Jeffry\",\n  \"Jena\",\n  \"Jenifer\",\n  \"Jennie\",\n  \"Jennifer\",\n  \"Jennings\",\n  \"Jennyfer\",\n  \"Jensen\",\n  \"Jerad\",\n  \"Jerald\",\n  \"Jeramie\",\n  \"Jeramy\",\n  \"Jerel\",\n  \"Jeremie\",\n  \"Jeremy\",\n  \"Jermain\",\n  \"Jermaine\",\n  \"Jermey\",\n  \"Jerod\",\n  \"Jerome\",\n  \"Jeromy\",\n  \"Jerrell\",\n  \"Jerrod\",\n  \"Jerrold\",\n  \"Jerry\",\n  \"Jess\",\n  \"Jesse\",\n  \"Jessica\",\n  \"Jessie\",\n  \"Jessika\",\n  \"Jessy\",\n  \"Jessyca\",\n  \"Jesus\",\n  \"Jett\",\n  \"Jettie\",\n  \"Jevon\",\n  \"Jewel\",\n  \"Jewell\",\n  \"Jillian\",\n  \"Jimmie\",\n  \"Jimmy\",\n  \"Jo\",\n  \"Joan\",\n  \"Joana\",\n  \"Joanie\",\n  \"Joanne\",\n  \"Joannie\",\n  \"Joanny\",\n  \"Joany\",\n  \"Joaquin\",\n  \"Jocelyn\",\n  \"Jodie\",\n  \"Jody\",\n  \"Joe\",\n  \"Joel\",\n  \"Joelle\",\n  \"Joesph\",\n  \"Joey\",\n  \"Johan\",\n  \"Johann\",\n  \"Johanna\",\n  \"Johathan\",\n  \"John\",\n  \"Johnathan\",\n  \"Johnathon\",\n  \"Johnnie\",\n  \"Johnny\",\n  \"Johnpaul\",\n  \"Johnson\",\n  \"Jolie\",\n  \"Jon\",\n  \"Jonas\",\n  \"Jonatan\",\n  \"Jonathan\",\n  \"Jonathon\",\n  \"Jordan\",\n  \"Jordane\",\n  \"Jordi\",\n  \"Jordon\",\n  \"Jordy\",\n  \"Jordyn\",\n  \"Jorge\",\n  \"Jose\",\n  \"Josefa\",\n  \"Josefina\",\n  \"Joseph\",\n  \"Josephine\",\n  \"Josh\",\n  \"Joshua\",\n  \"Joshuah\",\n  \"Josiah\",\n  \"Josiane\",\n  \"Josianne\",\n  \"Josie\",\n  \"Josue\",\n  \"Jovan\",\n  \"Jovani\",\n  \"Jovanny\",\n  \"Jovany\",\n  \"Joy\",\n  \"Joyce\",\n  \"Juana\",\n  \"Juanita\",\n  \"Judah\",\n  \"Judd\",\n  \"Jude\",\n  \"Judge\",\n  \"Judson\",\n  \"Judy\",\n  \"Jules\",\n  \"Julia\",\n  \"Julian\",\n  \"Juliana\",\n  \"Julianne\",\n  \"Julie\",\n  \"Julien\",\n  \"Juliet\",\n  \"Julio\",\n  \"Julius\",\n  \"June\",\n  \"Junior\",\n  \"Junius\",\n  \"Justen\",\n  \"Justice\",\n  \"Justina\",\n  \"Justine\",\n  \"Juston\",\n  \"Justus\",\n  \"Justyn\",\n  \"Juvenal\",\n  \"Juwan\",\n  \"Kacey\",\n  \"Kaci\",\n  \"Kacie\",\n  \"Kade\",\n  \"Kaden\",\n  \"Kadin\",\n  \"Kaela\",\n  \"Kaelyn\",\n  \"Kaia\",\n  \"Kailee\",\n  \"Kailey\",\n  \"Kailyn\",\n  \"Kaitlin\",\n  \"Kaitlyn\",\n  \"Kale\",\n  \"Kaleb\",\n  \"Kaleigh\",\n  \"Kaley\",\n  \"Kali\",\n  \"Kallie\",\n  \"Kameron\",\n  \"Kamille\",\n  \"Kamren\",\n  \"Kamron\",\n  \"Kamryn\",\n  \"Kane\",\n  \"Kara\",\n  \"Kareem\",\n  \"Karelle\",\n  \"Karen\",\n  \"Kari\",\n  \"Kariane\",\n  \"Karianne\",\n  \"Karina\",\n  \"Karine\",\n  \"Karl\",\n  \"Karlee\",\n  \"Karley\",\n  \"Karli\",\n  \"Karlie\",\n  \"Karolann\",\n  \"Karson\",\n  \"Kasandra\",\n  \"Kasey\",\n  \"Kassandra\",\n  \"Katarina\",\n  \"Katelin\",\n  \"Katelyn\",\n  \"Katelynn\",\n  \"Katharina\",\n  \"Katherine\",\n  \"Katheryn\",\n  \"Kathleen\",\n  \"Kathlyn\",\n  \"Kathryn\",\n  \"Kathryne\",\n  \"Katlyn\",\n  \"Katlynn\",\n  \"Katrina\",\n  \"Katrine\",\n  \"Kattie\",\n  \"Kavon\",\n  \"Kay\",\n  \"Kaya\",\n  \"Kaycee\",\n  \"Kayden\",\n  \"Kayla\",\n  \"Kaylah\",\n  \"Kaylee\",\n  \"Kayleigh\",\n  \"Kayley\",\n  \"Kayli\",\n  \"Kaylie\",\n  \"Kaylin\",\n  \"Keagan\",\n  \"Keanu\",\n  \"Keara\",\n  \"Keaton\",\n  \"Keegan\",\n  \"Keeley\",\n  \"Keely\",\n  \"Keenan\",\n  \"Keira\",\n  \"Keith\",\n  \"Kellen\",\n  \"Kelley\",\n  \"Kelli\",\n  \"Kellie\",\n  \"Kelly\",\n  \"Kelsi\",\n  \"Kelsie\",\n  \"Kelton\",\n  \"Kelvin\",\n  \"Ken\",\n  \"Kendall\",\n  \"Kendra\",\n  \"Kendrick\",\n  \"Kenna\",\n  \"Kennedi\",\n  \"Kennedy\",\n  \"Kenneth\",\n  \"Kennith\",\n  \"Kenny\",\n  \"Kenton\",\n  \"Kenya\",\n  \"Kenyatta\",\n  \"Kenyon\",\n  \"Keon\",\n  \"Keshaun\",\n  \"Keshawn\",\n  \"Keven\",\n  \"Kevin\",\n  \"Kevon\",\n  \"Keyon\",\n  \"Keyshawn\",\n  \"Khalid\",\n  \"Khalil\",\n  \"Kian\",\n  \"Kiana\",\n  \"Kianna\",\n  \"Kiara\",\n  \"Kiarra\",\n  \"Kiel\",\n  \"Kiera\",\n  \"Kieran\",\n  \"Kiley\",\n  \"Kim\",\n  \"Kimberly\",\n  \"King\",\n  \"Kip\",\n  \"Kira\",\n  \"Kirk\",\n  \"Kirsten\",\n  \"Kirstin\",\n  \"Kitty\",\n  \"Kobe\",\n  \"Koby\",\n  \"Kody\",\n  \"Kolby\",\n  \"Kole\",\n  \"Korbin\",\n  \"Korey\",\n  \"Kory\",\n  \"Kraig\",\n  \"Kris\",\n  \"Krista\",\n  \"Kristian\",\n  \"Kristin\",\n  \"Kristina\",\n  \"Kristofer\",\n  \"Kristoffer\",\n  \"Kristopher\",\n  \"Kristy\",\n  \"Krystal\",\n  \"Krystel\",\n  \"Krystina\",\n  \"Kurt\",\n  \"Kurtis\",\n  \"Kyla\",\n  \"Kyle\",\n  \"Kylee\",\n  \"Kyleigh\",\n  \"Kyler\",\n  \"Kylie\",\n  \"Kyra\",\n  \"Lacey\",\n  \"Lacy\",\n  \"Ladarius\",\n  \"Lafayette\",\n  \"Laila\",\n  \"Laisha\",\n  \"Lamar\",\n  \"Lambert\",\n  \"Lamont\",\n  \"Lance\",\n  \"Landen\",\n  \"Lane\",\n  \"Laney\",\n  \"Larissa\",\n  \"Laron\",\n  \"Larry\",\n  \"Larue\",\n  \"Laura\",\n  \"Laurel\",\n  \"Lauren\",\n  \"Laurence\",\n  \"Lauretta\",\n  \"Lauriane\",\n  \"Laurianne\",\n  \"Laurie\",\n  \"Laurine\",\n  \"Laury\",\n  \"Lauryn\",\n  \"Lavada\",\n  \"Lavern\",\n  \"Laverna\",\n  \"Laverne\",\n  \"Lavina\",\n  \"Lavinia\",\n  \"Lavon\",\n  \"Lavonne\",\n  \"Lawrence\",\n  \"Lawson\",\n  \"Layla\",\n  \"Layne\",\n  \"Lazaro\",\n  \"Lea\",\n  \"Leann\",\n  \"Leanna\",\n  \"Leanne\",\n  \"Leatha\",\n  \"Leda\",\n  \"Lee\",\n  \"Leif\",\n  \"Leila\",\n  \"Leilani\",\n  \"Lela\",\n  \"Lelah\",\n  \"Leland\",\n  \"Lelia\",\n  \"Lempi\",\n  \"Lemuel\",\n  \"Lenna\",\n  \"Lennie\",\n  \"Lenny\",\n  \"Lenora\",\n  \"Lenore\",\n  \"Leo\",\n  \"Leola\",\n  \"Leon\",\n  \"Leonard\",\n  \"Leonardo\",\n  \"Leone\",\n  \"Leonel\",\n  \"Leonie\",\n  \"Leonor\",\n  \"Leonora\",\n  \"Leopold\",\n  \"Leopoldo\",\n  \"Leora\",\n  \"Lera\",\n  \"Lesley\",\n  \"Leslie\",\n  \"Lesly\",\n  \"Lessie\",\n  \"Lester\",\n  \"Leta\",\n  \"Letha\",\n  \"Letitia\",\n  \"Levi\",\n  \"Lew\",\n  \"Lewis\",\n  \"Lexi\",\n  \"Lexie\",\n  \"Lexus\",\n  \"Lia\",\n  \"Liam\",\n  \"Liana\",\n  \"Libbie\",\n  \"Libby\",\n  \"Lila\",\n  \"Lilian\",\n  \"Liliana\",\n  \"Liliane\",\n  \"Lilla\",\n  \"Lillian\",\n  \"Lilliana\",\n  \"Lillie\",\n  \"Lilly\",\n  \"Lily\",\n  \"Lilyan\",\n  \"Lina\",\n  \"Lincoln\",\n  \"Linda\",\n  \"Lindsay\",\n  \"Lindsey\",\n  \"Linnea\",\n  \"Linnie\",\n  \"Linwood\",\n  \"Lionel\",\n  \"Lisa\",\n  \"Lisandro\",\n  \"Lisette\",\n  \"Litzy\",\n  \"Liza\",\n  \"Lizeth\",\n  \"Lizzie\",\n  \"Llewellyn\",\n  \"Lloyd\",\n  \"Logan\",\n  \"Lois\",\n  \"Lola\",\n  \"Lolita\",\n  \"Loma\",\n  \"Lon\",\n  \"London\",\n  \"Lonie\",\n  \"Lonnie\",\n  \"Lonny\",\n  \"Lonzo\",\n  \"Lora\",\n  \"Loraine\",\n  \"Loren\",\n  \"Lorena\",\n  \"Lorenz\",\n  \"Lorenza\",\n  \"Lorenzo\",\n  \"Lori\",\n  \"Lorine\",\n  \"Lorna\",\n  \"Lottie\",\n  \"Lou\",\n  \"Louie\",\n  \"Louisa\",\n  \"Lourdes\",\n  \"Louvenia\",\n  \"Lowell\",\n  \"Loy\",\n  \"Loyal\",\n  \"Loyce\",\n  \"Lucas\",\n  \"Luciano\",\n  \"Lucie\",\n  \"Lucienne\",\n  \"Lucile\",\n  \"Lucinda\",\n  \"Lucio\",\n  \"Lucious\",\n  \"Lucius\",\n  \"Lucy\",\n  \"Ludie\",\n  \"Ludwig\",\n  \"Lue\",\n  \"Luella\",\n  \"Luigi\",\n  \"Luis\",\n  \"Luisa\",\n  \"Lukas\",\n  \"Lula\",\n  \"Lulu\",\n  \"Luna\",\n  \"Lupe\",\n  \"Lura\",\n  \"Lurline\",\n  \"Luther\",\n  \"Luz\",\n  \"Lyda\",\n  \"Lydia\",\n  \"Lyla\",\n  \"Lynn\",\n  \"Lyric\",\n  \"Lysanne\",\n  \"Mabel\",\n  \"Mabelle\",\n  \"Mable\",\n  \"Mac\",\n  \"Macey\",\n  \"Maci\",\n  \"Macie\",\n  \"Mack\",\n  \"Mackenzie\",\n  \"Macy\",\n  \"Madaline\",\n  \"Madalyn\",\n  \"Maddison\",\n  \"Madeline\",\n  \"Madelyn\",\n  \"Madelynn\",\n  \"Madge\",\n  \"Madie\",\n  \"Madilyn\",\n  \"Madisen\",\n  \"Madison\",\n  \"Madisyn\",\n  \"Madonna\",\n  \"Madyson\",\n  \"Mae\",\n  \"Maegan\",\n  \"Maeve\",\n  \"Mafalda\",\n  \"Magali\",\n  \"Magdalen\",\n  \"Magdalena\",\n  \"Maggie\",\n  \"Magnolia\",\n  \"Magnus\",\n  \"Maia\",\n  \"Maida\",\n  \"Maiya\",\n  \"Major\",\n  \"Makayla\",\n  \"Makenna\",\n  \"Makenzie\",\n  \"Malachi\",\n  \"Malcolm\",\n  \"Malika\",\n  \"Malinda\",\n  \"Mallie\",\n  \"Mallory\",\n  \"Malvina\",\n  \"Mandy\",\n  \"Manley\",\n  \"Manuel\",\n  \"Manuela\",\n  \"Mara\",\n  \"Marc\",\n  \"Marcel\",\n  \"Marcelina\",\n  \"Marcelino\",\n  \"Marcella\",\n  \"Marcelle\",\n  \"Marcellus\",\n  \"Marcelo\",\n  \"Marcia\",\n  \"Marco\",\n  \"Marcos\",\n  \"Marcus\",\n  \"Margaret\",\n  \"Margarete\",\n  \"Margarett\",\n  \"Margaretta\",\n  \"Margarette\",\n  \"Margarita\",\n  \"Marge\",\n  \"Margie\",\n  \"Margot\",\n  \"Margret\",\n  \"Marguerite\",\n  \"Maria\",\n  \"Mariah\",\n  \"Mariam\",\n  \"Marian\",\n  \"Mariana\",\n  \"Mariane\",\n  \"Marianna\",\n  \"Marianne\",\n  \"Mariano\",\n  \"Maribel\",\n  \"Marie\",\n  \"Mariela\",\n  \"Marielle\",\n  \"Marietta\",\n  \"Marilie\",\n  \"Marilou\",\n  \"Marilyne\",\n  \"Marina\",\n  \"Mario\",\n  \"Marion\",\n  \"Marisa\",\n  \"Marisol\",\n  \"Maritza\",\n  \"Marjolaine\",\n  \"Marjorie\",\n  \"Marjory\",\n  \"Mark\",\n  \"Markus\",\n  \"Marlee\",\n  \"Marlen\",\n  \"Marlene\",\n  \"Marley\",\n  \"Marlin\",\n  \"Marlon\",\n  \"Marques\",\n  \"Marquis\",\n  \"Marquise\",\n  \"Marshall\",\n  \"Marta\",\n  \"Martin\",\n  \"Martina\",\n  \"Martine\",\n  \"Marty\",\n  \"Marvin\",\n  \"Mary\",\n  \"Maryam\",\n  \"Maryjane\",\n  \"Maryse\",\n  \"Mason\",\n  \"Mateo\",\n  \"Mathew\",\n  \"Mathias\",\n  \"Mathilde\",\n  \"Matilda\",\n  \"Matilde\",\n  \"Matt\",\n  \"Matteo\",\n  \"Mattie\",\n  \"Maud\",\n  \"Maude\",\n  \"Maudie\",\n  \"Maureen\",\n  \"Maurice\",\n  \"Mauricio\",\n  \"Maurine\",\n  \"Maverick\",\n  \"Mavis\",\n  \"Max\",\n  \"Maxie\",\n  \"Maxime\",\n  \"Maximilian\",\n  \"Maximillia\",\n  \"Maximillian\",\n  \"Maximo\",\n  \"Maximus\",\n  \"Maxine\",\n  \"Maxwell\",\n  \"May\",\n  \"Maya\",\n  \"Maybell\",\n  \"Maybelle\",\n  \"Maye\",\n  \"Maymie\",\n  \"Maynard\",\n  \"Mayra\",\n  \"Mazie\",\n  \"Mckayla\",\n  \"Mckenna\",\n  \"Mckenzie\",\n  \"Meagan\",\n  \"Meaghan\",\n  \"Meda\",\n  \"Megane\",\n  \"Meggie\",\n  \"Meghan\",\n  \"Mekhi\",\n  \"Melany\",\n  \"Melba\",\n  \"Melisa\",\n  \"Melissa\",\n  \"Mellie\",\n  \"Melody\",\n  \"Melvin\",\n  \"Melvina\",\n  \"Melyna\",\n  \"Melyssa\",\n  \"Mercedes\",\n  \"Meredith\",\n  \"Merl\",\n  \"Merle\",\n  \"Merlin\",\n  \"Merritt\",\n  \"Mertie\",\n  \"Mervin\",\n  \"Meta\",\n  \"Mia\",\n  \"Micaela\",\n  \"Micah\",\n  \"Michael\",\n  \"Michaela\",\n  \"Michale\",\n  \"Micheal\",\n  \"Michel\",\n  \"Michele\",\n  \"Michelle\",\n  \"Miguel\",\n  \"Mikayla\",\n  \"Mike\",\n  \"Mikel\",\n  \"Milan\",\n  \"Miles\",\n  \"Milford\",\n  \"Miller\",\n  \"Millie\",\n  \"Milo\",\n  \"Milton\",\n  \"Mina\",\n  \"Minerva\",\n  \"Minnie\",\n  \"Miracle\",\n  \"Mireille\",\n  \"Mireya\",\n  \"Misael\",\n  \"Missouri\",\n  \"Misty\",\n  \"Mitchel\",\n  \"Mitchell\",\n  \"Mittie\",\n  \"Modesta\",\n  \"Modesto\",\n  \"Mohamed\",\n  \"Mohammad\",\n  \"Mohammed\",\n  \"Moises\",\n  \"Mollie\",\n  \"Molly\",\n  \"Mona\",\n  \"Monica\",\n  \"Monique\",\n  \"Monroe\",\n  \"Monserrat\",\n  \"Monserrate\",\n  \"Montana\",\n  \"Monte\",\n  \"Monty\",\n  \"Morgan\",\n  \"Moriah\",\n  \"Morris\",\n  \"Mortimer\",\n  \"Morton\",\n  \"Mose\",\n  \"Moses\",\n  \"Moshe\",\n  \"Mossie\",\n  \"Mozell\",\n  \"Mozelle\",\n  \"Muhammad\",\n  \"Muriel\",\n  \"Murl\",\n  \"Murphy\",\n  \"Murray\",\n  \"Mustafa\",\n  \"Mya\",\n  \"Myah\",\n  \"Mylene\",\n  \"Myles\",\n  \"Myra\",\n  \"Myriam\",\n  \"Myrl\",\n  \"Myrna\",\n  \"Myron\",\n  \"Myrtice\",\n  \"Myrtie\",\n  \"Myrtis\",\n  \"Myrtle\",\n  \"Nadia\",\n  \"Nakia\",\n  \"Name\",\n  \"Nannie\",\n  \"Naomi\",\n  \"Naomie\",\n  \"Napoleon\",\n  \"Narciso\",\n  \"Nash\",\n  \"Nasir\",\n  \"Nat\",\n  \"Natalia\",\n  \"Natalie\",\n  \"Natasha\",\n  \"Nathan\",\n  \"Nathanael\",\n  \"Nathanial\",\n  \"Nathaniel\",\n  \"Nathen\",\n  \"Nayeli\",\n  \"Neal\",\n  \"Ned\",\n  \"Nedra\",\n  \"Neha\",\n  \"Neil\",\n  \"Nelda\",\n  \"Nella\",\n  \"Nelle\",\n  \"Nellie\",\n  \"Nels\",\n  \"Nelson\",\n  \"Neoma\",\n  \"Nestor\",\n  \"Nettie\",\n  \"Neva\",\n  \"Newell\",\n  \"Newton\",\n  \"Nia\",\n  \"Nicholas\",\n  \"Nicholaus\",\n  \"Nichole\",\n  \"Nick\",\n  \"Nicklaus\",\n  \"Nickolas\",\n  \"Nico\",\n  \"Nicola\",\n  \"Nicolas\",\n  \"Nicole\",\n  \"Nicolette\",\n  \"Nigel\",\n  \"Nikita\",\n  \"Nikki\",\n  \"Nikko\",\n  \"Niko\",\n  \"Nikolas\",\n  \"Nils\",\n  \"Nina\",\n  \"Noah\",\n  \"Noble\",\n  \"Noe\",\n  \"Noel\",\n  \"Noelia\",\n  \"Noemi\",\n  \"Noemie\",\n  \"Noemy\",\n  \"Nola\",\n  \"Nolan\",\n  \"Nona\",\n  \"Nora\",\n  \"Norbert\",\n  \"Norberto\",\n  \"Norene\",\n  \"Norma\",\n  \"Norris\",\n  \"Norval\",\n  \"Norwood\",\n  \"Nova\",\n  \"Novella\",\n  \"Nya\",\n  \"Nyah\",\n  \"Nyasia\",\n  \"Obie\",\n  \"Oceane\",\n  \"Ocie\",\n  \"Octavia\",\n  \"Oda\",\n  \"Odell\",\n  \"Odessa\",\n  \"Odie\",\n  \"Ofelia\",\n  \"Okey\",\n  \"Ola\",\n  \"Olaf\",\n  \"Ole\",\n  \"Olen\",\n  \"Oleta\",\n  \"Olga\",\n  \"Olin\",\n  \"Oliver\",\n  \"Ollie\",\n  \"Oma\",\n  \"Omari\",\n  \"Omer\",\n  \"Ona\",\n  \"Onie\",\n  \"Opal\",\n  \"Ophelia\",\n  \"Ora\",\n  \"Oral\",\n  \"Oran\",\n  \"Oren\",\n  \"Orie\",\n  \"Orin\",\n  \"Orion\",\n  \"Orland\",\n  \"Orlando\",\n  \"Orlo\",\n  \"Orpha\",\n  \"Orrin\",\n  \"Orval\",\n  \"Orville\",\n  \"Osbaldo\",\n  \"Osborne\",\n  \"Oscar\",\n  \"Osvaldo\",\n  \"Oswald\",\n  \"Oswaldo\",\n  \"Otha\",\n  \"Otho\",\n  \"Otilia\",\n  \"Otis\",\n  \"Ottilie\",\n  \"Ottis\",\n  \"Otto\",\n  \"Ova\",\n  \"Owen\",\n  \"Ozella\",\n  \"Pablo\",\n  \"Paige\",\n  \"Palma\",\n  \"Pamela\",\n  \"Pansy\",\n  \"Paolo\",\n  \"Paris\",\n  \"Parker\",\n  \"Pascale\",\n  \"Pasquale\",\n  \"Pat\",\n  \"Patience\",\n  \"Patricia\",\n  \"Patrick\",\n  \"Patsy\",\n  \"Pattie\",\n  \"Paul\",\n  \"Paula\",\n  \"Pauline\",\n  \"Paxton\",\n  \"Payton\",\n  \"Pearl\",\n  \"Pearlie\",\n  \"Pearline\",\n  \"Pedro\",\n  \"Peggie\",\n  \"Penelope\",\n  \"Percival\",\n  \"Percy\",\n  \"Perry\",\n  \"Pete\",\n  \"Peter\",\n  \"Petra\",\n  \"Peyton\",\n  \"Philip\",\n  \"Phoebe\",\n  \"Phyllis\",\n  \"Pierce\",\n  \"Pierre\",\n  \"Pietro\",\n  \"Pink\",\n  \"Pinkie\",\n  \"Piper\",\n  \"Polly\",\n  \"Porter\",\n  \"Precious\",\n  \"Presley\",\n  \"Preston\",\n  \"Price\",\n  \"Prince\",\n  \"Princess\",\n  \"Priscilla\",\n  \"Providenci\",\n  \"Prudence\",\n  \"Queen\",\n  \"Queenie\",\n  \"Quentin\",\n  \"Quincy\",\n  \"Quinn\",\n  \"Quinten\",\n  \"Quinton\",\n  \"Rachael\",\n  \"Rachel\",\n  \"Rachelle\",\n  \"Rae\",\n  \"Raegan\",\n  \"Rafael\",\n  \"Rafaela\",\n  \"Raheem\",\n  \"Rahsaan\",\n  \"Rahul\",\n  \"Raina\",\n  \"Raleigh\",\n  \"Ralph\",\n  \"Ramiro\",\n  \"Ramon\",\n  \"Ramona\",\n  \"Randal\",\n  \"Randall\",\n  \"Randi\",\n  \"Randy\",\n  \"Ransom\",\n  \"Raoul\",\n  \"Raphael\",\n  \"Raphaelle\",\n  \"Raquel\",\n  \"Rashad\",\n  \"Rashawn\",\n  \"Rasheed\",\n  \"Raul\",\n  \"Raven\",\n  \"Ray\",\n  \"Raymond\",\n  \"Raymundo\",\n  \"Reagan\",\n  \"Reanna\",\n  \"Reba\",\n  \"Rebeca\",\n  \"Rebecca\",\n  \"Rebeka\",\n  \"Rebekah\",\n  \"Reece\",\n  \"Reed\",\n  \"Reese\",\n  \"Regan\",\n  \"Reggie\",\n  \"Reginald\",\n  \"Reid\",\n  \"Reilly\",\n  \"Reina\",\n  \"Reinhold\",\n  \"Remington\",\n  \"Rene\",\n  \"Renee\",\n  \"Ressie\",\n  \"Reta\",\n  \"Retha\",\n  \"Retta\",\n  \"Reuben\",\n  \"Reva\",\n  \"Rex\",\n  \"Rey\",\n  \"Reyes\",\n  \"Reymundo\",\n  \"Reyna\",\n  \"Reynold\",\n  \"Rhea\",\n  \"Rhett\",\n  \"Rhianna\",\n  \"Rhiannon\",\n  \"Rhoda\",\n  \"Ricardo\",\n  \"Richard\",\n  \"Richie\",\n  \"Richmond\",\n  \"Rick\",\n  \"Rickey\",\n  \"Rickie\",\n  \"Ricky\",\n  \"Rico\",\n  \"Rigoberto\",\n  \"Riley\",\n  \"Rita\",\n  \"River\",\n  \"Robb\",\n  \"Robbie\",\n  \"Robert\",\n  \"Roberta\",\n  \"Roberto\",\n  \"Robin\",\n  \"Robyn\",\n  \"Rocio\",\n  \"Rocky\",\n  \"Rod\",\n  \"Roderick\",\n  \"Rodger\",\n  \"Rodolfo\",\n  \"Rodrick\",\n  \"Rodrigo\",\n  \"Roel\",\n  \"Rogelio\",\n  \"Roger\",\n  \"Rogers\",\n  \"Rolando\",\n  \"Rollin\",\n  \"Roma\",\n  \"Romaine\",\n  \"Roman\",\n  \"Ron\",\n  \"Ronaldo\",\n  \"Ronny\",\n  \"Roosevelt\",\n  \"Rory\",\n  \"Rosa\",\n  \"Rosalee\",\n  \"Rosalia\",\n  \"Rosalind\",\n  \"Rosalinda\",\n  \"Rosalyn\",\n  \"Rosamond\",\n  \"Rosanna\",\n  \"Rosario\",\n  \"Roscoe\",\n  \"Rose\",\n  \"Rosella\",\n  \"Roselyn\",\n  \"Rosemarie\",\n  \"Rosemary\",\n  \"Rosendo\",\n  \"Rosetta\",\n  \"Rosie\",\n  \"Rosina\",\n  \"Roslyn\",\n  \"Ross\",\n  \"Rossie\",\n  \"Rowan\",\n  \"Rowena\",\n  \"Rowland\",\n  \"Roxane\",\n  \"Roxanne\",\n  \"Roy\",\n  \"Royal\",\n  \"Royce\",\n  \"Rozella\",\n  \"Ruben\",\n  \"Rubie\",\n  \"Ruby\",\n  \"Rubye\",\n  \"Rudolph\",\n  \"Rudy\",\n  \"Rupert\",\n  \"Russ\",\n  \"Russel\",\n  \"Russell\",\n  \"Rusty\",\n  \"Ruth\",\n  \"Ruthe\",\n  \"Ruthie\",\n  \"Ryan\",\n  \"Ryann\",\n  \"Ryder\",\n  \"Rylan\",\n  \"Rylee\",\n  \"Ryleigh\",\n  \"Ryley\",\n  \"Sabina\",\n  \"Sabrina\",\n  \"Sabryna\",\n  \"Sadie\",\n  \"Sadye\",\n  \"Sage\",\n  \"Saige\",\n  \"Sallie\",\n  \"Sally\",\n  \"Salma\",\n  \"Salvador\",\n  \"Salvatore\",\n  \"Sam\",\n  \"Samanta\",\n  \"Samantha\",\n  \"Samara\",\n  \"Samir\",\n  \"Sammie\",\n  \"Sammy\",\n  \"Samson\",\n  \"Sandra\",\n  \"Sandrine\",\n  \"Sandy\",\n  \"Sanford\",\n  \"Santa\",\n  \"Santiago\",\n  \"Santina\",\n  \"Santino\",\n  \"Santos\",\n  \"Sarah\",\n  \"Sarai\",\n  \"Sarina\",\n  \"Sasha\",\n  \"Saul\",\n  \"Savanah\",\n  \"Savanna\",\n  \"Savannah\",\n  \"Savion\",\n  \"Scarlett\",\n  \"Schuyler\",\n  \"Scot\",\n  \"Scottie\",\n  \"Scotty\",\n  \"Seamus\",\n  \"Sean\",\n  \"Sebastian\",\n  \"Sedrick\",\n  \"Selena\",\n  \"Selina\",\n  \"Selmer\",\n  \"Serena\",\n  \"Serenity\",\n  \"Seth\",\n  \"Shad\",\n  \"Shaina\",\n  \"Shakira\",\n  \"Shana\",\n  \"Shane\",\n  \"Shanel\",\n  \"Shanelle\",\n  \"Shania\",\n  \"Shanie\",\n  \"Shaniya\",\n  \"Shanna\",\n  \"Shannon\",\n  \"Shanny\",\n  \"Shanon\",\n  \"Shany\",\n  \"Sharon\",\n  \"Shaun\",\n  \"Shawn\",\n  \"Shawna\",\n  \"Shaylee\",\n  \"Shayna\",\n  \"Shayne\",\n  \"Shea\",\n  \"Sheila\",\n  \"Sheldon\",\n  \"Shemar\",\n  \"Sheridan\",\n  \"Sherman\",\n  \"Sherwood\",\n  \"Shirley\",\n  \"Shyann\",\n  \"Shyanne\",\n  \"Sibyl\",\n  \"Sid\",\n  \"Sidney\",\n  \"Sienna\",\n  \"Sierra\",\n  \"Sigmund\",\n  \"Sigrid\",\n  \"Sigurd\",\n  \"Silas\",\n  \"Sim\",\n  \"Simeon\",\n  \"Simone\",\n  \"Sincere\",\n  \"Sister\",\n  \"Skye\",\n  \"Skyla\",\n  \"Skylar\",\n  \"Sofia\",\n  \"Soledad\",\n  \"Solon\",\n  \"Sonia\",\n  \"Sonny\",\n  \"Sonya\",\n  \"Sophia\",\n  \"Sophie\",\n  \"Spencer\",\n  \"Stacey\",\n  \"Stacy\",\n  \"Stan\",\n  \"Stanford\",\n  \"Stanley\",\n  \"Stanton\",\n  \"Stefan\",\n  \"Stefanie\",\n  \"Stella\",\n  \"Stephan\",\n  \"Stephania\",\n  \"Stephanie\",\n  \"Stephany\",\n  \"Stephen\",\n  \"Stephon\",\n  \"Sterling\",\n  \"Steve\",\n  \"Stevie\",\n  \"Stewart\",\n  \"Stone\",\n  \"Stuart\",\n  \"Summer\",\n  \"Sunny\",\n  \"Susan\",\n  \"Susana\",\n  \"Susanna\",\n  \"Susie\",\n  \"Suzanne\",\n  \"Sven\",\n  \"Syble\",\n  \"Sydnee\",\n  \"Sydney\",\n  \"Sydni\",\n  \"Sydnie\",\n  \"Sylvan\",\n  \"Sylvester\",\n  \"Sylvia\",\n  \"Tabitha\",\n  \"Tad\",\n  \"Talia\",\n  \"Talon\",\n  \"Tamara\",\n  \"Tamia\",\n  \"Tania\",\n  \"Tanner\",\n  \"Tanya\",\n  \"Tara\",\n  \"Taryn\",\n  \"Tate\",\n  \"Tatum\",\n  \"Tatyana\",\n  \"Taurean\",\n  \"Tavares\",\n  \"Taya\",\n  \"Taylor\",\n  \"Teagan\",\n  \"Ted\",\n  \"Telly\",\n  \"Terence\",\n  \"Teresa\",\n  \"Terrance\",\n  \"Terrell\",\n  \"Terrence\",\n  \"Terrill\",\n  \"Terry\",\n  \"Tess\",\n  \"Tessie\",\n  \"Tevin\",\n  \"Thad\",\n  \"Thaddeus\",\n  \"Thalia\",\n  \"Thea\",\n  \"Thelma\",\n  \"Theo\",\n  \"Theodora\",\n  \"Theodore\",\n  \"Theresa\",\n  \"Therese\",\n  \"Theresia\",\n  \"Theron\",\n  \"Thomas\",\n  \"Thora\",\n  \"Thurman\",\n  \"Tia\",\n  \"Tiana\",\n  \"Tianna\",\n  \"Tiara\",\n  \"Tierra\",\n  \"Tiffany\",\n  \"Tillman\",\n  \"Timmothy\",\n  \"Timmy\",\n  \"Timothy\",\n  \"Tina\",\n  \"Tito\",\n  \"Titus\",\n  \"Tobin\",\n  \"Toby\",\n  \"Tod\",\n  \"Tom\",\n  \"Tomas\",\n  \"Tomasa\",\n  \"Tommie\",\n  \"Toney\",\n  \"Toni\",\n  \"Tony\",\n  \"Torey\",\n  \"Torrance\",\n  \"Torrey\",\n  \"Toy\",\n  \"Trace\",\n  \"Tracey\",\n  \"Tracy\",\n  \"Travis\",\n  \"Travon\",\n  \"Tre\",\n  \"Tremaine\",\n  \"Tremayne\",\n  \"Trent\",\n  \"Trenton\",\n  \"Tressa\",\n  \"Tressie\",\n  \"Treva\",\n  \"Trever\",\n  \"Trevion\",\n  \"Trevor\",\n  \"Trey\",\n  \"Trinity\",\n  \"Trisha\",\n  \"Tristian\",\n  \"Tristin\",\n  \"Triston\",\n  \"Troy\",\n  \"Trudie\",\n  \"Trycia\",\n  \"Trystan\",\n  \"Turner\",\n  \"Twila\",\n  \"Tyler\",\n  \"Tyra\",\n  \"Tyree\",\n  \"Tyreek\",\n  \"Tyrel\",\n  \"Tyrell\",\n  \"Tyrese\",\n  \"Tyrique\",\n  \"Tyshawn\",\n  \"Tyson\",\n  \"Ubaldo\",\n  \"Ulices\",\n  \"Ulises\",\n  \"Una\",\n  \"Unique\",\n  \"Urban\",\n  \"Uriah\",\n  \"Uriel\",\n  \"Ursula\",\n  \"Vada\",\n  \"Valentin\",\n  \"Valentina\",\n  \"Valentine\",\n  \"Valerie\",\n  \"Vallie\",\n  \"Van\",\n  \"Vance\",\n  \"Vanessa\",\n  \"Vaughn\",\n  \"Veda\",\n  \"Velda\",\n  \"Vella\",\n  \"Velma\",\n  \"Velva\",\n  \"Vena\",\n  \"Verda\",\n  \"Verdie\",\n  \"Vergie\",\n  \"Verla\",\n  \"Verlie\",\n  \"Vern\",\n  \"Verna\",\n  \"Verner\",\n  \"Vernice\",\n  \"Vernie\",\n  \"Vernon\",\n  \"Verona\",\n  \"Veronica\",\n  \"Vesta\",\n  \"Vicenta\",\n  \"Vicente\",\n  \"Vickie\",\n  \"Vicky\",\n  \"Victor\",\n  \"Victoria\",\n  \"Vida\",\n  \"Vidal\",\n  \"Vilma\",\n  \"Vince\",\n  \"Vincent\",\n  \"Vincenza\",\n  \"Vincenzo\",\n  \"Vinnie\",\n  \"Viola\",\n  \"Violet\",\n  \"Violette\",\n  \"Virgie\",\n  \"Virgil\",\n  \"Virginia\",\n  \"Virginie\",\n  \"Vita\",\n  \"Vito\",\n  \"Viva\",\n  \"Vivian\",\n  \"Viviane\",\n  \"Vivianne\",\n  \"Vivien\",\n  \"Vivienne\",\n  \"Vladimir\",\n  \"Wade\",\n  \"Waino\",\n  \"Waldo\",\n  \"Walker\",\n  \"Wallace\",\n  \"Walter\",\n  \"Walton\",\n  \"Wanda\",\n  \"Ward\",\n  \"Warren\",\n  \"Watson\",\n  \"Wava\",\n  \"Waylon\",\n  \"Wayne\",\n  \"Webster\",\n  \"Weldon\",\n  \"Wellington\",\n  \"Wendell\",\n  \"Wendy\",\n  \"Werner\",\n  \"Westley\",\n  \"Weston\",\n  \"Whitney\",\n  \"Wilber\",\n  \"Wilbert\",\n  \"Wilburn\",\n  \"Wiley\",\n  \"Wilford\",\n  \"Wilfred\",\n  \"Wilfredo\",\n  \"Wilfrid\",\n  \"Wilhelm\",\n  \"Wilhelmine\",\n  \"Will\",\n  \"Willa\",\n  \"Willard\",\n  \"William\",\n  \"Willie\",\n  \"Willis\",\n  \"Willow\",\n  \"Willy\",\n  \"Wilma\",\n  \"Wilmer\",\n  \"Wilson\",\n  \"Wilton\",\n  \"Winfield\",\n  \"Winifred\",\n  \"Winnifred\",\n  \"Winona\",\n  \"Winston\",\n  \"Woodrow\",\n  \"Wyatt\",\n  \"Wyman\",\n  \"Xander\",\n  \"Xavier\",\n  \"Xzavier\",\n  \"Yadira\",\n  \"Yasmeen\",\n  \"Yasmin\",\n  \"Yasmine\",\n  \"Yazmin\",\n  \"Yesenia\",\n  \"Yessenia\",\n  \"Yolanda\",\n  \"Yoshiko\",\n  \"Yvette\",\n  \"Yvonne\",\n  \"Zachariah\",\n  \"Zachary\",\n  \"Zachery\",\n  \"Zack\",\n  \"Zackary\",\n  \"Zackery\",\n  \"Zakary\",\n  \"Zander\",\n  \"Zane\",\n  \"Zaria\",\n  \"Zechariah\",\n  \"Zelda\",\n  \"Zella\",\n  \"Zelma\",\n  \"Zena\",\n  \"Zetta\",\n  \"Zion\",\n  \"Zita\",\n  \"Zoe\",\n  \"Zoey\",\n  \"Zoie\",\n  \"Zoila\",\n  \"Zola\",\n  \"Zora\",\n  \"Zula\"\n];\n","module[\"exports\"] = [\n  \"Abbott\",\n  \"Abernathy\",\n  \"Abshire\",\n  \"Adams\",\n  \"Altenwerth\",\n  \"Anderson\",\n  \"Ankunding\",\n  \"Armstrong\",\n  \"Auer\",\n  \"Aufderhar\",\n  \"Bahringer\",\n  \"Bailey\",\n  \"Balistreri\",\n  \"Barrows\",\n  \"Bartell\",\n  \"Bartoletti\",\n  \"Barton\",\n  \"Bashirian\",\n  \"Batz\",\n  \"Bauch\",\n  \"Baumbach\",\n  \"Bayer\",\n  \"Beahan\",\n  \"Beatty\",\n  \"Bechtelar\",\n  \"Becker\",\n  \"Bednar\",\n  \"Beer\",\n  \"Beier\",\n  \"Berge\",\n  \"Bergnaum\",\n  \"Bergstrom\",\n  \"Bernhard\",\n  \"Bernier\",\n  \"Bins\",\n  \"Blanda\",\n  \"Blick\",\n  \"Block\",\n  \"Bode\",\n  \"Boehm\",\n  \"Bogan\",\n  \"Bogisich\",\n  \"Borer\",\n  \"Bosco\",\n  \"Botsford\",\n  \"Boyer\",\n  \"Boyle\",\n  \"Bradtke\",\n  \"Brakus\",\n  \"Braun\",\n  \"Breitenberg\",\n  \"Brekke\",\n  \"Brown\",\n  \"Bruen\",\n  \"Buckridge\",\n  \"Carroll\",\n  \"Carter\",\n  \"Cartwright\",\n  \"Casper\",\n  \"Cassin\",\n  \"Champlin\",\n  \"Christiansen\",\n  \"Cole\",\n  \"Collier\",\n  \"Collins\",\n  \"Conn\",\n  \"Connelly\",\n  \"Conroy\",\n  \"Considine\",\n  \"Corkery\",\n  \"Cormier\",\n  \"Corwin\",\n  \"Cremin\",\n  \"Crist\",\n  \"Crona\",\n  \"Cronin\",\n  \"Crooks\",\n  \"Cruickshank\",\n  \"Cummerata\",\n  \"Cummings\",\n  \"Dach\",\n  \"D'Amore\",\n  \"Daniel\",\n  \"Dare\",\n  \"Daugherty\",\n  \"Davis\",\n  \"Deckow\",\n  \"Denesik\",\n  \"Dibbert\",\n  \"Dickens\",\n  \"Dicki\",\n  \"Dickinson\",\n  \"Dietrich\",\n  \"Donnelly\",\n  \"Dooley\",\n  \"Douglas\",\n  \"Doyle\",\n  \"DuBuque\",\n  \"Durgan\",\n  \"Ebert\",\n  \"Effertz\",\n  \"Emard\",\n  \"Emmerich\",\n  \"Erdman\",\n  \"Ernser\",\n  \"Fadel\",\n  \"Fahey\",\n  \"Farrell\",\n  \"Fay\",\n  \"Feeney\",\n  \"Feest\",\n  \"Feil\",\n  \"Ferry\",\n  \"Fisher\",\n  \"Flatley\",\n  \"Frami\",\n  \"Franecki\",\n  \"Friesen\",\n  \"Fritsch\",\n  \"Funk\",\n  \"Gaylord\",\n  \"Gerhold\",\n  \"Gerlach\",\n  \"Gibson\",\n  \"Gislason\",\n  \"Gleason\",\n  \"Gleichner\",\n  \"Glover\",\n  \"Goldner\",\n  \"Goodwin\",\n  \"Gorczany\",\n  \"Gottlieb\",\n  \"Goyette\",\n  \"Grady\",\n  \"Graham\",\n  \"Grant\",\n  \"Green\",\n  \"Greenfelder\",\n  \"Greenholt\",\n  \"Grimes\",\n  \"Gulgowski\",\n  \"Gusikowski\",\n  \"Gutkowski\",\n  \"Gutmann\",\n  \"Haag\",\n  \"Hackett\",\n  \"Hagenes\",\n  \"Hahn\",\n  \"Haley\",\n  \"Halvorson\",\n  \"Hamill\",\n  \"Hammes\",\n  \"Hand\",\n  \"Hane\",\n  \"Hansen\",\n  \"Harber\",\n  \"Harris\",\n  \"Hartmann\",\n  \"Harvey\",\n  \"Hauck\",\n  \"Hayes\",\n  \"Heaney\",\n  \"Heathcote\",\n  \"Hegmann\",\n  \"Heidenreich\",\n  \"Heller\",\n  \"Herman\",\n  \"Hermann\",\n  \"Hermiston\",\n  \"Herzog\",\n  \"Hessel\",\n  \"Hettinger\",\n  \"Hickle\",\n  \"Hilll\",\n  \"Hills\",\n  \"Hilpert\",\n  \"Hintz\",\n  \"Hirthe\",\n  \"Hodkiewicz\",\n  \"Hoeger\",\n  \"Homenick\",\n  \"Hoppe\",\n  \"Howe\",\n  \"Howell\",\n  \"Hudson\",\n  \"Huel\",\n  \"Huels\",\n  \"Hyatt\",\n  \"Jacobi\",\n  \"Jacobs\",\n  \"Jacobson\",\n  \"Jakubowski\",\n  \"Jaskolski\",\n  \"Jast\",\n  \"Jenkins\",\n  \"Jerde\",\n  \"Johns\",\n  \"Johnson\",\n  \"Johnston\",\n  \"Jones\",\n  \"Kassulke\",\n  \"Kautzer\",\n  \"Keebler\",\n  \"Keeling\",\n  \"Kemmer\",\n  \"Kerluke\",\n  \"Kertzmann\",\n  \"Kessler\",\n  \"Kiehn\",\n  \"Kihn\",\n  \"Kilback\",\n  \"King\",\n  \"Kirlin\",\n  \"Klein\",\n  \"Kling\",\n  \"Klocko\",\n  \"Koch\",\n  \"Koelpin\",\n  \"Koepp\",\n  \"Kohler\",\n  \"Konopelski\",\n  \"Koss\",\n  \"Kovacek\",\n  \"Kozey\",\n  \"Krajcik\",\n  \"Kreiger\",\n  \"Kris\",\n  \"Kshlerin\",\n  \"Kub\",\n  \"Kuhic\",\n  \"Kuhlman\",\n  \"Kuhn\",\n  \"Kulas\",\n  \"Kunde\",\n  \"Kunze\",\n  \"Kuphal\",\n  \"Kutch\",\n  \"Kuvalis\",\n  \"Labadie\",\n  \"Lakin\",\n  \"Lang\",\n  \"Langosh\",\n  \"Langworth\",\n  \"Larkin\",\n  \"Larson\",\n  \"Leannon\",\n  \"Lebsack\",\n  \"Ledner\",\n  \"Leffler\",\n  \"Legros\",\n  \"Lehner\",\n  \"Lemke\",\n  \"Lesch\",\n  \"Leuschke\",\n  \"Lind\",\n  \"Lindgren\",\n  \"Littel\",\n  \"Little\",\n  \"Lockman\",\n  \"Lowe\",\n  \"Lubowitz\",\n  \"Lueilwitz\",\n  \"Luettgen\",\n  \"Lynch\",\n  \"Macejkovic\",\n  \"MacGyver\",\n  \"Maggio\",\n  \"Mann\",\n  \"Mante\",\n  \"Marks\",\n  \"Marquardt\",\n  \"Marvin\",\n  \"Mayer\",\n  \"Mayert\",\n  \"McClure\",\n  \"McCullough\",\n  \"McDermott\",\n  \"McGlynn\",\n  \"McKenzie\",\n  \"McLaughlin\",\n  \"Medhurst\",\n  \"Mertz\",\n  \"Metz\",\n  \"Miller\",\n  \"Mills\",\n  \"Mitchell\",\n  \"Moen\",\n  \"Mohr\",\n  \"Monahan\",\n  \"Moore\",\n  \"Morar\",\n  \"Morissette\",\n  \"Mosciski\",\n  \"Mraz\",\n  \"Mueller\",\n  \"Muller\",\n  \"Murazik\",\n  \"Murphy\",\n  \"Murray\",\n  \"Nader\",\n  \"Nicolas\",\n  \"Nienow\",\n  \"Nikolaus\",\n  \"Nitzsche\",\n  \"Nolan\",\n  \"Oberbrunner\",\n  \"O'Connell\",\n  \"O'Conner\",\n  \"O'Hara\",\n  \"O'Keefe\",\n  \"O'Kon\",\n  \"Okuneva\",\n  \"Olson\",\n  \"Ondricka\",\n  \"O'Reilly\",\n  \"Orn\",\n  \"Ortiz\",\n  \"Osinski\",\n  \"Pacocha\",\n  \"Padberg\",\n  \"Pagac\",\n  \"Parisian\",\n  \"Parker\",\n  \"Paucek\",\n  \"Pfannerstill\",\n  \"Pfeffer\",\n  \"Pollich\",\n  \"Pouros\",\n  \"Powlowski\",\n  \"Predovic\",\n  \"Price\",\n  \"Prohaska\",\n  \"Prosacco\",\n  \"Purdy\",\n  \"Quigley\",\n  \"Quitzon\",\n  \"Rath\",\n  \"Ratke\",\n  \"Rau\",\n  \"Raynor\",\n  \"Reichel\",\n  \"Reichert\",\n  \"Reilly\",\n  \"Reinger\",\n  \"Rempel\",\n  \"Renner\",\n  \"Reynolds\",\n  \"Rice\",\n  \"Rippin\",\n  \"Ritchie\",\n  \"Robel\",\n  \"Roberts\",\n  \"Rodriguez\",\n  \"Rogahn\",\n  \"Rohan\",\n  \"Rolfson\",\n  \"Romaguera\",\n  \"Roob\",\n  \"Rosenbaum\",\n  \"Rowe\",\n  \"Ruecker\",\n  \"Runolfsdottir\",\n  \"Runolfsson\",\n  \"Runte\",\n  \"Russel\",\n  \"Rutherford\",\n  \"Ryan\",\n  \"Sanford\",\n  \"Satterfield\",\n  \"Sauer\",\n  \"Sawayn\",\n  \"Schaden\",\n  \"Schaefer\",\n  \"Schamberger\",\n  \"Schiller\",\n  \"Schimmel\",\n  \"Schinner\",\n  \"Schmeler\",\n  \"Schmidt\",\n  \"Schmitt\",\n  \"Schneider\",\n  \"Schoen\",\n  \"Schowalter\",\n  \"Schroeder\",\n  \"Schulist\",\n  \"Schultz\",\n  \"Schumm\",\n  \"Schuppe\",\n  \"Schuster\",\n  \"Senger\",\n  \"Shanahan\",\n  \"Shields\",\n  \"Simonis\",\n  \"Sipes\",\n  \"Skiles\",\n  \"Smith\",\n  \"Smitham\",\n  \"Spencer\",\n  \"Spinka\",\n  \"Sporer\",\n  \"Stamm\",\n  \"Stanton\",\n  \"Stark\",\n  \"Stehr\",\n  \"Steuber\",\n  \"Stiedemann\",\n  \"Stokes\",\n  \"Stoltenberg\",\n  \"Stracke\",\n  \"Streich\",\n  \"Stroman\",\n  \"Strosin\",\n  \"Swaniawski\",\n  \"Swift\",\n  \"Terry\",\n  \"Thiel\",\n  \"Thompson\",\n  \"Tillman\",\n  \"Torp\",\n  \"Torphy\",\n  \"Towne\",\n  \"Toy\",\n  \"Trantow\",\n  \"Tremblay\",\n  \"Treutel\",\n  \"Tromp\",\n  \"Turcotte\",\n  \"Turner\",\n  \"Ullrich\",\n  \"Upton\",\n  \"Vandervort\",\n  \"Veum\",\n  \"Volkman\",\n  \"Von\",\n  \"VonRueden\",\n  \"Waelchi\",\n  \"Walker\",\n  \"Walsh\",\n  \"Walter\",\n  \"Ward\",\n  \"Waters\",\n  \"Watsica\",\n  \"Weber\",\n  \"Wehner\",\n  \"Weimann\",\n  \"Weissnat\",\n  \"Welch\",\n  \"West\",\n  \"White\",\n  \"Wiegand\",\n  \"Wilderman\",\n  \"Wilkinson\",\n  \"Will\",\n  \"Williamson\",\n  \"Willms\",\n  \"Windler\",\n  \"Wintheiser\",\n  \"Wisoky\",\n  \"Wisozk\",\n  \"Witting\",\n  \"Wiza\",\n  \"Wolf\",\n  \"Wolff\",\n  \"Wuckert\",\n  \"Wunsch\",\n  \"Wyman\",\n  \"Yost\",\n  \"Yundt\",\n  \"Zboncak\",\n  \"Zemlak\",\n  \"Ziemann\",\n  \"Zieme\",\n  \"Zulauf\"\n];\n","module[\"exports\"] = [\n\"Asexual\",\n\"Female to male trans man\",\n\"Female to male transgender man\",\n\"Female to male transsexual man\",\n\"F2M\",\n\"Gender neutral\",\n\"Hermaphrodite\",\n\"Intersex man\",\n\"Intersex person\",\n\"Intersex woman\",\n\"Male to female trans woman\",\n\"Male to female transgender woman\",\n\"Male to female transsexual woman\",\n\"Man\",\n\"M2F\",\n\"Polygender\",\n\"T* man\",\n\"T* woman\",\n\"Two* person\",\n\"Two-spirit person\",\n\"Woman\",\n\"Agender\",\n\"Androgyne\",\n\"Androgynes\",\n\"Androgynous\",\n\"Bigender\",\n\"Cis\",\n\"Cis Female\",\n\"Cis Male\",\n\"Cis Man\",\n\"Cis Woman\",\n\"Cisgender\",\n\"Cisgender Female\",\n\"Cisgender Male\",\n\"Cisgender Man\",\n\"Cisgender Woman\",\n\"Female to Male\",\n\"FTM\",\n\"Gender Fluid\",\n\"Gender Nonconforming\",\n\"Gender Questioning\",\n\"Gender Variant\",\n\"Genderqueer\",\n\"Intersex\",\n\"Male to Female\",\n\"MTF\",\n\"Neither\",\n\"Neutrois\",\n\"Non-binary\",\n\"Other\",\n\"Pangender\",\n\"Trans\",\n\"Trans Female\",\n\"Trans Male\",\n\"Trans Man\",\n\"Trans Person\",\n\"Trans*Female\",\n\"Trans*Male\",\n\"Trans*Man\",\n\"Trans*Person\",\n\"Trans*Woman\",\n\"Transexual\",\n\"Transexual Female\",\n\"Transexual Male\",\n\"Transexual Man\",\n\"Transexual Person\",\n\"Transexual Woman\",\n\"Transgender Female\",\n\"Transgender Person\",\n\"Transmasculine\",\n\"Two-spirit\"\n];\n","module[\"exports\"] = [\n  \"Mr.\",\n  \"Mrs.\",\n  \"Ms.\",\n  \"Miss\",\n  \"Dr.\"\n];\n","module[\"exports\"] = [\n  \"Jr.\",\n  \"Sr.\",\n  \"I\",\n  \"II\",\n  \"III\",\n  \"IV\",\n  \"V\",\n  \"MD\",\n  \"DDS\",\n  \"PhD\",\n  \"DVM\"\n];\n","module[\"exports\"] = {\n  \"descriptor\": [\n    \"Lead\",\n    \"Senior\",\n    \"Direct\",\n    \"Corporate\",\n    \"Dynamic\",\n    \"Future\",\n    \"Product\",\n    \"National\",\n    \"Regional\",\n    \"District\",\n    \"Central\",\n    \"Global\",\n    \"Customer\",\n    \"Investor\",\n    \"Dynamic\",\n    \"International\",\n    \"Legacy\",\n    \"Forward\",\n    \"Internal\",\n    \"Human\",\n    \"Chief\",\n    \"Principal\"\n  ],\n  \"level\": [\n    \"Solutions\",\n    \"Program\",\n    \"Brand\",\n    \"Security\",\n    \"Research\",\n    \"Marketing\",\n    \"Directives\",\n    \"Implementation\",\n    \"Integration\",\n    \"Functionality\",\n    \"Response\",\n    \"Paradigm\",\n    \"Tactics\",\n    \"Identity\",\n    \"Markets\",\n    \"Group\",\n    \"Division\",\n    \"Applications\",\n    \"Optimization\",\n    \"Operations\",\n    \"Infrastructure\",\n    \"Intranet\",\n    \"Communications\",\n    \"Web\",\n    \"Branding\",\n    \"Quality\",\n    \"Assurance\",\n    \"Mobility\",\n    \"Accounts\",\n    \"Data\",\n    \"Creative\",\n    \"Configuration\",\n    \"Accountability\",\n    \"Interactions\",\n    \"Factors\",\n    \"Usability\",\n    \"Metrics\"\n  ],\n  \"job\": [\n    \"Supervisor\",\n    \"Associate\",\n    \"Executive\",\n    \"Liaison\",\n    \"Officer\",\n    \"Manager\",\n    \"Engineer\",\n    \"Specialist\",\n    \"Director\",\n    \"Coordinator\",\n    \"Administrator\",\n    \"Architect\",\n    \"Analyst\",\n    \"Designer\",\n    \"Planner\",\n    \"Orchestrator\",\n    \"Technician\",\n    \"Developer\",\n    \"Producer\",\n    \"Consultant\",\n    \"Assistant\",\n    \"Facilitator\",\n    \"Agent\",\n    \"Representative\",\n    \"Strategist\"\n  ]\n};\n","module[\"exports\"] = [\n  \"#{prefix} #{first_name} #{last_name}\",\n  \"#{first_name} #{last_name} #{suffix}\",\n  \"#{first_name} #{last_name}\",\n  \"#{first_name} #{last_name}\",\n  \"#{male_first_name} #{last_name}\",\n  \"#{female_first_name} #{last_name}\"\n];\n","var name = {};\nmodule['exports'] = name;\nname.male_first_name = require(\"./male_first_name\");\nname.female_first_name = require(\"./female_first_name\");\nname.first_name = require(\"./first_name\");\nname.last_name = require(\"./last_name\");\nname.gender = require(\"./gender\");\nname.prefix = require(\"./prefix\");\nname.suffix = require(\"./suffix\");\nname.title = require(\"./title\");\nname.name = require(\"./name\");","module[\"exports\"] = [\n  \"!##-!##-####\",\n  \"(!##) !##-####\",\n  \"1-!##-!##-####\",\n  \"!##.!##.####\",\n  \"!##-!##-####\",\n  \"(!##) !##-####\",\n  \"1-!##-!##-####\",\n  \"!##.!##.####\",\n  \"!##-!##-#### x###\",\n  \"(!##) !##-#### x###\",\n  \"1-!##-!##-#### x###\",\n  \"!##.!##.#### x###\",\n  \"!##-!##-#### x####\",\n  \"(!##) !##-#### x####\",\n  \"1-!##-!##-#### x####\",\n  \"!##.!##.#### x####\",\n  \"!##-!##-#### x#####\",\n  \"(!##) !##-#### x#####\",\n  \"1-!##-!##-#### x#####\",\n  \"!##.!##.#### x#####\"\n];\n","var phone_number = {};\nmodule['exports'] = phone_number;\nphone_number.formats = require(\"./formats\");\n","module[\"exports\"] = [\n  \"###-###-####\",\n  \"(###) ###-####\",\n  \"1-###-###-####\",\n  \"###.###.####\"\n];\n","var cell_phone = {};\nmodule['exports'] = cell_phone;\ncell_phone.formats = require(\"./formats\");\n","module[\"exports\"] = [\n  \"1234-2121-1221-1211\",\n  \"1212-1221-1121-1234\",\n  \"1211-1221-1234-2201\",\n  \"1228-1221-1221-1431\"\n];\n","module[\"exports\"] = [\n  \"2011-10-12\",\n  \"2012-11-12\",\n  \"2015-11-11\",\n  \"2013-9-12\"\n];\n","module[\"exports\"] = [\n  \"visa\",\n  \"mastercard\",\n  \"americanexpress\",\n  \"discover\"\n];\n","var business = {};\nmodule['exports'] = business;\nbusiness.credit_card_numbers = require(\"./credit_card_numbers\");\nbusiness.credit_card_expiry_dates = require(\"./credit_card_expiry_dates\");\nbusiness.credit_card_types = require(\"./credit_card_types\");\n","module[\"exports\"] = [\n  \"red\",\n  \"green\",\n  \"blue\",\n  \"yellow\",\n  \"purple\",\n  \"mint green\",\n  \"teal\",\n  \"white\",\n  \"black\",\n  \"orange\",\n  \"pink\",\n  \"grey\",\n  \"maroon\",\n  \"violet\",\n  \"turquoise\",\n  \"tan\",\n  \"sky blue\",\n  \"salmon\",\n  \"plum\",\n  \"orchid\",\n  \"olive\",\n  \"magenta\",\n  \"lime\",\n  \"ivory\",\n  \"indigo\",\n  \"gold\",\n  \"fuchsia\",\n  \"cyan\",\n  \"azure\",\n  \"lavender\",\n  \"silver\"\n];\n","module[\"exports\"] = [\n  \"Books\",\n  \"Movies\",\n  \"Music\",\n  \"Games\",\n  \"Electronics\",\n  \"Computers\",\n  \"Home\",\n  \"Garden\",\n  \"Tools\",\n  \"Grocery\",\n  \"Health\",\n  \"Beauty\",\n  \"Toys\",\n  \"Kids\",\n  \"Baby\",\n  \"Clothing\",\n  \"Shoes\",\n  \"Jewelery\",\n  \"Sports\",\n  \"Outdoors\",\n  \"Automotive\",\n  \"Industrial\"\n];\n","module[\"exports\"] = {\n  \"adjective\": [\n    \"Small\",\n    \"Ergonomic\",\n    \"Rustic\",\n    \"Intelligent\",\n    \"Gorgeous\",\n    \"Incredible\",\n    \"Fantastic\",\n    \"Practical\",\n    \"Sleek\",\n    \"Awesome\",\n    \"Generic\",\n    \"Handcrafted\",\n    \"Handmade\",\n    \"Licensed\",\n    \"Refined\",\n    \"Unbranded\",\n    \"Tasty\"\n  ],\n  \"material\": [\n    \"Steel\",\n    \"Wooden\",\n    \"Concrete\",\n    \"Plastic\",\n    \"Cotton\",\n    \"Granite\",\n    \"Rubber\",\n    \"Metal\",\n    \"Soft\",\n    \"Fresh\",\n    \"Frozen\"\n  ],\n  \"product\": [\n    \"Chair\",\n    \"Car\",\n    \"Computer\",\n    \"Keyboard\",\n    \"Mouse\",\n    \"Bike\",\n    \"Ball\",\n    \"Gloves\",\n    \"Pants\",\n    \"Shirt\",\n    \"Table\",\n    \"Shoes\",\n    \"Hat\",\n    \"Towels\",\n    \"Soap\",\n    \"Tuna\",\n    \"Chicken\",\n    \"Fish\",\n    \"Cheese\",\n    \"Bacon\",\n    \"Pizza\",\n    \"Salad\",\n    \"Sausages\",\n    \"Chips\"\n  ]\n};\n","module[\"exports\"] = [\n  \"Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support\",\n  \"The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive\",\n  \"New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016\",\n  \"The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality\",\n  \"The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design\",\n  \"The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J\",\n  \"The Football Is Good For Training And Recreational Purposes\",\n  \"Carbonite web goalkeeper gloves are ergonomically designed to give easy fit\",\n  \"Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles\",\n  \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n  \"The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients\",\n  \"Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals\"\n];","var commerce = {};\nmodule['exports'] = commerce;\ncommerce.color = require(\"./color\");\ncommerce.department = require(\"./department\");\ncommerce.product_name = require(\"./product_name\");\ncommerce.product_description = require(\"./product_description\");\n","module[\"exports\"] = [\n  \"ants\",\n  \"bats\",\n  \"bears\",\n  \"bees\",\n  \"birds\",\n  \"buffalo\",\n  \"cats\",\n  \"chickens\",\n  \"cattle\",\n  \"dogs\",\n  \"dolphins\",\n  \"ducks\",\n  \"elephants\",\n  \"fishes\",\n  \"foxes\",\n  \"frogs\",\n  \"geese\",\n  \"goats\",\n  \"horses\",\n  \"kangaroos\",\n  \"lions\",\n  \"monkeys\",\n  \"owls\",\n  \"oxen\",\n  \"penguins\",\n  \"people\",\n  \"pigs\",\n  \"rabbits\",\n  \"sheep\",\n  \"tigers\",\n  \"whales\",\n  \"wolves\",\n  \"zebras\",\n  \"banshees\",\n  \"crows\",\n  \"black cats\",\n  \"chimeras\",\n  \"ghosts\",\n  \"conspirators\",\n  \"dragons\",\n  \"dwarves\",\n  \"elves\",\n  \"enchanters\",\n  \"exorcists\",\n  \"sons\",\n  \"foes\",\n  \"giants\",\n  \"gnomes\",\n  \"goblins\",\n  \"gooses\",\n  \"griffins\",\n  \"lycanthropes\",\n  \"nemesis\",\n  \"ogres\",\n  \"oracles\",\n  \"prophets\",\n  \"sorcerors\",\n  \"spiders\",\n  \"spirits\",\n  \"vampires\",\n  \"warlocks\",\n  \"vixens\",\n  \"werewolves\",\n  \"witches\",\n  \"worshipers\",\n  \"zombies\",\n  \"druids\"\n];\n","module[\"exports\"] = [\n  \"#{Address.state} #{creature}\"\n];\n","var team = {};\nmodule['exports'] = team;\nteam.creature = require(\"./creature\");\nteam.name = require(\"./name\");\n","module[\"exports\"] = [\n  \"TCP\",\n  \"HTTP\",\n  \"SDD\",\n  \"RAM\",\n  \"GB\",\n  \"CSS\",\n  \"SSL\",\n  \"AGP\",\n  \"SQL\",\n  \"FTP\",\n  \"PCI\",\n  \"AI\",\n  \"ADP\",\n  \"RSS\",\n  \"XML\",\n  \"EXE\",\n  \"COM\",\n  \"HDD\",\n  \"THX\",\n  \"SMTP\",\n  \"SMS\",\n  \"USB\",\n  \"PNG\",\n  \"SAS\",\n  \"IB\",\n  \"SCSI\",\n  \"JSON\",\n  \"XSS\",\n  \"JBOD\"\n];\n","module[\"exports\"] = [\n  \"auxiliary\",\n  \"primary\",\n  \"back-end\",\n  \"digital\",\n  \"open-source\",\n  \"virtual\",\n  \"cross-platform\",\n  \"redundant\",\n  \"online\",\n  \"haptic\",\n  \"multi-byte\",\n  \"bluetooth\",\n  \"wireless\",\n  \"1080p\",\n  \"neural\",\n  \"optical\",\n  \"solid state\",\n  \"mobile\"\n];\n","module[\"exports\"] = [\n  \"driver\",\n  \"protocol\",\n  \"bandwidth\",\n  \"panel\",\n  \"microchip\",\n  \"program\",\n  \"port\",\n  \"card\",\n  \"array\",\n  \"interface\",\n  \"system\",\n  \"sensor\",\n  \"firewall\",\n  \"hard drive\",\n  \"pixel\",\n  \"alarm\",\n  \"feed\",\n  \"monitor\",\n  \"application\",\n  \"transmitter\",\n  \"bus\",\n  \"circuit\",\n  \"capacitor\",\n  \"matrix\"\n];\n","module[\"exports\"] = [\n  \"back up\",\n  \"bypass\",\n  \"hack\",\n  \"override\",\n  \"compress\",\n  \"copy\",\n  \"navigate\",\n  \"index\",\n  \"connect\",\n  \"generate\",\n  \"quantify\",\n  \"calculate\",\n  \"synthesize\",\n  \"input\",\n  \"transmit\",\n  \"program\",\n  \"reboot\",\n  \"parse\"\n];\n","module[\"exports\"] = [\n  \"backing up\",\n  \"bypassing\",\n  \"hacking\",\n  \"overriding\",\n  \"compressing\",\n  \"copying\",\n  \"navigating\",\n  \"indexing\",\n  \"connecting\",\n  \"generating\",\n  \"quantifying\",\n  \"calculating\",\n  \"synthesizing\",\n  \"transmitting\",\n  \"programming\",\n  \"parsing\"\n];\n","module[\"exports\"] = [\r\n  \"If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!\",\r\n  \"We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!\",\r\n  \"Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!\",\r\n  \"You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!\",\r\n  \"Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!\",\r\n  \"The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!\",\r\n  \"{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!\",\r\n  \"I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!\"\r\n];","var hacker = {};\nmodule['exports'] = hacker;\nhacker.abbreviation = require(\"./abbreviation\");\nhacker.adjective = require(\"./adjective\");\nhacker.noun = require(\"./noun\");\nhacker.verb = require(\"./verb\");\nhacker.ingverb = require(\"./ingverb\");\nhacker.phrase = require(\"./phrase\");\n","module[\"exports\"] = [\n  \"Redhold\",\n  \"Treeflex\",\n  \"Trippledex\",\n  \"Kanlam\",\n  \"Bigtax\",\n  \"Daltfresh\",\n  \"Toughjoyfax\",\n  \"Mat Lam Tam\",\n  \"Otcom\",\n  \"Tres-Zap\",\n  \"Y-Solowarm\",\n  \"Tresom\",\n  \"Voltsillam\",\n  \"Biodex\",\n  \"Greenlam\",\n  \"Viva\",\n  \"Matsoft\",\n  \"Temp\",\n  \"Zoolab\",\n  \"Subin\",\n  \"Rank\",\n  \"Job\",\n  \"Stringtough\",\n  \"Tin\",\n  \"It\",\n  \"Home Ing\",\n  \"Zamit\",\n  \"Sonsing\",\n  \"Konklab\",\n  \"Alpha\",\n  \"Latlux\",\n  \"Voyatouch\",\n  \"Alphazap\",\n  \"Holdlamis\",\n  \"Zaam-Dox\",\n  \"Sub-Ex\",\n  \"Quo Lux\",\n  \"Bamity\",\n  \"Ventosanzap\",\n  \"Lotstring\",\n  \"Hatity\",\n  \"Tempsoft\",\n  \"Overhold\",\n  \"Fixflex\",\n  \"Konklux\",\n  \"Zontrax\",\n  \"Tampflex\",\n  \"Span\",\n  \"Namfix\",\n  \"Transcof\",\n  \"Stim\",\n  \"Fix San\",\n  \"Sonair\",\n  \"Stronghold\",\n  \"Fintone\",\n  \"Y-find\",\n  \"Opela\",\n  \"Lotlux\",\n  \"Ronstring\",\n  \"Zathin\",\n  \"Duobam\",\n  \"Keylex\"\n];\n","module[\"exports\"] = [\n  \"0.#.#\",\n  \"0.##\",\n  \"#.##\",\n  \"#.#\",\n  \"#.#.#\"\n];\n","module[\"exports\"] = [\n  \"#{Name.name}\",\n  \"#{Company.name}\"\n];\n","var app = {};\nmodule['exports'] = app;\napp.name = require(\"./name\");\napp.version = require(\"./version\");\napp.author = require(\"./author\");\n","module[\"exports\"] = [\n  \"Checking\",\n  \"Savings\",\n  \"Money Market\",\n  \"Investment\",\n  \"Home Loan\",\n  \"Credit Card\",\n  \"Auto Loan\",\n  \"Personal Loan\"\n];\n","module[\"exports\"] = [\n  \"deposit\",\n  \"withdrawal\",\n  \"payment\",\n  \"invoice\"\n];\n","module[\"exports\"] = {\n  \"UAE Dirham\": {\n    \"code\": \"AED\",\n    \"symbol\": \"\"\n  },\n  \"Afghani\": {\n    \"code\": \"AFN\",\n    \"symbol\": \"؋\"\n  },\n  \"Lek\": {\n    \"code\": \"ALL\",\n    \"symbol\": \"Lek\"\n  },\n  \"Armenian Dram\": {\n    \"code\": \"AMD\",\n    \"symbol\": \"\"\n  },\n  \"Netherlands Antillian Guilder\": {\n    \"code\": \"ANG\",\n    \"symbol\": \"ƒ\"\n  },\n  \"Kwanza\": {\n    \"code\": \"AOA\",\n    \"symbol\": \"\"\n  },\n  \"Argentine Peso\": {\n    \"code\": \"ARS\",\n    \"symbol\": \"$\"\n  },\n  \"Australian Dollar\": {\n    \"code\": \"AUD\",\n    \"symbol\": \"$\"\n  },\n  \"Aruban Guilder\": {\n    \"code\": \"AWG\",\n    \"symbol\": \"ƒ\"\n  },\n  \"Azerbaijanian Manat\": {\n    \"code\": \"AZN\",\n    \"symbol\": \"ман\"\n  },\n  \"Convertible Marks\": {\n    \"code\": \"BAM\",\n    \"symbol\": \"KM\"\n  },\n  \"Barbados Dollar\": {\n    \"code\": \"BBD\",\n    \"symbol\": \"$\"\n  },\n  \"Taka\": {\n    \"code\": \"BDT\",\n    \"symbol\": \"\"\n  },\n  \"Bulgarian Lev\": {\n    \"code\": \"BGN\",\n    \"symbol\": \"лв\"\n  },\n  \"Bahraini Dinar\": {\n    \"code\": \"BHD\",\n    \"symbol\": \"\"\n  },\n  \"Burundi Franc\": {\n    \"code\": \"BIF\",\n    \"symbol\": \"\"\n  },\n  \"Bermudian Dollar (customarily known as Bermuda Dollar)\": {\n    \"code\": \"BMD\",\n    \"symbol\": \"$\"\n  },\n  \"Brunei Dollar\": {\n    \"code\": \"BND\",\n    \"symbol\": \"$\"\n  },\n  \"Boliviano boliviano\": {\n    \"code\": \"BOB\",\n    \"symbol\": \"Bs\"\n  },\n  \"Brazilian Real\": {\n    \"code\": \"BRL\",\n    \"symbol\": \"R$\"\n  },\n  \"Bahamian Dollar\": {\n    \"code\": \"BSD\",\n    \"symbol\": \"$\"\n  },\n  \"Pula\": {\n    \"code\": \"BWP\",\n    \"symbol\": \"P\"\n  },\n  \"Belarussian Ruble\": {\n    \"code\": \"BYR\",\n    \"symbol\": \"p.\"\n  },\n  \"Belize Dollar\": {\n    \"code\": \"BZD\",\n    \"symbol\": \"BZ$\"\n  },\n  \"Canadian Dollar\": {\n    \"code\": \"CAD\",\n    \"symbol\": \"$\"\n  },\n  \"Congolese Franc\": {\n    \"code\": \"CDF\",\n    \"symbol\": \"\"\n  },\n  \"Swiss Franc\": {\n    \"code\": \"CHF\",\n    \"symbol\": \"CHF\"\n  },\n  \"Chilean Peso\": {\n    \"code\": \"CLP\",\n    \"symbol\": \"$\"\n  },\n  \"Yuan Renminbi\": {\n    \"code\": \"CNY\",\n    \"symbol\": \"¥\"\n  },\n  \"Colombian Peso\": {\n    \"code\": \"COP\",\n    \"symbol\": \"$\"\n  },\n  \"Costa Rican Colon\": {\n    \"code\": \"CRC\",\n    \"symbol\": \"₡\"\n  },\n  \"Cuban Peso\": {\n    \"code\": \"CUP\",\n    \"symbol\": \"₱\"\n  },\n  \"Cuban Peso Convertible\": {\n    \"code\": \"CUC\",\n    \"symbol\": \"$\"\n  },\n  \"Cape Verde Escudo\": {\n    \"code\": \"CVE\",\n    \"symbol\": \"\"\n  },\n  \"Czech Koruna\": {\n    \"code\": \"CZK\",\n    \"symbol\": \"Kč\"\n  },\n  \"Djibouti Franc\": {\n    \"code\": \"DJF\",\n    \"symbol\": \"\"\n  },\n  \"Danish Krone\": {\n    \"code\": \"DKK\",\n    \"symbol\": \"kr\"\n  },\n  \"Dominican Peso\": {\n    \"code\": \"DOP\",\n    \"symbol\": \"RD$\"\n  },\n  \"Algerian Dinar\": {\n    \"code\": \"DZD\",\n    \"symbol\": \"\"\n  },\n  \"Kroon\": {\n    \"code\": \"EEK\",\n    \"symbol\": \"\"\n  },\n  \"Egyptian Pound\": {\n    \"code\": \"EGP\",\n    \"symbol\": \"£\"\n  },\n  \"Nakfa\": {\n    \"code\": \"ERN\",\n    \"symbol\": \"\"\n  },\n  \"Ethiopian Birr\": {\n    \"code\": \"ETB\",\n    \"symbol\": \"\"\n  },\n  \"Euro\": {\n    \"code\": \"EUR\",\n    \"symbol\": \"€\"\n  },\n  \"Fiji Dollar\": {\n    \"code\": \"FJD\",\n    \"symbol\": \"$\"\n  },\n  \"Falkland Islands Pound\": {\n    \"code\": \"FKP\",\n    \"symbol\": \"£\"\n  },\n  \"Pound Sterling\": {\n    \"code\": \"GBP\",\n    \"symbol\": \"£\"\n  },\n  \"Lari\": {\n    \"code\": \"GEL\",\n    \"symbol\": \"\"\n  },\n  \"Cedi\": {\n    \"code\": \"GHS\",\n    \"symbol\": \"\"\n  },\n  \"Gibraltar Pound\": {\n    \"code\": \"GIP\",\n    \"symbol\": \"£\"\n  },\n  \"Dalasi\": {\n    \"code\": \"GMD\",\n    \"symbol\": \"\"\n  },\n  \"Guinea Franc\": {\n    \"code\": \"GNF\",\n    \"symbol\": \"\"\n  },\n  \"Quetzal\": {\n    \"code\": \"GTQ\",\n    \"symbol\": \"Q\"\n  },\n  \"Guyana Dollar\": {\n    \"code\": \"GYD\",\n    \"symbol\": \"$\"\n  },\n  \"Hong Kong Dollar\": {\n    \"code\": \"HKD\",\n    \"symbol\": \"$\"\n  },\n  \"Lempira\": {\n    \"code\": \"HNL\",\n    \"symbol\": \"L\"\n  },\n  \"Croatian Kuna\": {\n    \"code\": \"HRK\",\n    \"symbol\": \"kn\"\n  },\n  \"Gourde\": {\n    \"code\": \"HTG\",\n    \"symbol\": \"\"\n  },\n  \"Forint\": {\n    \"code\": \"HUF\",\n    \"symbol\": \"Ft\"\n  },\n  \"Rupiah\": {\n    \"code\": \"IDR\",\n    \"symbol\": \"Rp\"\n  },\n  \"New Israeli Sheqel\": {\n    \"code\": \"ILS\",\n    \"symbol\": \"₪\"\n  },\n  \"Indian Rupee\": {\n    \"code\": \"INR\",\n    \"symbol\": \"\"\n  },\n  \"Bhutanese Ngultrum\": {\n    \"code\": \"BTN\",\n    \"symbol\": \"Nu\"\n  },\n  \"Indian Rupee\": {\n    \"code\": \"INR\",\n    \"symbol\": \"₹\"\n  },\n  \"Iraqi Dinar\": {\n    \"code\": \"IQD\",\n    \"symbol\": \"\"\n  },\n  \"Iranian Rial\": {\n    \"code\": \"IRR\",\n    \"symbol\": \"﷼\"\n  },\n  \"Iceland Krona\": {\n    \"code\": \"ISK\",\n    \"symbol\": \"kr\"\n  },\n  \"Jamaican Dollar\": {\n    \"code\": \"JMD\",\n    \"symbol\": \"J$\"\n  },\n  \"Jordanian Dinar\": {\n    \"code\": \"JOD\",\n    \"symbol\": \"\"\n  },\n  \"Yen\": {\n    \"code\": \"JPY\",\n    \"symbol\": \"¥\"\n  },\n  \"Kenyan Shilling\": {\n    \"code\": \"KES\",\n    \"symbol\": \"\"\n  },\n  \"Som\": {\n    \"code\": \"KGS\",\n    \"symbol\": \"лв\"\n  },\n  \"Riel\": {\n    \"code\": \"KHR\",\n    \"symbol\": \"៛\"\n  },\n  \"Comoro Franc\": {\n    \"code\": \"KMF\",\n    \"symbol\": \"\"\n  },\n  \"North Korean Won\": {\n    \"code\": \"KPW\",\n    \"symbol\": \"₩\"\n  },\n  \"Won\": {\n    \"code\": \"KRW\",\n    \"symbol\": \"₩\"\n  },\n  \"Kuwaiti Dinar\": {\n    \"code\": \"KWD\",\n    \"symbol\": \"\"\n  },\n  \"Cayman Islands Dollar\": {\n    \"code\": \"KYD\",\n    \"symbol\": \"$\"\n  },\n  \"Tenge\": {\n    \"code\": \"KZT\",\n    \"symbol\": \"лв\"\n  },\n  \"Kip\": {\n    \"code\": \"LAK\",\n    \"symbol\": \"₭\"\n  },\n  \"Lebanese Pound\": {\n    \"code\": \"LBP\",\n    \"symbol\": \"£\"\n  },\n  \"Sri Lanka Rupee\": {\n    \"code\": \"LKR\",\n    \"symbol\": \"₨\"\n  },\n  \"Liberian Dollar\": {\n    \"code\": \"LRD\",\n    \"symbol\": \"$\"\n  },\n  \"Lithuanian Litas\": {\n    \"code\": \"LTL\",\n    \"symbol\": \"Lt\"\n  },\n  \"Latvian Lats\": {\n    \"code\": \"LVL\",\n    \"symbol\": \"Ls\"\n  },\n  \"Libyan Dinar\": {\n    \"code\": \"LYD\",\n    \"symbol\": \"\"\n  },\n  \"Moroccan Dirham\": {\n    \"code\": \"MAD\",\n    \"symbol\": \"\"\n  },\n  \"Moldovan Leu\": {\n    \"code\": \"MDL\",\n    \"symbol\": \"\"\n  },\n  \"Malagasy Ariary\": {\n    \"code\": \"MGA\",\n    \"symbol\": \"\"\n  },\n  \"Denar\": {\n    \"code\": \"MKD\",\n    \"symbol\": \"ден\"\n  },\n  \"Kyat\": {\n    \"code\": \"MMK\",\n    \"symbol\": \"\"\n  },\n  \"Tugrik\": {\n    \"code\": \"MNT\",\n    \"symbol\": \"₮\"\n  },\n  \"Pataca\": {\n    \"code\": \"MOP\",\n    \"symbol\": \"\"\n  },\n  \"Ouguiya\": {\n    \"code\": \"MRO\",\n    \"symbol\": \"\"\n  },\n  \"Mauritius Rupee\": {\n    \"code\": \"MUR\",\n    \"symbol\": \"₨\"\n  },\n  \"Rufiyaa\": {\n    \"code\": \"MVR\",\n    \"symbol\": \"\"\n  },\n  \"Kwacha\": {\n    \"code\": \"MWK\",\n    \"symbol\": \"\"\n  },\n  \"Mexican Peso\": {\n    \"code\": \"MXN\",\n    \"symbol\": \"$\"\n  },\n  \"Malaysian Ringgit\": {\n    \"code\": \"MYR\",\n    \"symbol\": \"RM\"\n  },\n  \"Metical\": {\n    \"code\": \"MZN\",\n    \"symbol\": \"MT\"\n  },\n  \"Naira\": {\n    \"code\": \"NGN\",\n    \"symbol\": \"₦\"\n  },\n  \"Cordoba Oro\": {\n    \"code\": \"NIO\",\n    \"symbol\": \"C$\"\n  },\n  \"Norwegian Krone\": {\n    \"code\": \"NOK\",\n    \"symbol\": \"kr\"\n  },\n  \"Nepalese Rupee\": {\n    \"code\": \"NPR\",\n    \"symbol\": \"₨\"\n  },\n  \"New Zealand Dollar\": {\n    \"code\": \"NZD\",\n    \"symbol\": \"$\"\n  },\n  \"Rial Omani\": {\n    \"code\": \"OMR\",\n    \"symbol\": \"﷼\"\n  },\n  \"Balboa\": {\n    \"code\": \"PAB\",\n    \"symbol\": \"B/.\"\n  },\n  \"Nuevo Sol\": {\n    \"code\": \"PEN\",\n    \"symbol\": \"S/.\"\n  },\n  \"Kina\": {\n    \"code\": \"PGK\",\n    \"symbol\": \"\"\n  },\n  \"Philippine Peso\": {\n    \"code\": \"PHP\",\n    \"symbol\": \"Php\"\n  },\n  \"Pakistan Rupee\": {\n    \"code\": \"PKR\",\n    \"symbol\": \"₨\"\n  },\n  \"Zloty\": {\n    \"code\": \"PLN\",\n    \"symbol\": \"zł\"\n  },\n  \"Guarani\": {\n    \"code\": \"PYG\",\n    \"symbol\": \"Gs\"\n  },\n  \"Qatari Rial\": {\n    \"code\": \"QAR\",\n    \"symbol\": \"﷼\"\n  },\n  \"New Leu\": {\n    \"code\": \"RON\",\n    \"symbol\": \"lei\"\n  },\n  \"Serbian Dinar\": {\n    \"code\": \"RSD\",\n    \"symbol\": \"Дин.\"\n  },\n  \"Russian Ruble\": {\n    \"code\": \"RUB\",\n    \"symbol\": \"руб\"\n  },\n  \"Rwanda Franc\": {\n    \"code\": \"RWF\",\n    \"symbol\": \"\"\n  },\n  \"Saudi Riyal\": {\n    \"code\": \"SAR\",\n    \"symbol\": \"﷼\"\n  },\n  \"Solomon Islands Dollar\": {\n    \"code\": \"SBD\",\n    \"symbol\": \"$\"\n  },\n  \"Seychelles Rupee\": {\n    \"code\": \"SCR\",\n    \"symbol\": \"₨\"\n  },\n  \"Sudanese Pound\": {\n    \"code\": \"SDG\",\n    \"symbol\": \"\"\n  },\n  \"Swedish Krona\": {\n    \"code\": \"SEK\",\n    \"symbol\": \"kr\"\n  },\n  \"Singapore Dollar\": {\n    \"code\": \"SGD\",\n    \"symbol\": \"$\"\n  },\n  \"Saint Helena Pound\": {\n    \"code\": \"SHP\",\n    \"symbol\": \"£\"\n  },\n  \"Leone\": {\n    \"code\": \"SLL\",\n    \"symbol\": \"\"\n  },\n  \"Somali Shilling\": {\n    \"code\": \"SOS\",\n    \"symbol\": \"S\"\n  },\n  \"Surinam Dollar\": {\n    \"code\": \"SRD\",\n    \"symbol\": \"$\"\n  },\n  \"Dobra\": {\n    \"code\": \"STN\",\n    \"symbol\": \"Db\"\n  },\n  \"El Salvador Colon\": {\n    \"code\": \"SVC\",\n    \"symbol\": \"₡\"\n  },\n  \"Syrian Pound\": {\n    \"code\": \"SYP\",\n    \"symbol\": \"£\"\n  },\n  \"Lilangeni\": {\n    \"code\": \"SZL\",\n    \"symbol\": \"\"\n  },\n  \"Baht\": {\n    \"code\": \"THB\",\n    \"symbol\": \"฿\"\n  },\n  \"Somoni\": {\n    \"code\": \"TJS\",\n    \"symbol\": \"\"\n  },\n  \"Manat\": {\n    \"code\": \"TMT\",\n    \"symbol\": \"\"\n  },\n  \"Tunisian Dinar\": {\n    \"code\": \"TND\",\n    \"symbol\": \"\"\n  },\n  \"Pa'anga\": {\n    \"code\": \"TOP\",\n    \"symbol\": \"\"\n  },\n  \"Turkish Lira\": {\n    \"code\": \"TRY\",\n    \"symbol\": \"₺\"\n  },\n  \"Trinidad and Tobago Dollar\": {\n    \"code\": \"TTD\",\n    \"symbol\": \"TT$\"\n  },\n  \"New Taiwan Dollar\": {\n    \"code\": \"TWD\",\n    \"symbol\": \"NT$\"\n  },\n  \"Tanzanian Shilling\": {\n    \"code\": \"TZS\",\n    \"symbol\": \"\"\n  },\n  \"Hryvnia\": {\n    \"code\": \"UAH\",\n    \"symbol\": \"₴\"\n  },\n  \"Uganda Shilling\": {\n    \"code\": \"UGX\",\n    \"symbol\": \"\"\n  },\n  \"US Dollar\": {\n    \"code\": \"USD\",\n    \"symbol\": \"$\"\n  },\n  \"Peso Uruguayo\": {\n    \"code\": \"UYU\",\n    \"symbol\": \"$U\"\n  },\n  \"Uzbekistan Sum\": {\n    \"code\": \"UZS\",\n    \"symbol\": \"лв\"\n  },\n  \"Bolivar Fuerte\": {\n    \"code\": \"VEF\",\n    \"symbol\": \"Bs\"\n  },\n  \"Dong\": {\n    \"code\": \"VND\",\n    \"symbol\": \"₫\"\n  },\n  \"Vatu\": {\n    \"code\": \"VUV\",\n    \"symbol\": \"\"\n  },\n  \"Tala\": {\n    \"code\": \"WST\",\n    \"symbol\": \"\"\n  },\n  \"CFA Franc BEAC\": {\n    \"code\": \"XAF\",\n    \"symbol\": \"\"\n  },\n  \"Silver\": {\n    \"code\": \"XAG\",\n    \"symbol\": \"\"\n  },\n  \"Gold\": {\n    \"code\": \"XAU\",\n    \"symbol\": \"\"\n  },\n  \"Bond Markets Units European Composite Unit (EURCO)\": {\n    \"code\": \"XBA\",\n    \"symbol\": \"\"\n  },\n  \"European Monetary Unit (E.M.U.-6)\": {\n    \"code\": \"XBB\",\n    \"symbol\": \"\"\n  },\n  \"European Unit of Account 9(E.U.A.-9)\": {\n    \"code\": \"XBC\",\n    \"symbol\": \"\"\n  },\n  \"European Unit of Account 17(E.U.A.-17)\": {\n    \"code\": \"XBD\",\n    \"symbol\": \"\"\n  },\n  \"East Caribbean Dollar\": {\n    \"code\": \"XCD\",\n    \"symbol\": \"$\"\n  },\n  \"SDR\": {\n    \"code\": \"XDR\",\n    \"symbol\": \"\"\n  },\n  \"UIC-Franc\": {\n    \"code\": \"XFU\",\n    \"symbol\": \"\"\n  },\n  \"CFA Franc BCEAO\": {\n    \"code\": \"XOF\",\n    \"symbol\": \"\"\n  },\n  \"Palladium\": {\n    \"code\": \"XPD\",\n    \"symbol\": \"\"\n  },\n  \"CFP Franc\": {\n    \"code\": \"XPF\",\n    \"symbol\": \"\"\n  },\n  \"Platinum\": {\n    \"code\": \"XPT\",\n    \"symbol\": \"\"\n  },\n  \"Codes specifically reserved for testing purposes\": {\n    \"code\": \"XTS\",\n    \"symbol\": \"\"\n  },\n  \"Yemeni Rial\": {\n    \"code\": \"YER\",\n    \"symbol\": \"﷼\"\n  },\n  \"Rand\": {\n    \"code\": \"ZAR\",\n    \"symbol\": \"R\"\n  },\n  \"Lesotho Loti\": {\n    \"code\": \"LSL\",\n    \"symbol\": \"\"\n  },\n  \"Namibia Dollar\": {\n    \"code\": \"NAD\",\n    \"symbol\": \"N$\"\n  },\n  \"Zambian Kwacha\": {\n    \"code\": \"ZMK\",\n    \"symbol\": \"\"\n  },\n  \"Zimbabwe Dollar\": {\n    \"code\": \"ZWL\",\n    \"symbol\": \"\"\n  }\n};\n","module[\"exports\"] = [\n  \"4###########L\",\n  \"4###-####-####-###L\"\n];\n","module[\"exports\"] = [\n  \"5[1-5]##-####-####-###L\",\n  \"6771-89##-####-###L\"\n];\n","module[\"exports\"] = [\n  \"6011-####-####-###L\",\n  \"65##-####-####-###L\",\n  \"64[4-9]#-####-####-###L\",\n  \"6011-62##-####-####-###L\",\n  \"65##-62##-####-####-###L\",\n  \"64[4-9]#-62##-####-####-###L\"\n];\n","module[\"exports\"] = [\n  \"34##-######-####L\",\n  \"37##-######-####L\"\n];\n","module[\"exports\"] = [\n  \"30[0-5]#-######-###L\",\n  \"36##-######-###L\",\n  \"54##-####-####-###L\"\n];\n","module[\"exports\"] = [\n  \"3528-####-####-###L\",\n  \"3529-####-####-###L\",\n  \"35[3-8]#-####-####-###L\"\n];\n","module[\"exports\"] = [\n  \"6759-####-####-###L\",\n  \"6759-####-####-####-#L\",\n  \"6759-####-####-####-##L\"\n];\n","module[\"exports\"] = [\n  \"6767-####-####-###L\",\n  \"6767-####-####-####-#L\",\n  \"6767-####-####-####-##L\"\n];\n","module[\"exports\"] = [\n  \"5018-#{4}-#{4}-#{3}L\",\n  \"5020-#{4}-#{4}-#{3}L\",\n  \"5038-#{4}-#{4}-#{3}L\",\n  \"5893-#{4}-#{4}-#{3}L\",\n  \"6304-#{4}-#{4}-#{3}L\",\n  \"6759-#{4}-#{4}-#{3}L\",\n  \"676[1-3]-####-####-###L\",\n  \"5018#{11,15}L\",\n  \"5020#{11,15}L\",\n  \"5038#{11,15}L\",\n  \"5893#{11,15}L\",\n  \"6304#{11,15}L\",\n  \"6759#{11,15}L\",\n  \"676[1-3]#{11,15}L\",\n];\n\n// 5018 xxxx xxxx xxxx xxL\n","module[\"exports\"] = [\n  \"6304###########L\",\n  \"6706###########L\",\n  \"6771###########L\",\n  \"6709###########L\",\n  \"6304#########{5,6}L\",\n  \"6706#########{5,6}L\",\n  \"6771#########{5,6}L\",\n  \"6709#########{5,6}L\"\n];\n","module[\"exports\"] = [\n  \"63[7-9]#-####-####-###L\"\n];\n","var credit_card = {};\nmodule['exports'] = credit_card;\ncredit_card.visa = require(\"./visa\");\ncredit_card.mastercard = require(\"./mastercard\");\ncredit_card.discover = require(\"./discover\");\ncredit_card.american_express = require(\"./american_express\");\ncredit_card.diners_club = require(\"./diners_club\");\ncredit_card.jcb = require(\"./jcb\");\ncredit_card.switch = require(\"./switch\");\ncredit_card.solo = require(\"./solo\");\ncredit_card.maestro = require(\"./maestro\");\ncredit_card.laser = require(\"./laser\");\ncredit_card.instapayment = require(\"./instapayment.js\")\n","var finance = {};\nmodule['exports'] = finance;\nfinance.account_type = require(\"./account_type\");\nfinance.transaction_type = require(\"./transaction_type\");\nfinance.currency = require(\"./currency\");\nfinance.credit_card = require(\"./credit_card\");\n","// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799\nmodule[\"exports\"] = {\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  // Property \"wide_context\" is optional, if not set then \"wide\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  wide_context: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  abbr: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  // Property \"abbr_context\" is optional, if not set then \"abbr\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  abbr_context: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ]\n};\n","// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847\nmodule[\"exports\"] = {\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ],\n  // Property \"wide_context\" is optional, if not set then \"wide\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  wide_context: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ],\n  abbr: [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ],\n  // Property \"abbr_context\" is optional, if not set then \"abbr\" will be used instead\n  // It is used to specify a word in context, which may differ from a stand-alone word\n  abbr_context: [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ]\n};\n","var date = {};\nmodule[\"exports\"] = date;\ndate.month = require(\"./month\");\ndate.weekday = require(\"./weekday\");\n","module['exports'] = [\n    \"/Applications\",\n\t\t\"/bin\",\n    \"/boot\",\n    \"/boot/defaults\",\n    \"/dev\",\n    \"/etc\",\n    \"/etc/defaults\",\n    \"/etc/mail\",\n    \"/etc/namedb\",\n    \"/etc/periodic\",\n    \"/etc/ppp\",\n    \"/home\",\n    \"/home/user\",\n    \"/home/user/dir\",\n    \"/lib\",\n    \"/Library\",\n    \"/lost+found\",\n    \"/media\",\n    \"/mnt\",\n    \"/net\",\n    \"/Network\",\n    \"/opt\",\n    \"/opt/bin\",\n    \"/opt/include\",\n    \"/opt/lib\",\n    \"/opt/sbin\",\n    \"/opt/share\",\n    \"/private\",\n    \"/private/tmp\",\n    \"/private/var\",\n    \"/proc\",\n    \"/rescue\",\n    \"/root\",\n    \"/sbin\",\n    \"/selinux\",\n    \"/srv\",\n    \"/sys\",\n    \"/System\",\n    \"/tmp\",\n    \"/Users\",\n    \"/usr\",\n    \"/usr/X11R6\",\n    \"/usr/bin\",\n    \"/usr/include\",\n    \"/usr/lib\",\n    \"/usr/libdata\",\n    \"/usr/libexec\",\n    \"/usr/local/bin\",\n    \"/usr/local/src\",\n    \"/usr/obj\",\n    \"/usr/ports\",\n    \"/usr/sbin\",\n    \"/usr/share\",\n    \"/usr/src\",\n    \"/var\",\n    \"/var/log\",\n    \"/var/mail\",\n    \"/var/spool\",\n    \"/var/tmp\",\n    \"/var/yp\"\n];\n","/*\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nDefinitions from mime-db v1.21.0\nFor updates check: https://github.com/jshttp/mime-db/blob/master/db.json\n\n*/\n\nmodule['exports'] = {\n  \"application/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/3gpdash-qoe-report+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/3gpp-ims+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/a2l\": {\n    \"source\": \"iana\"\n  },\n  \"application/activemessage\": {\n    \"source\": \"iana\"\n  },\n  \"application/alto-costmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-directory+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcost+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcostparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointprop+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointpropparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-error+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/aml\": {\n    \"source\": \"iana\"\n  },\n  \"application/andrew-inset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez\"]\n  },\n  \"application/applefile\": {\n    \"source\": \"iana\"\n  },\n  \"application/applixware\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aw\"]\n  },\n  \"application/atf\": {\n    \"source\": \"iana\"\n  },\n  \"application/atfx\": {\n    \"source\": \"iana\"\n  },\n  \"application/atom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atom\"]\n  },\n  \"application/atomcat+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atomcat\"]\n  },\n  \"application/atomdeleted+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/atomicmail\": {\n    \"source\": \"iana\"\n  },\n  \"application/atomsvc+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atomsvc\"]\n  },\n  \"application/atxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/auth-policy+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/bacnet-xdd+zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/batch-smtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/beep+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/calendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/calendar+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/call-completion\": {\n    \"source\": \"iana\"\n  },\n  \"application/cals-1840\": {\n    \"source\": \"iana\"\n  },\n  \"application/cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/ccmp+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/ccxml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ccxml\"]\n  },\n  \"application/cdfx+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/cdmi-capability\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmia\"]\n  },\n  \"application/cdmi-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmic\"]\n  },\n  \"application/cdmi-domain\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmid\"]\n  },\n  \"application/cdmi-object\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmio\"]\n  },\n  \"application/cdmi-queue\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmiq\"]\n  },\n  \"application/cdni\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea-2018+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/cellml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/cfw\": {\n    \"source\": \"iana\"\n  },\n  \"application/cms\": {\n    \"source\": \"iana\"\n  },\n  \"application/cnrp+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/coap-group+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/commonground\": {\n    \"source\": \"iana\"\n  },\n  \"application/conference-info+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/cpl+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/csrattrs\": {\n    \"source\": \"iana\"\n  },\n  \"application/csta+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/cstadata+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/csvm+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cu-seeme\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cu\"]\n  },\n  \"application/cybercash\": {\n    \"source\": \"iana\"\n  },\n  \"application/dart\": {\n    \"compressible\": true\n  },\n  \"application/dash+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mdp\"]\n  },\n  \"application/dashdelta\": {\n    \"source\": \"iana\"\n  },\n  \"application/davmount+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"davmount\"]\n  },\n  \"application/dca-rft\": {\n    \"source\": \"iana\"\n  },\n  \"application/dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/dec-dx\": {\n    \"source\": \"iana\"\n  },\n  \"application/dialog-info+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/dicom\": {\n    \"source\": \"iana\"\n  },\n  \"application/dii\": {\n    \"source\": \"iana\"\n  },\n  \"application/dit\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns\": {\n    \"source\": \"iana\"\n  },\n  \"application/docbook+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dbk\"]\n  },\n  \"application/dskpp+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/dssc+der\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dssc\"]\n  },\n  \"application/dssc+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdssc\"]\n  },\n  \"application/dvcs\": {\n    \"source\": \"iana\"\n  },\n  \"application/ecmascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ecma\"]\n  },\n  \"application/edi-consent\": {\n    \"source\": \"iana\"\n  },\n  \"application/edi-x12\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/edifact\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/emergencycalldata.comment+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.deviceinfo+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.providerinfo+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.serviceinfo+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.subscriberinfo+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/emma+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"emma\"]\n  },\n  \"application/emotionml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/epp+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/epub+zip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"epub\"]\n  },\n  \"application/eshop\": {\n    \"source\": \"iana\"\n  },\n  \"application/exi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exi\"]\n  },\n  \"application/fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/fastsoap\": {\n    \"source\": \"iana\"\n  },\n  \"application/fdt+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/fits\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-tdpfr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pfr\"]\n  },\n  \"application/font-woff\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"woff\"]\n  },\n  \"application/font-woff2\": {\n    \"compressible\": false,\n    \"extensions\": [\"woff2\"]\n  },\n  \"application/framework-attributes+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/gml+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gml\"]\n  },\n  \"application/gpx+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gpx\"]\n  },\n  \"application/gxf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gxf\"]\n  },\n  \"application/gzip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/h224\": {\n    \"source\": \"iana\"\n  },\n  \"application/held+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/http\": {\n    \"source\": \"iana\"\n  },\n  \"application/hyperstudio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stk\"]\n  },\n  \"application/ibe-key-request+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/ibe-pkg-reply+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/ibe-pp-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/iges\": {\n    \"source\": \"iana\"\n  },\n  \"application/im-iscomposing+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/index\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.cmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.obj\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.response\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.vnd\": {\n    \"source\": \"iana\"\n  },\n  \"application/inkml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ink\",\"inkml\"]\n  },\n  \"application/iotp\": {\n    \"source\": \"iana\"\n  },\n  \"application/ipfix\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipfix\"]\n  },\n  \"application/ipp\": {\n    \"source\": \"iana\"\n  },\n  \"application/isup\": {\n    \"source\": \"iana\"\n  },\n  \"application/its+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/java-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jar\",\"war\",\"ear\"]\n  },\n  \"application/java-serialized-object\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"ser\"]\n  },\n  \"application/java-vm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"class\"]\n  },\n  \"application/javascript\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"js\"]\n  },\n  \"application/jose\": {\n    \"source\": \"iana\"\n  },\n  \"application/jose+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jrd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"json\",\"map\"]\n  },\n  \"application/json-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/json5\": {\n    \"extensions\": [\"json5\"]\n  },\n  \"application/jsonml+json\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonml\"]\n  },\n  \"application/jwk+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwk-set+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/kpml-request+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/kpml-response+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/ld+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonld\"]\n  },\n  \"application/link-format\": {\n    \"source\": \"iana\"\n  },\n  \"application/load-control+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/lost+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lostxml\"]\n  },\n  \"application/lostsync+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/lxf\": {\n    \"source\": \"iana\"\n  },\n  \"application/mac-binhex40\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hqx\"]\n  },\n  \"application/mac-compactpro\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpt\"]\n  },\n  \"application/macwriteii\": {\n    \"source\": \"iana\"\n  },\n  \"application/mads+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mads\"]\n  },\n  \"application/manifest+json\": {\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"webmanifest\"]\n  },\n  \"application/marc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mrc\"]\n  },\n  \"application/marcxml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mrcx\"]\n  },\n  \"application/mathematica\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ma\",\"nb\",\"mb\"]\n  },\n  \"application/mathml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mathml\"]\n  },\n  \"application/mathml-content+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mathml-presentation+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-associated-procedure-description+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-deregister+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-envelope+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-msk+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-msk-response+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-protection-description+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-reception-report+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-register+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-register-response+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-schedule+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbms-user-service-description+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mbox\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbox\"]\n  },\n  \"application/media-policy-dataset+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/media_control+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mediaservercontrol+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mscml\"]\n  },\n  \"application/merge-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/metalink+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"metalink\"]\n  },\n  \"application/metalink4+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"meta4\"]\n  },\n  \"application/mets+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mets\"]\n  },\n  \"application/mf4\": {\n    \"source\": \"iana\"\n  },\n  \"application/mikey\": {\n    \"source\": \"iana\"\n  },\n  \"application/mods+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mods\"]\n  },\n  \"application/moss-keys\": {\n    \"source\": \"iana\"\n  },\n  \"application/moss-signature\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/mp21\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m21\",\"mp21\"]\n  },\n  \"application/mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mp4s\",\"m4p\"]\n  },\n  \"application/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod-xmt\": {\n    \"source\": \"iana\"\n  },\n  \"application/mrb-consumer+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/mrb-publish+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/msc-ivr+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/msc-mixer+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/msword\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"doc\",\"dot\"]\n  },\n  \"application/mxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxf\"]\n  },\n  \"application/nasdata\": {\n    \"source\": \"iana\"\n  },\n  \"application/news-checkgroups\": {\n    \"source\": \"iana\"\n  },\n  \"application/news-groupinfo\": {\n    \"source\": \"iana\"\n  },\n  \"application/news-transmission\": {\n    \"source\": \"iana\"\n  },\n  \"application/nlsml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/nss\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/octet-stream\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]\n  },\n  \"application/oda\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oda\"]\n  },\n  \"application/odx\": {\n    \"source\": \"iana\"\n  },\n  \"application/oebps-package+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"opf\"]\n  },\n  \"application/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogx\"]\n  },\n  \"application/omdoc+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"omdoc\"]\n  },\n  \"application/onenote\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]\n  },\n  \"application/oxps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oxps\"]\n  },\n  \"application/p2p-overlay+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/patch-ops-error+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xer\"]\n  },\n  \"application/pdf\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pdf\"]\n  },\n  \"application/pdx\": {\n    \"source\": \"iana\"\n  },\n  \"application/pgp-encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pgp\"]\n  },\n  \"application/pgp-keys\": {\n    \"source\": \"iana\"\n  },\n  \"application/pgp-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\",\"sig\"]\n  },\n  \"application/pics-rules\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prf\"]\n  },\n  \"application/pidf+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/pidf-diff+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkcs10\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p10\"]\n  },\n  \"application/pkcs12\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkcs7-mime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7m\",\"p7c\"]\n  },\n  \"application/pkcs7-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7s\"]\n  },\n  \"application/pkcs8\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p8\"]\n  },\n  \"application/pkix-attr-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ac\"]\n  },\n  \"application/pkix-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cer\"]\n  },\n  \"application/pkix-crl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"crl\"]\n  },\n  \"application/pkix-pkipath\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pkipath\"]\n  },\n  \"application/pkixcmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pki\"]\n  },\n  \"application/pls+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pls\"]\n  },\n  \"application/poc-settings+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/postscript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ai\",\"eps\",\"ps\"]\n  },\n  \"application/provenance+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.alvestrand.titrax-sheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.cww\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cww\"]\n  },\n  \"application/prs.hpub+zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.nprend\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.plucker\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.rdf-xml-crypt\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.xsf+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/pskc+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pskcxml\"]\n  },\n  \"application/qsig\": {\n    \"source\": \"iana\"\n  },\n  \"application/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/rdap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rdf\"]\n  },\n  \"application/reginfo+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rif\"]\n  },\n  \"application/relax-ng-compact-syntax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rnc\"]\n  },\n  \"application/remote-printing\": {\n    \"source\": \"iana\"\n  },\n  \"application/reputon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/resource-lists+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rl\"]\n  },\n  \"application/resource-lists-diff+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rld\"]\n  },\n  \"application/rfc+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/riscos\": {\n    \"source\": \"iana\"\n  },\n  \"application/rlmi+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/rls-services+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rs\"]\n  },\n  \"application/rpki-ghostbusters\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gbr\"]\n  },\n  \"application/rpki-manifest\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mft\"]\n  },\n  \"application/rpki-roa\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"roa\"]\n  },\n  \"application/rpki-updown\": {\n    \"source\": \"iana\"\n  },\n  \"application/rsd+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rsd\"]\n  },\n  \"application/rss+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rss\"]\n  },\n  \"application/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"application/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"application/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"application/samlassertion+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/samlmetadata+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sbml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sbml\"]\n  },\n  \"application/scaip+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/scim+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scvp-cv-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scq\"]\n  },\n  \"application/scvp-cv-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scs\"]\n  },\n  \"application/scvp-vp-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spq\"]\n  },\n  \"application/scvp-vp-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spp\"]\n  },\n  \"application/sdp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sdp\"]\n  },\n  \"application/sep+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sep-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/session-info\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setpay\"]\n  },\n  \"application/set-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-registration-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setreg\"]\n  },\n  \"application/sgml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sgml-open-catalog\": {\n    \"source\": \"iana\"\n  },\n  \"application/shf+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"shf\"]\n  },\n  \"application/sieve\": {\n    \"source\": \"iana\"\n  },\n  \"application/simple-filter+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/simple-message-summary\": {\n    \"source\": \"iana\"\n  },\n  \"application/simplesymbolcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/slate\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"smi\",\"smil\"]\n  },\n  \"application/smpte336m\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sparql-query\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rq\"]\n  },\n  \"application/sparql-results+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"srx\"]\n  },\n  \"application/spirits-event+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sql\": {\n    \"source\": \"iana\"\n  },\n  \"application/srgs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gram\"]\n  },\n  \"application/srgs+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"grxml\"]\n  },\n  \"application/sru+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sru\"]\n  },\n  \"application/ssdl+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ssdl\"]\n  },\n  \"application/ssml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ssml\"]\n  },\n  \"application/tamp-apex-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-apex-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-error\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tar\": {\n    \"compressible\": true\n  },\n  \"application/tei+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tei\",\"teicorpus\"]\n  },\n  \"application/thraud+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tfi\"]\n  },\n  \"application/timestamp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamp-reply\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamped-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tsd\"]\n  },\n  \"application/ttml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/tve-trigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-grpsheet+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-ressheet+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-targetdesc+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-uisocketdesc+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vcard+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vemmi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vividence.scriptfile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.3gpp-prose+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp-prose-pc3ch+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.access-transfer-events+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.bsf+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mid-call+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pic-bw-large\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-small\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"psb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-var\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pvb\"]\n  },\n  \"application/vnd.3gpp.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.srvcc-ext+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.srvcc-info+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.state-and-event-info+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.ussd+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp2.bcmcsinfo+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp2.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp2.tcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tcap\"]\n  },\n  \"application/vnd.3m.post-it-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pwn\"]\n  },\n  \"application/vnd.accpac.simply.aso\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aso\"]\n  },\n  \"application/vnd.accpac.simply.imp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"imp\"]\n  },\n  \"application/vnd.acucobol\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acu\"]\n  },\n  \"application/vnd.acucorp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atc\",\"acutc\"]\n  },\n  \"application/vnd.adobe.air-application-installer-package+zip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"air\"]\n  },\n  \"application/vnd.adobe.flash.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.formscentral.fcdt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcdt\"]\n  },\n  \"application/vnd.adobe.fxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fxp\",\"fxpl\"]\n  },\n  \"application/vnd.adobe.partial-upload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.xdp+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdp\"]\n  },\n  \"application/vnd.adobe.xfdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdf\"]\n  },\n  \"application/vnd.aether.imp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ah-barcode\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ahead.space\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ahead\"]\n  },\n  \"application/vnd.airzip.filesecure.azf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azf\"]\n  },\n  \"application/vnd.airzip.filesecure.azs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azs\"]\n  },\n  \"application/vnd.amazon.ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"azw\"]\n  },\n  \"application/vnd.americandynamics.acc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acc\"]\n  },\n  \"application/vnd.amiga.ami\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ami\"]\n  },\n  \"application/vnd.amundsen.maze+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.android.package-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"apk\"]\n  },\n  \"application/vnd.anki\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.anser-web-certificate-issue-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cii\"]\n  },\n  \"application/vnd.anser-web-funds-transfer-initiation\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fti\"]\n  },\n  \"application/vnd.antix.game-component\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atx\"]\n  },\n  \"application/vnd.apache.thrift.binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.compact\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.json\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.api+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apple.installer+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpkg\"]\n  },\n  \"application/vnd.apple.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m3u8\"]\n  },\n  \"application/vnd.apple.pkpass\": {\n    \"compressible\": false,\n    \"extensions\": [\"pkpass\"]\n  },\n  \"application/vnd.arastra.swi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.aristanetworks.swi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"swi\"]\n  },\n  \"application/vnd.artsquare\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.astraea-software.iota\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iota\"]\n  },\n  \"application/vnd.audiograph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aep\"]\n  },\n  \"application/vnd.autopackage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.avistar+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.balsamiq.bmml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.balsamiq.bmpr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bekitzur-stech+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.biopax.rdf+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.blueice.multipass\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpm\"]\n  },\n  \"application/vnd.bluetooth.ep.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bluetooth.le.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bmi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bmi\"]\n  },\n  \"application/vnd.businessobjects\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rep\"]\n  },\n  \"application/vnd.cab-jscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-cpdl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-lips\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cendio.thinlinc.clientconf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.century-systems.tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chemdraw+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdxml\"]\n  },\n  \"application/vnd.chipnuts.karaoke-mmd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmd\"]\n  },\n  \"application/vnd.cinderella\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdy\"]\n  },\n  \"application/vnd.cirpack.isdn-ext\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.citationstyles.style+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.claymore\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cla\"]\n  },\n  \"application/vnd.cloanto.rp9\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rp9\"]\n  },\n  \"application/vnd.clonk.c4group\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amc\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config-pkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amz\"]\n  },\n  \"application/vnd.coffeescript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collection+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.doc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.next+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.commerce-battelle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commonspace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"csp\"]\n  },\n  \"application/vnd.contact.cmsg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdbcmsg\"]\n  },\n  \"application/vnd.cosmocaller\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmc\"]\n  },\n  \"application/vnd.crick.clicker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkx\"]\n  },\n  \"application/vnd.crick.clicker.keyboard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkk\"]\n  },\n  \"application/vnd.crick.clicker.palette\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkp\"]\n  },\n  \"application/vnd.crick.clicker.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkt\"]\n  },\n  \"application/vnd.crick.clicker.wordbank\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkw\"]\n  },\n  \"application/vnd.criticaltools.wbs+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wbs\"]\n  },\n  \"application/vnd.ctc-posml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pml\"]\n  },\n  \"application/vnd.ctct.ws+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-postscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-ppd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppd\"]\n  },\n  \"application/vnd.cups-raster\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-raw\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl.car\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"car\"]\n  },\n  \"application/vnd.curl.pcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcurl\"]\n  },\n  \"application/vnd.cyan.dean.root+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cybank\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dart\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dart\"]\n  },\n  \"application/vnd.data-vision.rdz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rdz\"]\n  },\n  \"application/vnd.debian.binary-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dece.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]\n  },\n  \"application/vnd.dece.ttml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvt\",\"uvvt\"]\n  },\n  \"application/vnd.dece.unspecified\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvx\",\"uvvx\"]\n  },\n  \"application/vnd.dece.zip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvz\",\"uvvz\"]\n  },\n  \"application/vnd.denovo.fcselayout-link\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fe_launch\"]\n  },\n  \"application/vnd.desmume-movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dir-bi.plate-dl-nosuffix\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dm.delegation+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dna\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dna\"]\n  },\n  \"application/vnd.document+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dolby.mlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mlp\"]\n  },\n  \"application/vnd.dolby.mobile.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dolby.mobile.2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.doremir.scorecloud-binary-document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dpgraph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dpg\"]\n  },\n  \"application/vnd.dreamfactory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dfac\"]\n  },\n  \"application/vnd.drive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ds-keypoint\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"kpxx\"]\n  },\n  \"application/vnd.dtg.local\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.flash\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ait\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ait\"]\n  },\n  \"application/vnd.dvb.dvbj\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.esgcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcdftnotifaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgpdd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcroaming\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-base\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-enhancement\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-aggregate-root+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-container+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-generic+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-ia-msglist+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-ia-registration-request+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-ia-registration-response+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-init+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.pfr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.service\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svc\"]\n  },\n  \"application/vnd.dxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dynageo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"geo\"]\n  },\n  \"application/vnd.dzr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.easykaraoke.cdgdownload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecdis-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mag\"]\n  },\n  \"application/vnd.ecowin.filerequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.fileupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.series\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesrequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.emclient.accessrequest+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.enliven\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nml\"]\n  },\n  \"application/vnd.enphase.envoy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eprints.data+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.epson.esf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esf\"]\n  },\n  \"application/vnd.epson.msf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msf\"]\n  },\n  \"application/vnd.epson.quickanime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qam\"]\n  },\n  \"application/vnd.epson.salt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"slt\"]\n  },\n  \"application/vnd.epson.ssf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ssf\"]\n  },\n  \"application/vnd.ericsson.quickcall\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eszigno3+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"es3\",\"et3\"]\n  },\n  \"application/vnd.etsi.aoc+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.asic-e+zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.asic-s+zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.cug+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvcommand+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvdiscovery+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvprofile+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvsad-bc+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvsad-cod+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvsad-npvr+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvservice+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvsync+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.iptvueprofile+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.mcid+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.mheg5\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.overload-control-policy-dataset+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.pstn+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.sci+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.simservs+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.timestamp-token\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.tsl+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.tsl.der\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eudora.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ezpix-album\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez2\"]\n  },\n  \"application/vnd.ezpix-package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez3\"]\n  },\n  \"application/vnd.f-secure.mobile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fastcopy-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fdf\"]\n  },\n  \"application/vnd.fdsn.mseed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseed\"]\n  },\n  \"application/vnd.fdsn.seed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"seed\",\"dataless\"]\n  },\n  \"application/vnd.ffsns\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.filmit.zfc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fints\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.firemonkeys.cloudcell\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.flographit\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gph\"]\n  },\n  \"application/vnd.fluxtime.clip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ftc\"]\n  },\n  \"application/vnd.font-fontforge-sfd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.framemaker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fm\",\"frame\",\"maker\",\"book\"]\n  },\n  \"application/vnd.frogans.fnc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fnc\"]\n  },\n  \"application/vnd.frogans.ltf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ltf\"]\n  },\n  \"application/vnd.fsc.weblaunch\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fsc\"]\n  },\n  \"application/vnd.fujitsu.oasys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oas\"]\n  },\n  \"application/vnd.fujitsu.oasys2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa2\"]\n  },\n  \"application/vnd.fujitsu.oasys3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa3\"]\n  },\n  \"application/vnd.fujitsu.oasysgp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fg5\"]\n  },\n  \"application/vnd.fujitsu.oasysprs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bh2\"]\n  },\n  \"application/vnd.fujixerox.art-ex\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.art4\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.ddd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ddd\"]\n  },\n  \"application/vnd.fujixerox.docuworks\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdw\"]\n  },\n  \"application/vnd.fujixerox.docuworks.binder\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xbd\"]\n  },\n  \"application/vnd.fujixerox.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.hbpl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fut-misnet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fuzzysheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fzs\"]\n  },\n  \"application/vnd.genomatix.tuxedo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txd\"]\n  },\n  \"application/vnd.geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geocube+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.geogebra.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggb\"]\n  },\n  \"application/vnd.geogebra.tool\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggt\"]\n  },\n  \"application/vnd.geometry-explorer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gex\",\"gre\"]\n  },\n  \"application/vnd.geonext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gxt\"]\n  },\n  \"application/vnd.geoplan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g2w\"]\n  },\n  \"application/vnd.geospace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3w\"]\n  },\n  \"application/vnd.gerber\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gmx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gmx\"]\n  },\n  \"application/vnd.google-apps.document\": {\n    \"compressible\": false,\n    \"extensions\": [\"gdoc\"]\n  },\n  \"application/vnd.google-apps.presentation\": {\n    \"compressible\": false,\n    \"extensions\": [\"gslides\"]\n  },\n  \"application/vnd.google-apps.spreadsheet\": {\n    \"compressible\": false,\n    \"extensions\": [\"gsheet\"]\n  },\n  \"application/vnd.google-earth.kml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"kml\"]\n  },\n  \"application/vnd.google-earth.kmz\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"kmz\"]\n  },\n  \"application/vnd.gov.sk.e-form+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gov.sk.e-form+zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gov.sk.xmldatacontainer+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.grafeq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gqf\",\"gqs\"]\n  },\n  \"application/vnd.gridmp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.groove-account\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gac\"]\n  },\n  \"application/vnd.groove-help\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ghf\"]\n  },\n  \"application/vnd.groove-identity-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gim\"]\n  },\n  \"application/vnd.groove-injector\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"grv\"]\n  },\n  \"application/vnd.groove-tool-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtm\"]\n  },\n  \"application/vnd.groove-tool-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpl\"]\n  },\n  \"application/vnd.groove-vcard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcg\"]\n  },\n  \"application/vnd.hal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hal+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hal\"]\n  },\n  \"application/vnd.handheld-entertainment+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"zmm\"]\n  },\n  \"application/vnd.hbci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hbci\"]\n  },\n  \"application/vnd.hcl-bireports\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.heroku+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hhe.lesson-player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"les\"]\n  },\n  \"application/vnd.hp-hpgl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpgl\"]\n  },\n  \"application/vnd.hp-hpid\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpid\"]\n  },\n  \"application/vnd.hp-hps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hps\"]\n  },\n  \"application/vnd.hp-jlyt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jlt\"]\n  },\n  \"application/vnd.hp-pcl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcl\"]\n  },\n  \"application/vnd.hp-pclxl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pclxl\"]\n  },\n  \"application/vnd.httphone\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hydrostatix.sof-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfd-hdstx\"]\n  },\n  \"application/vnd.hyperdrive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hzn-3d-crossword\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.electronic-media\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.minipay\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpy\"]\n  },\n  \"application/vnd.ibm.modcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"afp\",\"listafp\",\"list3820\"]\n  },\n  \"application/vnd.ibm.rights-management\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"irm\"]\n  },\n  \"application/vnd.ibm.secure-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sc\"]\n  },\n  \"application/vnd.iccprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"icc\",\"icm\"]\n  },\n  \"application/vnd.ieee.1905\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.igloader\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igl\"]\n  },\n  \"application/vnd.immervision-ivp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivp\"]\n  },\n  \"application/vnd.immervision-ivu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivu\"]\n  },\n  \"application/vnd.ims.imsccv1p1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.lis.v2.result+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolconsumerprofile+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy.id+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings.simple+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informedcontrol.rms+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.informix-visionary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.innopath.wamp.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.insors.igm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igm\"]\n  },\n  \"application/vnd.intercon.formnet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpw\",\"xpx\"]\n  },\n  \"application/vnd.intergeo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"i2g\"]\n  },\n  \"application/vnd.intertrust.digibox\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intertrust.nncp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intu.qbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qbo\"]\n  },\n  \"application/vnd.intu.qfx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qfx\"]\n  },\n  \"application/vnd.iptc.g2.catalogitem+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.iptc.g2.conceptitem+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.iptc.g2.knowledgeitem+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.iptc.g2.newsitem+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.iptc.g2.newsmessage+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.iptc.g2.packageitem+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.iptc.g2.planningitem+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ipunplugged.rcprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rcprofile\"]\n  },\n  \"application/vnd.irepository.package+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"irp\"]\n  },\n  \"application/vnd.is-xpr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpr\"]\n  },\n  \"application/vnd.isac.fcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcs\"]\n  },\n  \"application/vnd.jam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jam\"]\n  },\n  \"application/vnd.japannet-directory-service\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-jpnstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-payment-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-setstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.jcp.javame.midlet-rms\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rms\"]\n  },\n  \"application/vnd.jisp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jisp\"]\n  },\n  \"application/vnd.joost.joda-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"joda\"]\n  },\n  \"application/vnd.jsk.isdn-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.kahootz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktz\",\"ktr\"]\n  },\n  \"application/vnd.kde.karbon\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"karbon\"]\n  },\n  \"application/vnd.kde.kchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chrt\"]\n  },\n  \"application/vnd.kde.kformula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kfo\"]\n  },\n  \"application/vnd.kde.kivio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flw\"]\n  },\n  \"application/vnd.kde.kontour\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kon\"]\n  },\n  \"application/vnd.kde.kpresenter\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kpr\",\"kpt\"]\n  },\n  \"application/vnd.kde.kspread\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ksp\"]\n  },\n  \"application/vnd.kde.kword\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kwd\",\"kwt\"]\n  },\n  \"application/vnd.kenameaapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"htke\"]\n  },\n  \"application/vnd.kidspiration\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kia\"]\n  },\n  \"application/vnd.kinar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kne\",\"knp\"]\n  },\n  \"application/vnd.koan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"skp\",\"skd\",\"skt\",\"skm\"]\n  },\n  \"application/vnd.kodak-descriptor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sse\"]\n  },\n  \"application/vnd.las.las+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lasxml\"]\n  },\n  \"application/vnd.liberty-request+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.llamagraphics.life-balance.desktop\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lbd\"]\n  },\n  \"application/vnd.llamagraphics.life-balance.exchange+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lbe\"]\n  },\n  \"application/vnd.lotus-1-2-3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"123\"]\n  },\n  \"application/vnd.lotus-approach\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"apr\"]\n  },\n  \"application/vnd.lotus-freelance\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pre\"]\n  },\n  \"application/vnd.lotus-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nsf\"]\n  },\n  \"application/vnd.lotus-organizer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"org\"]\n  },\n  \"application/vnd.lotus-screencam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scm\"]\n  },\n  \"application/vnd.lotus-wordpro\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lwp\"]\n  },\n  \"application/vnd.macports.portpkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"portpkg\"]\n  },\n  \"application/vnd.mapbox-vector-tile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.marlin.drm.actiontoken+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.marlin.drm.conftoken+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.marlin.drm.license+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.marlin.drm.mdcf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mason+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.maxmind.maxmind-db\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mcd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mcd\"]\n  },\n  \"application/vnd.medcalcdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mc1\"]\n  },\n  \"application/vnd.mediastation.cdkey\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdkey\"]\n  },\n  \"application/vnd.meridian-slingshot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mfer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mwf\"]\n  },\n  \"application/vnd.mfmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mfm\"]\n  },\n  \"application/vnd.micro+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.micrografx.flo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flo\"]\n  },\n  \"application/vnd.micrografx.igx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igx\"]\n  },\n  \"application/vnd.microsoft.portable-executable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.miele+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.mif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mif\"]\n  },\n  \"application/vnd.minisoft-hp3000-save\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mitsubishi.misty-guard.trustweb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mobius.daf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"daf\"]\n  },\n  \"application/vnd.mobius.dis\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dis\"]\n  },\n  \"application/vnd.mobius.mbk\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbk\"]\n  },\n  \"application/vnd.mobius.mqy\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mqy\"]\n  },\n  \"application/vnd.mobius.msl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msl\"]\n  },\n  \"application/vnd.mobius.plc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plc\"]\n  },\n  \"application/vnd.mobius.txf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txf\"]\n  },\n  \"application/vnd.mophun.application\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpn\"]\n  },\n  \"application/vnd.mophun.certificate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpc\"]\n  },\n  \"application/vnd.motorola.flexsuite\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.adsi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.fis\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.gotap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.kmr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.ttc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.wem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.iprm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mozilla.xul+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xul\"]\n  },\n  \"application/vnd.ms-3mfdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-artgalry\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cil\"]\n  },\n  \"application/vnd.ms-asf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-cab-compressed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cab\"]\n  },\n  \"application/vnd.ms-color.iccprofile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-excel\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]\n  },\n  \"application/vnd.ms-excel.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlam\"]\n  },\n  \"application/vnd.ms-excel.sheet.binary.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsb\"]\n  },\n  \"application/vnd.ms-excel.sheet.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsm\"]\n  },\n  \"application/vnd.ms-excel.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltm\"]\n  },\n  \"application/vnd.ms-fontobject\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eot\"]\n  },\n  \"application/vnd.ms-htmlhelp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chm\"]\n  },\n  \"application/vnd.ms-ims\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ims\"]\n  },\n  \"application/vnd.ms-lrm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lrm\"]\n  },\n  \"application/vnd.ms-office.activex+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-officetheme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"thmx\"]\n  },\n  \"application/vnd.ms-opentype\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-package.obfuscated-opentype\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-pki.seccat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cat\"]\n  },\n  \"application/vnd.ms-pki.stl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stl\"]\n  },\n  \"application/vnd.ms-playready.initiator+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-powerpoint\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ppt\",\"pps\",\"pot\"]\n  },\n  \"application/vnd.ms-powerpoint.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppam\"]\n  },\n  \"application/vnd.ms-powerpoint.presentation.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pptm\"]\n  },\n  \"application/vnd.ms-powerpoint.slide.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldm\"]\n  },\n  \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsm\"]\n  },\n  \"application/vnd.ms-powerpoint.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potm\"]\n  },\n  \"application/vnd.ms-printdevicecapabilities+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-printing.printticket+xml\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-project\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpp\",\"mpt\"]\n  },\n  \"application/vnd.ms-tnef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.nwprinting.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.printerpairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.wsd.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-word.document.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"docm\"]\n  },\n  \"application/vnd.ms-word.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotm\"]\n  },\n  \"application/vnd.ms-works\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wps\",\"wks\",\"wcm\",\"wdb\"]\n  },\n  \"application/vnd.ms-wpl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpl\"]\n  },\n  \"application/vnd.ms-xpsdocument\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xps\"]\n  },\n  \"application/vnd.msa-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mseq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseq\"]\n  },\n  \"application/vnd.msign\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator.cif\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.music-niff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.musician\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mus\"]\n  },\n  \"application/vnd.muvee.style\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msty\"]\n  },\n  \"application/vnd.mynfc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"taglet\"]\n  },\n  \"application/vnd.ncd.control\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ncd.reference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nervana\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.netfpx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.neurolanguage.nlu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nlu\"]\n  },\n  \"application/vnd.nintendo.nitro.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.snes.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nitf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ntf\",\"nitf\"]\n  },\n  \"application/vnd.noblenet-directory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnd\"]\n  },\n  \"application/vnd.noblenet-sealer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nns\"]\n  },\n  \"application/vnd.noblenet-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnw\"]\n  },\n  \"application/vnd.nokia.catalogs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.iptv.config+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.isds-radio-presets\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmarkcollection+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.n-gage.ac+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.n-gage.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ngdat\"]\n  },\n  \"application/vnd.nokia.n-gage.symbian.install\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"n-gage\"]\n  },\n  \"application/vnd.nokia.ncd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.radio-preset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpst\"]\n  },\n  \"application/vnd.nokia.radio-presets\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpss\"]\n  },\n  \"application/vnd.novadigm.edm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edm\"]\n  },\n  \"application/vnd.novadigm.edx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edx\"]\n  },\n  \"application/vnd.novadigm.ext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ext\"]\n  },\n  \"application/vnd.ntt-local.content-share\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.file-transfer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.ogw_remote-access\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_remote\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oasis.opendocument.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odc\"]\n  },\n  \"application/vnd.oasis.opendocument.chart-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otc\"]\n  },\n  \"application/vnd.oasis.opendocument.database\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odb\"]\n  },\n  \"application/vnd.oasis.opendocument.formula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odf\"]\n  },\n  \"application/vnd.oasis.opendocument.formula-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odft\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odg\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otg\"]\n  },\n  \"application/vnd.oasis.opendocument.image\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odi\"]\n  },\n  \"application/vnd.oasis.opendocument.image-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oti\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odp\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otp\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ods\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ots\"]\n  },\n  \"application/vnd.oasis.opendocument.text\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odt\"]\n  },\n  \"application/vnd.oasis.opendocument.text-master\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odm\"]\n  },\n  \"application/vnd.oasis.opendocument.text-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ott\"]\n  },\n  \"application/vnd.oasis.opendocument.text-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oth\"]\n  },\n  \"application/vnd.obn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oftn.l10n+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessdownload+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.contentaccessstreaming+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.cspg-hexbinary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.dae.svg+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.dae.xhtml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.mippvcontrolmessage+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.pae.gem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.spdiscovery+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.spdlist+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.ueprofile+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.userprofile+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.olpc-sugar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xo\"]\n  },\n  \"application/vnd.oma-scws-config\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.associated-procedure-parameter+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.drm-trigger+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.imd+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.ltkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.notification+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.provisioningtrigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgboot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgdd+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgdu\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.simple-symbol-container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.smartcard-trigger+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sprov+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.stkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-address-book+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-feature-handler+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-pcc+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-subs-invite+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-user-prefs+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dcdc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dd2+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dd2\"]\n  },\n  \"application/vnd.oma.drm.risd+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.group-usage-list+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.pal+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.poc.detailed-progress-report+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.poc.final-report+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.poc.groups+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.poc.invocation-descriptor+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.poc.optimized-progress-report+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.push\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.scidm.messages+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.xcap-directory+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.omads-email+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.omads-file+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.omads-folder+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.omaloc-supl-init\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openblox.game+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openblox.game-binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openeye.oeb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openofficeorg.extension\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"oxt\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pptx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"potx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xlsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xltx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.themeoverride+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.vmldrawing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"docx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dotx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-package.core-properties+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-package.relationships+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oracle.resource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.orange.indata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osa.netdeploy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgeo.mapguide.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgp\"]\n  },\n  \"application/vnd.osgi.bundle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgi.dp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dp\"]\n  },\n  \"application/vnd.osgi.subsystem\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esa\"]\n  },\n  \"application/vnd.otps.ct-kip+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oxli.countgraph\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pagerduty+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.palm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pdb\",\"pqa\",\"oprc\"]\n  },\n  \"application/vnd.panoply\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.paos+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.paos.xml\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.pawaafile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"paw\"]\n  },\n  \"application/vnd.pcos\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pg.format\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"str\"]\n  },\n  \"application/vnd.pg.osasli\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ei6\"]\n  },\n  \"application/vnd.piaccess.application-licence\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.picsel\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"efif\"]\n  },\n  \"application/vnd.pmi.widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wg\"]\n  },\n  \"application/vnd.poc.group-advertisement+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pocketlearn\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plf\"]\n  },\n  \"application/vnd.powerbuilder6\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pbd\"]\n  },\n  \"application/vnd.powerbuilder6-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.preminet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.previewsystems.box\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"box\"]\n  },\n  \"application/vnd.proteus.magazine\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgz\"]\n  },\n  \"application/vnd.publishare-delta-tree\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qps\"]\n  },\n  \"application/vnd.pvi.ptid1\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ptid\"]\n  },\n  \"application/vnd.pwg-multiplexed\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pwg-xhtml-print+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.qualcomm.brew-app-res\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quark.quarkxpress\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]\n  },\n  \"application/vnd.quobject-quoxdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.moml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-audit+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-audit-conf+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-audit-conn+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-audit-dialog+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-audit-stream+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-conf+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-dialog+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-dialog-base+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-dialog-fax-detect+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-dialog-group+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-dialog-speech+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.msml-dialog-transform+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rainstor.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rapid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.realvnc.bed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bed\"]\n  },\n  \"application/vnd.recordare.musicxml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxl\"]\n  },\n  \"application/vnd.recordare.musicxml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"musicxml\"]\n  },\n  \"application/vnd.renlearn.rlprint\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rig.cryptonote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cryptonote\"]\n  },\n  \"application/vnd.rim.cod\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cod\"]\n  },\n  \"application/vnd.rn-realmedia\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rm\"]\n  },\n  \"application/vnd.rn-realmedia-vbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmvb\"]\n  },\n  \"application/vnd.route66.link66+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"link66\"]\n  },\n  \"application/vnd.rs-274x\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ruckus.download\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.s3sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sailingtracker.track\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"st\"]\n  },\n  \"application/vnd.sbm.cid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.mid2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.scribus\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.3df\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.csf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.doc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.eml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.mht\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.net\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.ppt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.tiff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.xls\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.seemail\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"see\"]\n  },\n  \"application/vnd.sema\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sema\"]\n  },\n  \"application/vnd.semd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semd\"]\n  },\n  \"application/vnd.semf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semf\"]\n  },\n  \"application/vnd.shana.informed.formdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ifm\"]\n  },\n  \"application/vnd.shana.informed.formtemplate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"itp\"]\n  },\n  \"application/vnd.shana.informed.interchange\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iif\"]\n  },\n  \"application/vnd.shana.informed.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipk\"]\n  },\n  \"application/vnd.simtech-mindmapper\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"twd\",\"twds\"]\n  },\n  \"application/vnd.siren+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.smaf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmf\"]\n  },\n  \"application/vnd.smart.notebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.smart.teacher\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"teacher\"]\n  },\n  \"application/vnd.software602.filler.form+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.software602.filler.form-xml-zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.solent.sdkm+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sdkm\",\"sdkd\"]\n  },\n  \"application/vnd.spotfire.dxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxp\"]\n  },\n  \"application/vnd.spotfire.sfs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfs\"]\n  },\n  \"application/vnd.sss-cod\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-dtf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-ntf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.stardivision.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdc\"]\n  },\n  \"application/vnd.stardivision.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sda\"]\n  },\n  \"application/vnd.stardivision.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdd\"]\n  },\n  \"application/vnd.stardivision.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smf\"]\n  },\n  \"application/vnd.stardivision.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdw\",\"vor\"]\n  },\n  \"application/vnd.stardivision.writer-global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgl\"]\n  },\n  \"application/vnd.stepmania.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"smzip\"]\n  },\n  \"application/vnd.stepmania.stepchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sm\"]\n  },\n  \"application/vnd.street-stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sun.wadl+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sun.xml.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxc\"]\n  },\n  \"application/vnd.sun.xml.calc.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stc\"]\n  },\n  \"application/vnd.sun.xml.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxd\"]\n  },\n  \"application/vnd.sun.xml.draw.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"std\"]\n  },\n  \"application/vnd.sun.xml.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxi\"]\n  },\n  \"application/vnd.sun.xml.impress.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sti\"]\n  },\n  \"application/vnd.sun.xml.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxm\"]\n  },\n  \"application/vnd.sun.xml.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxw\"]\n  },\n  \"application/vnd.sun.xml.writer.global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxg\"]\n  },\n  \"application/vnd.sun.xml.writer.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stw\"]\n  },\n  \"application/vnd.sus-calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sus\",\"susp\"]\n  },\n  \"application/vnd.svd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svd\"]\n  },\n  \"application/vnd.swiftview-ics\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.symbian.install\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sis\",\"sisx\"]\n  },\n  \"application/vnd.syncml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xsm\"]\n  },\n  \"application/vnd.syncml.dm+wbxml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bdm\"]\n  },\n  \"application/vnd.syncml.dm+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdm\"]\n  },\n  \"application/vnd.syncml.dm.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmtnds+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmtnds+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.ds.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tao.intent-module-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tao\"]\n  },\n  \"application/vnd.tcpdump.pcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcap\",\"cap\",\"dmp\"]\n  },\n  \"application/vnd.tmd.mediaflex.api+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tmobile-livetv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tmo\"]\n  },\n  \"application/vnd.trid.tpt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpt\"]\n  },\n  \"application/vnd.triscape.mxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxs\"]\n  },\n  \"application/vnd.trueapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tra\"]\n  },\n  \"application/vnd.truedoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ubisoft.webplayer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ufdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ufd\",\"ufdl\"]\n  },\n  \"application/vnd.uiq.theme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"utz\"]\n  },\n  \"application/vnd.umajin\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"umj\"]\n  },\n  \"application/vnd.unity\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"unityweb\"]\n  },\n  \"application/vnd.uoml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uoml\"]\n  },\n  \"application/vnd.uplanet.alert\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.alert-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.signal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uri-map\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.valve.source.material\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcx\"]\n  },\n  \"application/vnd.vd-study\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vectorworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.verimatrix.vcas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vidsoft.vidconference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.visio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsd\",\"vst\",\"vss\",\"vsw\"]\n  },\n  \"application/vnd.visionary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vis\"]\n  },\n  \"application/vnd.vividence.scriptfile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vsf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsf\"]\n  },\n  \"application/vnd.wap.sic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.slc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.wbxml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wbxml\"]\n  },\n  \"application/vnd.wap.wmlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlc\"]\n  },\n  \"application/vnd.wap.wmlscriptc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlsc\"]\n  },\n  \"application/vnd.webturbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wtb\"]\n  },\n  \"application/vnd.wfa.p2p\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.wsc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmf.bootstrap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica.package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nbp\"]\n  },\n  \"application/vnd.wordperfect\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpd\"]\n  },\n  \"application/vnd.wqd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wqd\"]\n  },\n  \"application/vnd.wrq-hp3000-labelled\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wt.stf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stf\"]\n  },\n  \"application/vnd.wv.csp+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wv.csp+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wv.ssp+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xacml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xara\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xar\"]\n  },\n  \"application/vnd.xfdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdl\"]\n  },\n  \"application/vnd.xfdl.webform\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmi+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.cpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.dpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.plan\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.ppkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.xlim\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.hv-dic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvd\"]\n  },\n  \"application/vnd.yamaha.hv-script\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvs\"]\n  },\n  \"application/vnd.yamaha.hv-voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvp\"]\n  },\n  \"application/vnd.yamaha.openscoreformat\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"osf\"]\n  },\n  \"application/vnd.yamaha.openscoreformat.osfpvg+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"osfpvg\"]\n  },\n  \"application/vnd.yamaha.remote-setup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.smaf-audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"saf\"]\n  },\n  \"application/vnd.yamaha.smaf-phrase\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spf\"]\n  },\n  \"application/vnd.yamaha.through-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.tunnel-udpencap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yaoweme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yellowriver-custom-menu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmp\"]\n  },\n  \"application/vnd.zul\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"zir\",\"zirz\"]\n  },\n  \"application/vnd.zzazz.deck+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"zaz\"]\n  },\n  \"application/voicexml+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vxml\"]\n  },\n  \"application/vq-rtcpxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/watcherinfo+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/whoispp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/whoispp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wgt\"]\n  },\n  \"application/winhlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hlp\"]\n  },\n  \"application/wita\": {\n    \"source\": \"iana\"\n  },\n  \"application/wordperfect5.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/wsdl+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wsdl\"]\n  },\n  \"application/wspolicy+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wspolicy\"]\n  },\n  \"application/x-7z-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"7z\"]\n  },\n  \"application/x-abiword\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"abw\"]\n  },\n  \"application/x-ace-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ace\"]\n  },\n  \"application/x-amf\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-apple-diskimage\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dmg\"]\n  },\n  \"application/x-authorware-bin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aab\",\"x32\",\"u32\",\"vox\"]\n  },\n  \"application/x-authorware-map\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aam\"]\n  },\n  \"application/x-authorware-seg\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aas\"]\n  },\n  \"application/x-bcpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bcpio\"]\n  },\n  \"application/x-bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/x-bittorrent\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"torrent\"]\n  },\n  \"application/x-blorb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"blb\",\"blorb\"]\n  },\n  \"application/x-bzip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz\"]\n  },\n  \"application/x-bzip2\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz2\",\"boz\"]\n  },\n  \"application/x-cbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]\n  },\n  \"application/x-cdlink\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcd\"]\n  },\n  \"application/x-cfs-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cfs\"]\n  },\n  \"application/x-chat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"chat\"]\n  },\n  \"application/x-chess-pgn\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgn\"]\n  },\n  \"application/x-chrome-extension\": {\n    \"extensions\": [\"crx\"]\n  },\n  \"application/x-cocoa\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"cco\"]\n  },\n  \"application/x-compress\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-conference\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nsc\"]\n  },\n  \"application/x-cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpio\"]\n  },\n  \"application/x-csh\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csh\"]\n  },\n  \"application/x-deb\": {\n    \"compressible\": false\n  },\n  \"application/x-debian-package\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"deb\",\"udeb\"]\n  },\n  \"application/x-dgc-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dgc\"]\n  },\n  \"application/x-director\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]\n  },\n  \"application/x-doom\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wad\"]\n  },\n  \"application/x-dtbncx+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ncx\"]\n  },\n  \"application/x-dtbook+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dtb\"]\n  },\n  \"application/x-dtbresource+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"res\"]\n  },\n  \"application/x-dvi\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"dvi\"]\n  },\n  \"application/x-envoy\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"evy\"]\n  },\n  \"application/x-eva\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"eva\"]\n  },\n  \"application/x-font-bdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bdf\"]\n  },\n  \"application/x-font-dos\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-framemaker\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-ghostscript\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gsf\"]\n  },\n  \"application/x-font-libgrx\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-linux-psf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"psf\"]\n  },\n  \"application/x-font-otf\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"otf\"]\n  },\n  \"application/x-font-pcf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcf\"]\n  },\n  \"application/x-font-snf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"snf\"]\n  },\n  \"application/x-font-speedo\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-sunos-news\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-ttf\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ttf\",\"ttc\"]\n  },\n  \"application/x-font-type1\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pfa\",\"pfb\",\"pfm\",\"afm\"]\n  },\n  \"application/x-font-vfont\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-freearc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"arc\"]\n  },\n  \"application/x-futuresplash\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"spl\"]\n  },\n  \"application/x-gca-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gca\"]\n  },\n  \"application/x-glulx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ulx\"]\n  },\n  \"application/x-gnumeric\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gnumeric\"]\n  },\n  \"application/x-gramps-xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gramps\"]\n  },\n  \"application/x-gtar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gtar\"]\n  },\n  \"application/x-gzip\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-hdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hdf\"]\n  },\n  \"application/x-httpd-php\": {\n    \"compressible\": true,\n    \"extensions\": [\"php\"]\n  },\n  \"application/x-install-instructions\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"install\"]\n  },\n  \"application/x-iso9660-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"iso\"]\n  },\n  \"application/x-java-archive-diff\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jardiff\"]\n  },\n  \"application/x-java-jnlp-file\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jnlp\"]\n  },\n  \"application/x-javascript\": {\n    \"compressible\": true\n  },\n  \"application/x-latex\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"latex\"]\n  },\n  \"application/x-lua-bytecode\": {\n    \"extensions\": [\"luac\"]\n  },\n  \"application/x-lzh-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lzh\",\"lha\"]\n  },\n  \"application/x-makeself\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"run\"]\n  },\n  \"application/x-mie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mie\"]\n  },\n  \"application/x-mobipocket-ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prc\",\"mobi\"]\n  },\n  \"application/x-mpegurl\": {\n    \"compressible\": false\n  },\n  \"application/x-ms-application\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"application\"]\n  },\n  \"application/x-ms-shortcut\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lnk\"]\n  },\n  \"application/x-ms-wmd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmd\"]\n  },\n  \"application/x-ms-wmz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmz\"]\n  },\n  \"application/x-ms-xbap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbap\"]\n  },\n  \"application/x-msaccess\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mdb\"]\n  },\n  \"application/x-msbinder\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obd\"]\n  },\n  \"application/x-mscardfile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"crd\"]\n  },\n  \"application/x-msclip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"clp\"]\n  },\n  \"application/x-msdos-program\": {\n    \"extensions\": [\"exe\"]\n  },\n  \"application/x-msdownload\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]\n  },\n  \"application/x-msmediaview\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mvb\",\"m13\",\"m14\"]\n  },\n  \"application/x-msmetafile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmf\",\"wmz\",\"emf\",\"emz\"]\n  },\n  \"application/x-msmoney\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mny\"]\n  },\n  \"application/x-mspublisher\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pub\"]\n  },\n  \"application/x-msschedule\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scd\"]\n  },\n  \"application/x-msterminal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"trm\"]\n  },\n  \"application/x-mswrite\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wri\"]\n  },\n  \"application/x-netcdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nc\",\"cdf\"]\n  },\n  \"application/x-ns-proxy-autoconfig\": {\n    \"compressible\": true,\n    \"extensions\": [\"pac\"]\n  },\n  \"application/x-nzb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nzb\"]\n  },\n  \"application/x-perl\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"pl\",\"pm\"]\n  },\n  \"application/x-pilot\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"prc\",\"pdb\"]\n  },\n  \"application/x-pkcs12\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"p12\",\"pfx\"]\n  },\n  \"application/x-pkcs7-certificates\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7b\",\"spc\"]\n  },\n  \"application/x-pkcs7-certreqresp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7r\"]\n  },\n  \"application/x-rar-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"rar\"]\n  },\n  \"application/x-redhat-package-manager\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"rpm\"]\n  },\n  \"application/x-research-info-systems\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ris\"]\n  },\n  \"application/x-sea\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"sea\"]\n  },\n  \"application/x-sh\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"sh\"]\n  },\n  \"application/x-shar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"shar\"]\n  },\n  \"application/x-shockwave-flash\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"swf\"]\n  },\n  \"application/x-silverlight-app\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xap\"]\n  },\n  \"application/x-sql\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sql\"]\n  },\n  \"application/x-stuffit\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"sit\"]\n  },\n  \"application/x-stuffitx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sitx\"]\n  },\n  \"application/x-subrip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"srt\"]\n  },\n  \"application/x-sv4cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4cpio\"]\n  },\n  \"application/x-sv4crc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4crc\"]\n  },\n  \"application/x-t3vm-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"t3\"]\n  },\n  \"application/x-tads\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gam\"]\n  },\n  \"application/x-tar\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"tar\"]\n  },\n  \"application/x-tcl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tcl\",\"tk\"]\n  },\n  \"application/x-tex\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tex\"]\n  },\n  \"application/x-tex-tfm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tfm\"]\n  },\n  \"application/x-texinfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"texinfo\",\"texi\"]\n  },\n  \"application/x-tgif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obj\"]\n  },\n  \"application/x-ustar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ustar\"]\n  },\n  \"application/x-wais-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"src\"]\n  },\n  \"application/x-web-app-manifest+json\": {\n    \"compressible\": true,\n    \"extensions\": [\"webapp\"]\n  },\n  \"application/x-www-form-urlencoded\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/x-x509-ca-cert\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"der\",\"crt\",\"pem\"]\n  },\n  \"application/x-xfig\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fig\"]\n  },\n  \"application/x-xliff+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/x-xpinstall\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"xpi\"]\n  },\n  \"application/x-xz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xz\"]\n  },\n  \"application/x-zmachine\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]\n  },\n  \"application/x400-bp\": {\n    \"source\": \"iana\"\n  },\n  \"application/xacml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xaml+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xaml\"]\n  },\n  \"application/xcap-att+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xcap-caps+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xcap-diff+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdf\"]\n  },\n  \"application/xcap-el+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xcap-error+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xcap-ns+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xcon-conference-info+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xcon-conference-info-diff+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xenc+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xenc\"]\n  },\n  \"application/xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xhtml\",\"xht\"]\n  },\n  \"application/xhtml-voice+xml\": {\n    \"source\": \"apache\"\n  },\n  \"application/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\",\"xsl\",\"xsd\"]\n  },\n  \"application/xml-dtd\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dtd\"]\n  },\n  \"application/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"application/xml-patch+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xmpp+xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/xop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xop\"]\n  },\n  \"application/xproc+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xpl\"]\n  },\n  \"application/xslt+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xslt\"]\n  },\n  \"application/xspf+xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xspf\"]\n  },\n  \"application/xv+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]\n  },\n  \"application/yang\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"yang\"]\n  },\n  \"application/yin+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"yin\"]\n  },\n  \"application/zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"zip\"]\n  },\n  \"application/zlib\": {\n    \"source\": \"iana\"\n  },\n  \"audio/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/3gpp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/3gpp2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/adpcm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"adp\"]\n  },\n  \"audio/amr\": {\n    \"source\": \"iana\"\n  },\n  \"audio/amr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/amr-wb+\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aptx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/asc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-advanced-lossless\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/basic\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"au\",\"snd\"]\n  },\n  \"audio/bv16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/bv32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/clearmode\": {\n    \"source\": \"iana\"\n  },\n  \"audio/cn\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dat12\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dls\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es201108\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202050\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202211\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202212\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dvi4\": {\n    \"source\": \"iana\"\n  },\n  \"audio/eac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evs\": {\n    \"source\": \"iana\"\n  },\n  \"audio/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g711-0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g719\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g722\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7221\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g723\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-24\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-40\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g728\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7291\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729d\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729e\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-efr\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-hr-08\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ilbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ip-mr_v2.5\": {\n    \"source\": \"iana\"\n  },\n  \"audio/isac\": {\n    \"source\": \"apache\"\n  },\n  \"audio/l16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l20\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l24\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/l8\": {\n    \"source\": \"iana\"\n  },\n  \"audio/lpc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/midi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mid\",\"midi\",\"kar\",\"rmi\"]\n  },\n  \"audio/mobile-xmf\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mp4a\",\"m4a\"]\n  },\n  \"audio/mp4a-latm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa-robust\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]\n  },\n  \"audio/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"audio/musepack\": {\n    \"source\": \"apache\"\n  },\n  \"audio/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"oga\",\"ogg\",\"spx\"]\n  },\n  \"audio/opus\": {\n    \"source\": \"iana\"\n  },\n  \"audio/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/prs.sid\": {\n    \"source\": \"iana\"\n  },\n  \"audio/qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/red\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/s3m\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s3m\"]\n  },\n  \"audio/silk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sil\"]\n  },\n  \"audio/smv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/speex\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t140c\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t38\": {\n    \"source\": \"iana\"\n  },\n  \"audio/telephone-event\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tone\": {\n    \"source\": \"iana\"\n  },\n  \"audio/uemclip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vdvi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vmr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.3gpp.iufp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.4sb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.audiokoz\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.celp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cisco.nse\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cmles.radio-events\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.anp1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.inf1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dece.audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uva\",\"uvva\"]\n  },\n  \"audio/vnd.digital-winds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"eol\"]\n  },\n  \"audio/vnd.dlna.adts\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mlp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mps\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2z\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pulse.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dra\"]\n  },\n  \"audio/vnd.dts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dts\"]\n  },\n  \"audio/vnd.dts.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dtshd\"]\n  },\n  \"audio/vnd.dvb.file\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.everad.plj\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.hns.audio\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.lucent.voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lvp\"]\n  },\n  \"audio/vnd.ms-playready.media.pya\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pya\"]\n  },\n  \"audio/vnd.nokia.mobile-xmf\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nortel.vbk\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nuera.ecelp4800\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp4800\"]\n  },\n  \"audio/vnd.nuera.ecelp7470\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp7470\"]\n  },\n  \"audio/vnd.nuera.ecelp9600\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp9600\"]\n  },\n  \"audio/vnd.octel.sbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rhetorex.32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rip\"]\n  },\n  \"audio/vnd.rn-realaudio\": {\n    \"compressible\": false\n  },\n  \"audio/vnd.sealedmedia.softseal.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.vmx.cvsd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.wave\": {\n    \"compressible\": false\n  },\n  \"audio/vorbis\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/vorbis-config\": {\n    \"source\": \"iana\"\n  },\n  \"audio/wav\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/wave\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"weba\"]\n  },\n  \"audio/x-aac\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"aac\"]\n  },\n  \"audio/x-aiff\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aif\",\"aiff\",\"aifc\"]\n  },\n  \"audio/x-caf\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"caf\"]\n  },\n  \"audio/x-flac\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"flac\"]\n  },\n  \"audio/x-m4a\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"m4a\"]\n  },\n  \"audio/x-matroska\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mka\"]\n  },\n  \"audio/x-mpegurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m3u\"]\n  },\n  \"audio/x-ms-wax\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wax\"]\n  },\n  \"audio/x-ms-wma\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wma\"]\n  },\n  \"audio/x-pn-realaudio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ram\",\"ra\"]\n  },\n  \"audio/x-pn-realaudio-plugin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmp\"]\n  },\n  \"audio/x-realaudio\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"ra\"]\n  },\n  \"audio/x-tta\": {\n    \"source\": \"apache\"\n  },\n  \"audio/x-wav\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/xm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xm\"]\n  },\n  \"chemical/x-cdx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cdx\"]\n  },\n  \"chemical/x-cif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cif\"]\n  },\n  \"chemical/x-cmdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmdf\"]\n  },\n  \"chemical/x-cml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cml\"]\n  },\n  \"chemical/x-csml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csml\"]\n  },\n  \"chemical/x-pdb\": {\n    \"source\": \"apache\"\n  },\n  \"chemical/x-xyz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xyz\"]\n  },\n  \"font/opentype\": {\n    \"compressible\": true,\n    \"extensions\": [\"otf\"]\n  },\n  \"image/bmp\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/cgm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cgm\"]\n  },\n  \"image/fits\": {\n    \"source\": \"iana\"\n  },\n  \"image/g3fax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3\"]\n  },\n  \"image/gif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gif\"]\n  },\n  \"image/ief\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ief\"]\n  },\n  \"image/jp2\": {\n    \"source\": \"iana\"\n  },\n  \"image/jpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpeg\",\"jpg\",\"jpe\"]\n  },\n  \"image/jpm\": {\n    \"source\": \"iana\"\n  },\n  \"image/jpx\": {\n    \"source\": \"iana\"\n  },\n  \"image/ktx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx\"]\n  },\n  \"image/naplps\": {\n    \"source\": \"iana\"\n  },\n  \"image/pjpeg\": {\n    \"compressible\": false\n  },\n  \"image/png\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"png\"]\n  },\n  \"image/prs.btif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"btif\"]\n  },\n  \"image/prs.pti\": {\n    \"source\": \"iana\"\n  },\n  \"image/pwg-raster\": {\n    \"source\": \"iana\"\n  },\n  \"image/sgi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgi\"]\n  },\n  \"image/svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"svg\",\"svgz\"]\n  },\n  \"image/t38\": {\n    \"source\": \"iana\"\n  },\n  \"image/tiff\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"tiff\",\"tif\"]\n  },\n  \"image/tiff-fx\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.adobe.photoshop\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"psd\"]\n  },\n  \"image/vnd.airzip.accelerator.azv\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.cns.inf2\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.dece.graphic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]\n  },\n  \"image/vnd.djvu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"djvu\",\"djv\"]\n  },\n  \"image/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"image/vnd.dwg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwg\"]\n  },\n  \"image/vnd.dxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxf\"]\n  },\n  \"image/vnd.fastbidsheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fbs\"]\n  },\n  \"image/vnd.fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fpx\"]\n  },\n  \"image/vnd.fst\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fst\"]\n  },\n  \"image/vnd.fujixerox.edmics-mmr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmr\"]\n  },\n  \"image/vnd.fujixerox.edmics-rlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rlc\"]\n  },\n  \"image/vnd.globalgraphics.pgb\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.microsoft.icon\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.mix\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.mozilla.apng\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.ms-modi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mdi\"]\n  },\n  \"image/vnd.ms-photo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wdp\"]\n  },\n  \"image/vnd.net-fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"npx\"]\n  },\n  \"image/vnd.radiance\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealed.png\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.gif\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.jpg\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.svf\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.tencent.tap\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.valve.source.texture\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.wap.wbmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wbmp\"]\n  },\n  \"image/vnd.xiff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xif\"]\n  },\n  \"image/vnd.zbrush.pcx\": {\n    \"source\": \"iana\"\n  },\n  \"image/webp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"webp\"]\n  },\n  \"image/x-3ds\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"3ds\"]\n  },\n  \"image/x-cmu-raster\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ras\"]\n  },\n  \"image/x-cmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmx\"]\n  },\n  \"image/x-freehand\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]\n  },\n  \"image/x-icon\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/x-jng\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jng\"]\n  },\n  \"image/x-mrsid-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sid\"]\n  },\n  \"image/x-ms-bmp\": {\n    \"source\": \"nginx\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/x-pcx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/x-pict\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pic\",\"pct\"]\n  },\n  \"image/x-portable-anymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pnm\"]\n  },\n  \"image/x-portable-bitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pbm\"]\n  },\n  \"image/x-portable-graymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgm\"]\n  },\n  \"image/x-portable-pixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ppm\"]\n  },\n  \"image/x-rgb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rgb\"]\n  },\n  \"image/x-tga\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tga\"]\n  },\n  \"image/x-xbitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbm\"]\n  },\n  \"image/x-xcf\": {\n    \"compressible\": false\n  },\n  \"image/x-xpixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xpm\"]\n  },\n  \"image/x-xwindowdump\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xwd\"]\n  },\n  \"message/cpim\": {\n    \"source\": \"iana\"\n  },\n  \"message/delivery-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/disposition-notification\": {\n    \"source\": \"iana\"\n  },\n  \"message/external-body\": {\n    \"source\": \"iana\"\n  },\n  \"message/feedback-report\": {\n    \"source\": \"iana\"\n  },\n  \"message/global\": {\n    \"source\": \"iana\"\n  },\n  \"message/global-delivery-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/global-disposition-notification\": {\n    \"source\": \"iana\"\n  },\n  \"message/global-headers\": {\n    \"source\": \"iana\"\n  },\n  \"message/http\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/imdn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"message/news\": {\n    \"source\": \"iana\"\n  },\n  \"message/partial\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/rfc822\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eml\",\"mime\"]\n  },\n  \"message/s-http\": {\n    \"source\": \"iana\"\n  },\n  \"message/sip\": {\n    \"source\": \"iana\"\n  },\n  \"message/sipfrag\": {\n    \"source\": \"iana\"\n  },\n  \"message/tracking-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.si.simp\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.wfa.wsc\": {\n    \"source\": \"iana\"\n  },\n  \"model/iges\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"igs\",\"iges\"]\n  },\n  \"model/mesh\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"msh\",\"mesh\",\"silo\"]\n  },\n  \"model/vnd.collada+xml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dae\"]\n  },\n  \"model/vnd.dwf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwf\"]\n  },\n  \"model/vnd.flatland.3dml\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gdl\"]\n  },\n  \"model/vnd.gs-gdl\": {\n    \"source\": \"apache\"\n  },\n  \"model/vnd.gs.gdl\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gtw\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtw\"]\n  },\n  \"model/vnd.moml+xml\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.mts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mts\"]\n  },\n  \"model/vnd.opengex\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.parasolid.transmit.binary\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.parasolid.transmit.text\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.valve.source.compiled-map\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.vtu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtu\"]\n  },\n  \"model/vrml\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"wrl\",\"vrml\"]\n  },\n  \"model/x3d+binary\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3db\",\"x3dbz\"]\n  },\n  \"model/x3d+fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"model/x3d+vrml\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3dv\",\"x3dvz\"]\n  },\n  \"model/x3d+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"x3d\",\"x3dz\"]\n  },\n  \"model/x3d-vrml\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/alternative\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/appledouble\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/byteranges\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/digest\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/form-data\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/header-set\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/mixed\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/parallel\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/related\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/report\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/signed\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/voice-message\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/x-mixed-replace\": {\n    \"source\": \"iana\"\n  },\n  \"text/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/cache-manifest\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"appcache\",\"manifest\"]\n  },\n  \"text/calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ics\",\"ifb\"]\n  },\n  \"text/calender\": {\n    \"compressible\": true\n  },\n  \"text/cmd\": {\n    \"compressible\": true\n  },\n  \"text/coffeescript\": {\n    \"extensions\": [\"coffee\",\"litcoffee\"]\n  },\n  \"text/css\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"css\"]\n  },\n  \"text/csv\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csv\"]\n  },\n  \"text/csv-schema\": {\n    \"source\": \"iana\"\n  },\n  \"text/directory\": {\n    \"source\": \"iana\"\n  },\n  \"text/dns\": {\n    \"source\": \"iana\"\n  },\n  \"text/ecmascript\": {\n    \"source\": \"iana\"\n  },\n  \"text/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"text/enriched\": {\n    \"source\": \"iana\"\n  },\n  \"text/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"text/grammar-ref-list\": {\n    \"source\": \"iana\"\n  },\n  \"text/hjson\": {\n    \"extensions\": [\"hjson\"]\n  },\n  \"text/html\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"html\",\"htm\",\"shtml\"]\n  },\n  \"text/jade\": {\n    \"extensions\": [\"jade\"]\n  },\n  \"text/javascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"text/jcr-cnd\": {\n    \"source\": \"iana\"\n  },\n  \"text/jsx\": {\n    \"compressible\": true,\n    \"extensions\": [\"jsx\"]\n  },\n  \"text/less\": {\n    \"extensions\": [\"less\"]\n  },\n  \"text/markdown\": {\n    \"source\": \"iana\"\n  },\n  \"text/mathml\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"mml\"]\n  },\n  \"text/mizar\": {\n    \"source\": \"iana\"\n  },\n  \"text/n3\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"n3\"]\n  },\n  \"text/parameters\": {\n    \"source\": \"iana\"\n  },\n  \"text/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/plain\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]\n  },\n  \"text/provenance-notation\": {\n    \"source\": \"iana\"\n  },\n  \"text/prs.fallenstein.rst\": {\n    \"source\": \"iana\"\n  },\n  \"text/prs.lines.tag\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dsc\"]\n  },\n  \"text/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/red\": {\n    \"source\": \"iana\"\n  },\n  \"text/rfc822-headers\": {\n    \"source\": \"iana\"\n  },\n  \"text/richtext\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtx\"]\n  },\n  \"text/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"text/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"text/sgml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sgml\",\"sgm\"]\n  },\n  \"text/stylus\": {\n    \"extensions\": [\"stylus\",\"styl\"]\n  },\n  \"text/t140\": {\n    \"source\": \"iana\"\n  },\n  \"text/tab-separated-values\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tsv\"]\n  },\n  \"text/troff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]\n  },\n  \"text/turtle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ttl\"]\n  },\n  \"text/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/uri-list\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uri\",\"uris\",\"urls\"]\n  },\n  \"text/vcard\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vcard\"]\n  },\n  \"text/vnd.a\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.abc\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.curl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"curl\"]\n  },\n  \"text/vnd.curl.dcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dcurl\"]\n  },\n  \"text/vnd.curl.mcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mcurl\"]\n  },\n  \"text/vnd.curl.scurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scurl\"]\n  },\n  \"text/vnd.debian.copyright\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.dmclientscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"text/vnd.esmertec.theme-descriptor\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.fly\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fly\"]\n  },\n  \"text/vnd.fmi.flexstor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flx\"]\n  },\n  \"text/vnd.graphviz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gv\"]\n  },\n  \"text/vnd.in3d.3dml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3dml\"]\n  },\n  \"text/vnd.in3d.spot\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spot\"]\n  },\n  \"text/vnd.iptc.newsml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.iptc.nitf\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.latex-z\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.motorola.reflex\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ms-mediapackage\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.net2phone.commcenter.command\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.radisys.msml-basic-layout\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.si.uricatalogue\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sun.j2me.app-descriptor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jad\"]\n  },\n  \"text/vnd.trolltech.linguist\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.si\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.sl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.wml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wml\"]\n  },\n  \"text/vnd.wap.wmlscript\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmls\"]\n  },\n  \"text/vtt\": {\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"vtt\"]\n  },\n  \"text/x-asm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s\",\"asm\"]\n  },\n  \"text/x-c\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]\n  },\n  \"text/x-component\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"htc\"]\n  },\n  \"text/x-fortran\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f\",\"for\",\"f77\",\"f90\"]\n  },\n  \"text/x-gwt-rpc\": {\n    \"compressible\": true\n  },\n  \"text/x-handlebars-template\": {\n    \"extensions\": [\"hbs\"]\n  },\n  \"text/x-java-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"java\"]\n  },\n  \"text/x-jquery-tmpl\": {\n    \"compressible\": true\n  },\n  \"text/x-lua\": {\n    \"extensions\": [\"lua\"]\n  },\n  \"text/x-markdown\": {\n    \"compressible\": true,\n    \"extensions\": [\"markdown\",\"md\",\"mkd\"]\n  },\n  \"text/x-nfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nfo\"]\n  },\n  \"text/x-opml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"opml\"]\n  },\n  \"text/x-pascal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p\",\"pas\"]\n  },\n  \"text/x-processing\": {\n    \"compressible\": true,\n    \"extensions\": [\"pde\"]\n  },\n  \"text/x-sass\": {\n    \"extensions\": [\"sass\"]\n  },\n  \"text/x-scss\": {\n    \"extensions\": [\"scss\"]\n  },\n  \"text/x-setext\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"etx\"]\n  },\n  \"text/x-sfv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sfv\"]\n  },\n  \"text/x-suse-ymp\": {\n    \"compressible\": true,\n    \"extensions\": [\"ymp\"]\n  },\n  \"text/x-uuencode\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uu\"]\n  },\n  \"text/x-vcalendar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcs\"]\n  },\n  \"text/x-vcard\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcf\"]\n  },\n  \"text/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\"]\n  },\n  \"text/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"text/yaml\": {\n    \"extensions\": [\"yaml\",\"yml\"]\n  },\n  \"video/1d-interleaved-parityfec\": {\n    \"source\": \"apache\"\n  },\n  \"video/3gpp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"3gp\",\"3gpp\"]\n  },\n  \"video/3gpp-tt\": {\n    \"source\": \"apache\"\n  },\n  \"video/3gpp2\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"3g2\"]\n  },\n  \"video/bmpeg\": {\n    \"source\": \"apache\"\n  },\n  \"video/bt656\": {\n    \"source\": \"apache\"\n  },\n  \"video/celb\": {\n    \"source\": \"apache\"\n  },\n  \"video/dv\": {\n    \"source\": \"apache\"\n  },\n  \"video/h261\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"h261\"]\n  },\n  \"video/h263\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"h263\"]\n  },\n  \"video/h263-1998\": {\n    \"source\": \"apache\"\n  },\n  \"video/h263-2000\": {\n    \"source\": \"apache\"\n  },\n  \"video/h264\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"h264\"]\n  },\n  \"video/h264-rcdo\": {\n    \"source\": \"apache\"\n  },\n  \"video/h264-svc\": {\n    \"source\": \"apache\"\n  },\n  \"video/jpeg\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"jpgv\"]\n  },\n  \"video/jpeg2000\": {\n    \"source\": \"apache\"\n  },\n  \"video/jpm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"jpm\",\"jpgm\"]\n  },\n  \"video/mj2\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mj2\",\"mjp2\"]\n  },\n  \"video/mp1s\": {\n    \"source\": \"apache\"\n  },\n  \"video/mp2p\": {\n    \"source\": \"apache\"\n  },\n  \"video/mp2t\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ts\"]\n  },\n  \"video/mp4\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"mp4\",\"mp4v\",\"mpg4\"]\n  },\n  \"video/mp4v-es\": {\n    \"source\": \"apache\"\n  },\n  \"video/mpeg\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]\n  },\n  \"video/mpeg4-generic\": {\n    \"source\": \"apache\"\n  },\n  \"video/mpv\": {\n    \"source\": \"apache\"\n  },\n  \"video/nv\": {\n    \"source\": \"apache\"\n  },\n  \"video/ogg\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"ogv\"]\n  },\n  \"video/parityfec\": {\n    \"source\": \"apache\"\n  },\n  \"video/pointer\": {\n    \"source\": \"apache\"\n  },\n  \"video/quicktime\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"qt\",\"mov\"]\n  },\n  \"video/raw\": {\n    \"source\": \"apache\"\n  },\n  \"video/rtp-enc-aescm128\": {\n    \"source\": \"apache\"\n  },\n  \"video/rtx\": {\n    \"source\": \"apache\"\n  },\n  \"video/smpte292m\": {\n    \"source\": \"apache\"\n  },\n  \"video/ulpfec\": {\n    \"source\": \"apache\"\n  },\n  \"video/vc1\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.cctv\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.dece.hd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uvh\",\"uvvh\"]\n  },\n  \"video/vnd.dece.mobile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uvm\",\"uvvm\"]\n  },\n  \"video/vnd.dece.mp4\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.dece.pd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uvp\",\"uvvp\"]\n  },\n  \"video/vnd.dece.sd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uvs\",\"uvvs\"]\n  },\n  \"video/vnd.dece.video\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uvv\",\"uvvv\"]\n  },\n  \"video/vnd.directv.mpeg\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.directv.mpeg-tts\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.dlna.mpeg-tts\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.dvb.file\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dvb\"]\n  },\n  \"video/vnd.fvt\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fvt\"]\n  },\n  \"video/vnd.hns.video\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-1010\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-2005\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-1010\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-2005\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.iptvforum.ttsavc\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.iptvforum.ttsmpeg2\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.motorola.video\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.motorola.videop\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.mpegurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mxu\",\"m4u\"]\n  },\n  \"video/vnd.ms-playready.media.pyv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pyv\"]\n  },\n  \"video/vnd.nokia.interleaved-multimedia\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.nokia.videovoip\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.objectvideo\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.sealed.mpeg1\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.sealed.mpeg4\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.sealed.swf\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.sealedmedia.softseal.mov\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.uvvu.mp4\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uvu\",\"uvvu\"]\n  },\n  \"video/vnd.vivo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"viv\"]\n  },\n  \"video/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"webm\"]\n  },\n  \"video/x-f4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f4v\"]\n  },\n  \"video/x-fli\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fli\"]\n  },\n  \"video/x-flv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"flv\"]\n  },\n  \"video/x-m4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m4v\"]\n  },\n  \"video/x-matroska\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"mkv\",\"mk3d\",\"mks\"]\n  },\n  \"video/x-mng\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mng\"]\n  },\n  \"video/x-ms-asf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"asf\",\"asx\"]\n  },\n  \"video/x-ms-vob\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vob\"]\n  },\n  \"video/x-ms-wm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wm\"]\n  },\n  \"video/x-ms-wmv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"wmv\"]\n  },\n  \"video/x-ms-wmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmx\"]\n  },\n  \"video/x-ms-wvx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wvx\"]\n  },\n  \"video/x-msvideo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"avi\"]\n  },\n  \"video/x-sgi-movie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"movie\"]\n  },\n  \"video/x-smv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smv\"]\n  },\n  \"x-conference/x-cooltalk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ice\"]\n  },\n  \"x-shader/x-fragment\": {\n    \"compressible\": true\n  },\n  \"x-shader/x-vertex\": {\n    \"compressible\": true\n  }\n}","var system = {};\nmodule['exports'] = system;\nsystem.directoryPaths = require(\"./directoryPaths\");\nsystem.mimeTypes = require(\"./mimeTypes\");\n","module[\"exports\"] = [\n  \"Aston Martin\",\n  \"Audi\",\n  \"Bentley\",\n  \"BMW\",\n  \"Bugatti\",\n  \"Cadillac\",\n  \"Chevrolet\",\n  \"Chrysler\",\n  \"Dodge\",\n  \"Ferrari\",\n  \"Fiat\",\n  \"Ford\",\n  \"Honda\",\n  \"Hyundai\",\n  \"Jaguar\",\n  \"Jeep\",\n  \"Kia\",\n  \"Lamborghini\",\n  \"Land Rover\",\n  \"Maserati\",\n  \"Mazda\",\n  \"Mercedes Benz\",\n  \"Mini\",\n  \"Nissan\",\n  \"Polestar\",\n  \"Porsche\",\n  \"Rolls Royce\",\n  \"Smart\",\n  \"Tesla\",\n  \"Toyota\",\n  \"Volkswagen\",\n  \"Volvo\"\n];\n","module[\"exports\"] = [\n  \"Fiesta\",\n  \"Focus\",\n  \"Taurus\",\n  \"Mustang\",\n  \"Explorer\",\n  \"Expedition\",\n  \"F-150\",\n  \"Model T\",\n  \"Ranchero\",\n  \"Volt\",\n  \"Cruze\",\n  \"Malibu\",\n  \"Impala\",\n  \"Camaro\",\n  \"Corvette\",\n  \"Colorado\",\n  \"Silverado\",\n  \"El Camino\",\n  \"CTS\",\n  \"XTS\",\n  \"ATS\",\n  \"Escalade\",\n  \"Alpine\",\n  \"Charger\",\n  \"LeBaron\",\n  \"PT Cruiser\",\n  \"Challenger\",\n  \"Durango\",\n  \"Grand Caravan\",\n  \"Wrangler\",\n  \"Grand Cherokee\",\n  \"Roadster\",\n  \"Model S\",\n  \"Model 3\",\n  \"Camry\",\n  \"Prius\",\n  \"Land Cruiser\",\n  \"Accord\",\n  \"Civic\",\n  \"Element\",\n  \"Sentra\",\n  \"Altima\",\n  \"A8\",\n  \"A4\",\n  \"Beetle\",\n  \"Jetta\",\n  \"Golf\",\n  \"911\",\n  \"Spyder\",\n  \"Countach\",\n  \"Mercielago\",\n  \"Aventador\",\n  \"1\",\n  \"2\",\n  \"Fortwo\",\n  \"V90\",\n  \"XC90\",\n  \"CX-9\",\n];\n","module[\"exports\"] = [\n  \"Cargo Van\",\n  \"Convertible\",\n  \"Coupe\",\n  \"Crew Cab Pickup\",\n  \"Extended Cab Pickup\",\n  \"Hatchback\",\n  \"Minivan\",\n  \"Passenger Van\",\n  \"SUV\",\n  \"Sedan\",\n  \"Wagon\"\n];\n","module[\"exports\"] = [\n  \"Diesel\",\n  \"Electric\",\n  \"Gasoline\",\n  \"Hybrid\"\n];\n","var vehicle = {};\nmodule[\"exports\"] = vehicle;\nvehicle.manufacturer = require(\"./manufacturer\");\nvehicle.model = require(\"./model\");\nvehicle.type = require(\"./vehicle_type\");\nvehicle.fuel = require(\"./fuel\");\n","module[\"exports\"] = [\n    \"Rock\",\n    \"Metal\",\n    \"Pop\",\n    \"Electronic\",\n    \"Folk\",\n    \"World\",\n    \"Country\",\n    \"Jazz\",\n    \"Funk\",\n    \"Soul\",\n    \"Hip Hop\",\n    \"Classical\",\n    \"Latin\",\n    \"Reggae\",\n    \"Stage And Screen\",\n    \"Blues\",\n    \"Non Music\",\n    \"Rap\"\n];\n","var music = {};\nmodule['exports'] = music;\nmusic.genre = require(\"./genre\");\n","var en = {};\nmodule['exports'] = en;\nen.title = \"English\";\nen.separator = \" & \";\nen.address = require(\"./address\");\nen.company = require(\"./company\");\nen.internet = require(\"./internet\");\nen.database = require(\"./database\");\nen.lorem = require(\"./lorem\");\nen.name = require(\"./name\");\nen.phone_number = require(\"./phone_number\");\nen.cell_phone = require(\"./cell_phone\");\nen.business = require(\"./business\");\nen.commerce = require(\"./commerce\");\nen.team = require(\"./team\");\nen.hacker = require(\"./hacker\");\nen.app = require(\"./app\");\nen.finance = require(\"./finance\");\nen.date = require(\"./date\");\nen.system = require(\"./system\");\nen.vehicle = require(\"./vehicle\");\nen.music = require(\"./music\");\n","var Faker = require('../lib');\nvar faker = new Faker({ locale: 'pt_BR', localeFallback: 'en' });\nfaker.locales['pt_BR'] = require('../lib/locales/pt_BR');\nfaker.locales['en'] = require('../lib/locales/en');\nmodule['exports'] = faker;\n","import { generateCPF, generateCNPJ, formatCPF, formatCNPJ } from '@brazilian-utils/brazilian-utils'\nimport { name, internet, phone, finance, vehicle, random } from 'faker/locale/pt_BR'\n\nconst fullName = `${name.firstName()} ${name.lastName()}`\nconst email = internet.email()\nconst mobilePhone = phone.phoneNumber('11 #####-####')\nconst cpf = formatCPF(generateCPF())\n\n\nconst cnpj = formatCNPJ(generateCNPJ())\nconst bankAccount = finance.account()\nconst bankAgency = finance.mask()\nconst licensePlate = vehicle.vrm('###-0000')\n\n\nconst inputs = {\n  name: fullName,\n  email: email,\n  phone: mobilePhone,\n  cpf: cpf,\n  cnpj: cnpj,\n  account: bankAccount,\n  agency: bankAgency,\n  license: licensePlate,\n}\n\nconst fillInputs = inputs => Object.entries(inputs).forEach(([id, value]) => {\n  const el = document.getElementById(id)\n  el.value = value\n})\n\nfillInputs(inputs)\n"]}